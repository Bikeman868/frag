{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/BasicCube.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/./src/Shapes/SeparatedCube.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","public","__private","action","parent","gameTick","frameTick","undefined","stopAt","disposeOnStop","dispose","sequence","step","sequenceIndex","nextStepTick","stop","length","autoRestart","start","duration","nextGameTick","interval","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","perform","repeatTicks","actionToRepeat","gameTicks","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","i","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","is3d","matrix","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","transform","Transform","translateXYZ","rotateXYZ","scaleXYZ","Transform2D","translateXY","rotate","scaleXY","getMatrix","channelName","console","warn","ParallelAnimationAction","forEach","a","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","add","getLoop","ValueAnimationAction","onStart","onStop","onStep","endTick","duraction","r","OrthographicCamera","x","y","z","fov","PI","zNear","zFar","xScale","aspectRatio","worldToClipTransform","computeTransformMatrix","yScale","zScale","zOffset","identity","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","UiCamera","horizontalScale","scenes","animations","startTime","performance","now","mainScene","correctClock","serverTick","difference","gameTickMs","scene","addScene","removeScene","splice","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","t1","fps","setTimeout","renderInterval","document","getElementById","error","getContext","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","init","alert","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","tests","check","vector","expected","m4Xv4","expectArray","t2","t3","run","test","m3Xm3","uniformMatrix3fv","AssetCatalog","shader","defaultTextures","defaultTexturePixels","Uint8Array","diffuse","Texture","dataFormat","RGBA","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","models","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","log","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","materialStore","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","assetCatalog","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","context","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","texture","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","UNSIGNED_BYTE","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","texImage2D","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","uniforms","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","actual","abs","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","Vector","v1","sub","v2","normalize","cross","makeVectorFromArray2D","makeVectorFromArray3D","zero","dimensions","mult","div","sum","sqrt","average","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","color","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","count","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","n","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","attributes","position","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","clone","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","modelToWorldTransform","modelToClipTransform","animationMatrix","localMatrix","modelToWorldMatrix","modelToClipMatrix","bind","clipMatrix","modelMatrix","unbind","Scene","sceneObjects","activeCamera","cameraUpdated","sceneObject","camera","SceneObject","enabled","animationPosition","childModelName","objectAnimation","combineTransforms","parentMatrix","childMatrix","getPosition","modelTransform","getTransform","ScenePosition","ensureAnimationPosition","deleteAnimationPosition","getModelToWorldTransform","animationTransform","disable","rotation","translation","isDirty","ensureTransform","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","rotateBy","euler","rotateByXYZ","getPositionX","getPositionY","getPositionZ","positionXYZ","positionX","positionY","positionZ","moveBy","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","createShader","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","vSource","addUniformDeclarations","fSource","addVaryingDeclarations","statement","addLogic","VERTEX_SHADER","FRAGMENT_SHADER","bindList","unbindList","getAttribLocation","getUniformLocation","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","useProgram","uiShader","verticiesXY","matrix2D","BasicCube","options","indexes","u","corner","e","Cube","facets","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","up","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","SeparatedCube","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["﻿// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.disposeOnStop) public.dispose();\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","﻿// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        public.duration = public.interval * public.frames;\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n        is3d: true,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        if (!private.matrix) {\r\n            let transform;\r\n            if (private.is3d) {\r\n                transform = window.frag.Transform()\r\n                    .translateXYZ(private.translateX, private.translateY, private.translateZ)\r\n                    .rotateXYZ(private.rotateX, private.rotateY, private.rotateZ)\r\n                    .scaleXYZ(private.scaleX, private.scaleY, private.scaleZ);\r\n            } else {\r\n                transform = window.frag.Transform2D()\r\n                    .translateXY(private.translateX, private.translateY)\r\n                    .rotate(private.rotateZ)\r\n                    .scaleXY(private.scaleX, private.scaleY);\r\n            }\r\n            private.matrix = transform.getMatrix();\r\n        }\r\n        return private.matrix;\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.translateX = value;\r\n                        if (private.matrix) private.matrix[12] = value;\r\n                    }\r\n                return function (value) {\r\n                    private.translateX = value;\r\n                    if (private.matrix) private.matrix[6] = value;\r\n                };\r\n            case \"translate-y\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.translateY = value;\r\n                        if (private.matrix) private.matrix[13] = value;\r\n                    }\r\n                return function (value) {\r\n                    private.translateY = value;\r\n                    if (private.matrix) private.matrix[7] = value;\r\n                };\r\n            case \"translate-z\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.translateZ = value;\r\n                        if (private.matrix) private.matrix[14] = value;\r\n                    }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    private.scaleX = value;\r\n                    private.matrix = null;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    private.scaleY = value;\r\n                    private.matrix = null;\r\n                };\r\n            case \"scale-z\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.scaleZ = value;\r\n                        private.matrix = null;\r\n                    }\r\n\r\n            case \"rotate-x\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.rotateX = value;\r\n                        private.matrix = null;\r\n                    }\r\n            case \"rotate-y\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.rotateY = value;\r\n                        private.matrix = null;\r\n                    }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    private.rotateZ = value;\r\n                    private.matrix = null;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation().sequence([action], modelAnimation.getLoop());\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duraction;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿(function () {\r\n    const frag = window.frag;\r\n\r\n    const scenes = [];\r\n    const animations = [];\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animations.push(animation);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            if (animations[i] === animation) {\r\n                animations.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            // TODO: sort animations into buckets according to how far away from next step\r\n            // TODO: keep a separate list of animations that are stopped\r\n            let animation = animations[i];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            let gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            mainScene.draw(gl);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(gl);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    render();\r\n})();\r\n","﻿/* To customize Frag for your application, assign an object\r\n   to window.frag before loading the Frag library. The object you \r\n   assign can contain the canvas to draw on and an initialization \r\n   function as illustrated by the following example:\r\n\r\nwindow.frag = {\r\n    canvas: document.getElementById(\"my-canvas\"),\r\n    init: function(frag) {\r\n        frag.gl.clearColor(0, 0, 0, 1);\r\n        frag.debugShaderBuilder = true;\r\n        frag.renderInterval = 10;\r\n        frag.gameTickMs = 50;\r\n    }\r\n};\r\n*/\r\n\r\nwindow.frag = (function (frag) {\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.init) frag.init(frag);\r\n\r\n    return frag;\r\n})(window.frag || {});","﻿window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","﻿// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);","﻿// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model()\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (materialStore, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = materialStore.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(materialStore, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" frames\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const transform = frag.Transform()\r\n            .translateXYZ(context.header.getFloat32(headerOffset + 0, littleEndian), context.header.getFloat32(headerOffset + 4, littleEndian), context.header.getFloat32(headerOffset + 8, littleEndian))\r\n            .rotateXYZ(context.header.getFloat32(headerOffset + 12, littleEndian), context.header.getFloat32(headerOffset + 16, littleEndian), context.header.getFloat32(headerOffset + 20, littleEndian))\r\n            .scaleXYZ(context.header.getFloat32(headerOffset + 24, littleEndian), context.header.getFloat32(headerOffset + 28, littleEndian), context.header.getFloat32(headerOffset + 32, littleEndian));\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations. Paint mesh \" + meshIndex + \" with material \" + materialIndex);\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot).transform(transform);\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw(gl);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);","﻿window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    makeVectorFromArray2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    makeVectorFromArray3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) / 2);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n}\r\n","﻿// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Model = function (parent) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n        transform: frag.Transform().identity(), // assume 3D\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: []\r\n    };\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.transform = function (value) {\r\n        private.transform = value;\r\n        return public;\r\n    }\r\n\r\n    public.getTransform = function () {\r\n        return private.transform;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== private.transform.is3d){\r\n            const m = private.transform.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" transform and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, modelToWorldTransform, modelToClipTransform, animationMap) {\r\n        let animationMatrix;\r\n        if (animationMap && private.name) {\r\n            const animationState = animationMap[private.name];\r\n            if (animationState) animationMatrix = animationState.getMatrix();\r\n        }\r\n\r\n        let localMatrix = private.transform.getMatrix();\r\n        if (animationMatrix) {\r\n            if (private.transform.is3d) localMatrix = frag.Matrix.m4Xm4(localMatrix, animationMatrix);\r\n            else localMatrix = frag.Matrix.m3Xm3(localMatrix, animationMatrix);\r\n        }\r\n\r\n        const modelToWorldMatrix = modelToWorldTransform.getMatrix();\r\n        const modelToClipMatrix = modelToClipTransform.getMatrix();\r\n\r\n        if (private.transform.is3d) {\r\n            modelToWorldTransform = frag.Transform(frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix));\r\n            modelToClipTransform = frag.Transform(frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix));\r\n        } else {\r\n            modelToWorldTransform = frag.Transform2D(frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix));\r\n            modelToClipTransform = frag.Transform2D(frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix));\r\n        }\r\n\r\n        const shader = public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData) {\r\n            shader.bind(gl);\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                modelToClipTransform.apply(gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                modelToWorldTransform.apply(gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(gl, shader);\r\n\r\n            shader.unbind(gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(gl, modelToWorldTransform, modelToClipTransform, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl) {\r\n        if (private.activeCamera) {\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(gl, private.activeCamera.worldToClipTransform);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.SceneObject = function (model) {\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        position: null,\r\n        animationPosition: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    const combineTransforms = function (parent, child) {\r\n        const parentMatrix = parent.getMatrix();\r\n        const childMatrix = child.getMatrix();\r\n        if (parent.is3d) return frag.Transform(frag.Matrix.m4Xm4(parentMatrix, childMatrix));\r\n        return frag.Transform2D(frag.Matrix.m3Xm3(parentMatrix, childMatrix));\r\n    };\r\n\r\n    public.getPosition = function () {\r\n        if (private.position) return private.position;\r\n        const modelTransform = private.model.getTransform();\r\n        private.position = window.frag.ScenePosition(modelTransform.clone());\r\n        return private.position;\r\n    };\r\n\r\n    public.ensureAnimationPosition = function () {\r\n        if (private.animationPosition) return private.animationPosition;\r\n        const modelTransform = private.model.getTransform();\r\n        if (!modelTransform) return null;\r\n        private.animationPosition = window.frag.ScenePosition(modelTransform.clone());\r\n        return private.animationPosition;\r\n    };\r\n\r\n    public.deleteAnimationPosition = function () {\r\n        private.animationPosition = null;\r\n        return public;\r\n    };\r\n\r\n    private.getModelToWorldTransform = function () {\r\n        const position = public.getPosition();\r\n        let transform = combineTransforms(private.model.getTransform(), position.getTransform());\r\n        if (!private.animationPosition) return transform;\r\n        const animationTransform = private.animationPosition.getTransform();\r\n        return combineTransforms(transform, animationTransform);\r\n    };\r\n\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    public.dispose = function() {\r\n        public.disable();\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, worldToClipTransform) {\r\n        if (!private.enabled) return public;\r\n        const modelToWorldTransform = private.getModelToWorldTransform();\r\n        if (!modelToWorldTransform) return public;\r\n\r\n        let modelToClipTransform = combineTransforms(worldToClipTransform, modelToWorldTransform);\r\n        private.model.draw(gl, modelToWorldTransform, modelToClipTransform, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","﻿window.frag.ScenePosition = function (transform) {\r\n    const private = {\r\n        scale: {\r\n            x: 1,\r\n            y: 1,\r\n            z: 1\r\n        },\r\n        rotation: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        },\r\n        translation: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        },\r\n        transform: transform,\r\n        isDirty: true\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTransform = function () {\r\n        if (!private.isDirty) return;\r\n        private.isDirty = false;\r\n        if (private.transform.is3d) {\r\n            private.transform\r\n                .identity()\r\n                .translateXYZ(private.translation.x, private.translation.y, private.translation.z)\r\n                .rotateXYZ(private.rotation.x, private.rotation.y, private.rotation.z)\r\n                .scaleXYZ(private.scale.x, private.scale.y, private.scale.z);\r\n        } else {\r\n            private.transform\r\n                .identity()\r\n                .translateXY(private.translation.x, private.translation.y)\r\n                .rotate(private.rotation.z)\r\n                .scaleXY(private.scale.x, private.scale.y);\r\n        }\r\n    }\r\n\r\n    public.transform = function (value) {\r\n        private.transform = value;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.getTransform = function () {\r\n        private.ensureTransform();\r\n        return private.transform;\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.scale.x;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.scale.y;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.scale.z;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.scale.x = s;\r\n        private.scale.y = s;\r\n        private.scale.z = s;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.scale.x = x;\r\n        private.scale.y = y;\r\n        private.scale.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.scale.x = x;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.scale.y = y;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.scale.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.rotateXYZ(\r\n            private.scale.x * scales[0],\r\n            private.scale.y * scales[1],\r\n            private.scale.z * scales[2]);\r\n\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.rotateXYZ(\r\n            private.scale.x * xScale,\r\n            private.scale.y * yScale,\r\n            private.scale.z * zScale);\r\n\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.rotation.x;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.rotation.y;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.rotation.z;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.rotation.x = x;\r\n        private.rotation.y = y;\r\n        private.rotation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.rotation.x = x;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.rotation.y = y;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.rotation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.rotation.x + euler[0],\r\n            private.rotation.y + euler[1],\r\n            private.rotation.z + euler[2]);\r\n\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.rotation.x + x,\r\n            private.rotation.y + y,\r\n            private.rotation.z + z);\r\n\r\n    }\r\n\r\n    public.getPositionX = function () {\r\n        return private.translation.x;\r\n    }\r\n\r\n    public.getPositionY = function () {\r\n        return private.translation.y;\r\n    }\r\n\r\n    public.getPositionZ = function () {\r\n        return private.translation.z;\r\n    }\r\n\r\n    public.positionXYZ = function (x, y, z) {\r\n        private.translation.x = x;\r\n        private.translation.y = y;\r\n        private.translation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.positionX = function (x) {\r\n        private.translation.x = x;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.positionY = function (y) {\r\n        private.translation.y = y;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.positionZ = function (z) {\r\n        private.translation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.positionXYZ(\r\n            private.translation.x + direction[0],\r\n            private.translation.y + direction[1],\r\n            private.translation.z + direction[2]);\r\n\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.positionXYZ(\r\n            private.translation.x + x,\r\n            private.translation.y + y,\r\n            private.translation.z + z);\r\n\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.makeVectorFromArray2D(array, index);\r\n        return frag.Vector.makeVectorFromArray3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","﻿window.frag.uiShader = window.frag.Shader()\r\n    .name(\"UI\")\r\n    .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n    .matrix2D()       // Transformation matricies are 2D\r\n    .diffuseTexture() // Adds support for diffuse texture mapping\r\n    .compile();       // Compile the shader\r\n","﻿// This cube has the minimum vertex count but only texture maps correctly on 4 sides\r\n// http://www.cs.umd.edu/gvil/papers/av_ts.pdf\r\nwindow.frag.BasicCube = function (options) {\r\n    const u0 = 0;\r\n    const u1 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const verticies = [\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, -1,\r\n        -1, -1, -1,\r\n        +1, +1, +1,\r\n        -1, +1, +1,\r\n        -1, -1, +1,\r\n        +1, -1, +1,\r\n    ];\r\n\r\n    const uvs = [\r\n        u0, v3,\r\n        u0, v0,\r\n        u0, v2,\r\n        u0, v1,\r\n        u1, v3,\r\n        u1, v0,\r\n        u1, v1,\r\n        u1, v2,\r\n    ];\r\n\r\n    const draw = function (indexes) {\r\n        const v = [];\r\n        const u = [];\r\n        const c = options.color ? [] : undefined;\r\n        for (var i = 0; i < indexes.length; i++) {\r\n            const corner = indexes[i];\r\n            v.push(verticies[corner * 3 + 0]);\r\n            v.push(verticies[corner * 3 + 1]);\r\n            v.push(verticies[corner * 3 + 2]);\r\n\r\n            if (options.color) {\r\n                options.color.array.forEach(e => { c.push(e); });\r\n            }\r\n\r\n            u.push(uvs[corner * 2 + 0]);\r\n            u.push(uvs[corner * 2 + 1]);\r\n        }\r\n        return window.frag.MeshData().addTriangleStrip(v, c, u, v);\r\n    }\r\n\r\n    return draw([3, 2, 6, 7, 4, 2, 0, 3, 1, 6, 5, 4, 1, 0]);\r\n};","﻿// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","﻿window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","﻿window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","﻿window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","﻿// This cube has a separate sub-mesh for each face of the cube.\r\nwindow.frag.SeparatedCube = function (facets, options) {\r\n    facets = 1;\r\n    const mesh = window.frag.MeshData();\r\n    \r\n    const u0 = 0;\r\n    const u1 = 1 / 4;\r\n    const u2 = 2 / 4;\r\n    const u3 = 3 / 4;\r\n    const u4 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const corners = [\r\n        -1, -1, -1,\r\n        +1, -1, -1,\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, +1,\r\n        -1, -1, +1,\r\n        -1, +1, +1,\r\n        +1, +1, +1,\r\n    ];\r\n\r\n    const addFace = function (indexes, t0, t1, normal) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const uvs = [t1[0], t0[1], t1[0], t1[1], t0[0], t0[1], t0[0], t1[1]];\r\n            const verticies = [];\r\n            const normals = [];\r\n            const colors = options.color ? [] : undefined;\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                for (var i = 0; i < 4; i++) {\r\n                    verticies.push(corners[indexes[i] * 3 + 0]);\r\n                    verticies.push(corners[indexes[i] * 3 + 1]);\r\n                    verticies.push(corners[indexes[i] * 3 + 2]);\r\n\r\n                    if (options.color)\r\n                        options.color.forEach(c => colors.push(c));\r\n        \r\n                    normals.push(normal[0]);\r\n                    normals.push(normal[1]);\r\n                    normals.push(normal[2]);\r\n                }\r\n            }\r\n            mesh.addTriangleStrip(verticies, colors, uvs, verticies);\r\n        }\r\n    }\r\n\r\n    addFace([1, 2, 0, 3], [u1, v2], [u0, v1], [0, 0, -1]); // front\r\n    addFace([4, 1, 5, 0], [u2, v2], [u1, v1], [0, -1, 0]); // bottom\r\n    addFace([0, 3, 5, 6], [u2, v2], [u1, v3], [-1, 0, 0]); // left\r\n    addFace([4, 7, 1, 2], [u1, v1], [u2, v0], [+1, 0, 0]); // right\r\n    addFace([5, 6, 4, 7], [u2, v1], [u3, v2], [0, 0, +1]); // back\r\n    addFace([6, 3, 7, 2], [u3, v1], [u4, v2], [0, +1, 0]); // top\r\n\r\n    return mesh;\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\n\r\nrequire(\"./Shapes/Plane\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/BasicCube\");\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/SeparatedCube\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n"],"sourceRoot":""}