{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Location.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Input/AnalogAction.js","webpack://frag/./src/Input/AnalogInput.js","webpack://frag/./src/Input/DigitalAction.js","webpack://frag/./src/Input/DigitalInput.js","webpack://frag/./src/Input/HitTest.js","webpack://frag/./src/Input/InputMethod.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","isRunning","public","__private","DEFAULT_STEP_DURATION","getIsRunning","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","sequence","step","sequenceIndex","stop","deactivateAnimation","disposeOnStop","dispose","nextStepTick","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","i","perform","activateAnimation","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","location","Location","getMatrix","channelName","translateX","isModified","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","console","warn","ParallelAnimationAction","forEach","a","PositionAnimationAction","scenePosition","invLinearVelocity","invAngularVelocity","Vector","startLocation","startRotate","moveBy","rotateBy","moveTo","rotateTo","vector","distance","eulerAngles","x","y","z","onStart","onStop","getLocation","getRotate","rotateDelta","b","delta","sub","PI","angularDelta","moveDelta","endTick","r","add","mult","rotate","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","zNear","zFar","xScale","aspectRatio","worldToClipTransform","Transform","computeTransformMatrix","yScale","zScale","zOffset","identity","scaleXYZ","translateXY","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","matrix","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","translateXYZ","rotateXYZ","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","moveToX","moveToY","UiCamera","Transform2D","horizontalScale","scenes","activeAnimations","inactiveAnimations","startTime","performance","now","mainScene","nextAnimationId","correctClock","serverTick","difference","gameTickMs","scene","getMainScene","addScene","removeScene","splice","id","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawContext","draw","t1","fps","setTimeout","renderInterval","startFunctions","init","document","getElementById","error","getContext","alert","addEventListener","event","preventDefault","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","debugMeshes","debugInputs","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","config","is3d","clone","other","transform","scaleXY","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","m3Xm3","uniformMatrix3fv","AnalogAction","actionName","context","AnalogInput","inputName","onChange","minValue","maxValue","maxVelocity","acceleration","deceleration","inverted","velocity","splits","split","setValue","evt","abs","log","change","increment","decrement","test","downPosition","downValue","buttons","vertical","wheel","moveHandler","fraction","clientY","clientX","downHandler","wheelHandler","deltaY","disable","removeEventListener","leftKey","rightKey","handler","key","DigitalAction","input","isOn","sceneObject","DigitalInput","toggle","setIsOn","ctrl","shift","alt","meta","isDown","altKey","ctrlKey","shiftKey","metaKey","keyDownHandler","keyUpHandler","shader","hitTest","attributes","uniforms","vSource","fSource","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","position","getAttribLocation","clipMatrix","getUniformLocation","color","bind","useProgram","unbind","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","isHitTest","sceneObjects","models","pixel","Uint8Array","readPixels","red","green","blue","modelId","sceneObjectId","InputMethod","inputs","enabled","AssetCatalog","defaultTextures","defaultTexturePixels","diffuse","Texture","dataFormat","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","assetCatalog","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","round4","n","round","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","animations","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","m4Xv4","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","extract2D","extract3D","zero","dimensions","div","sum","sqrt","average","dot","append","directionVector","upVector","dir","up","pitch","asin","yaw","atan2","wingDir","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","ScenePosition","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","modelToWorldMatrix","modelToClipMatrix","localMatrix","alpha","uniform4f","modelMatrix","Scene","activeCamera","cameraUpdated","camera","SceneObject","animationLocation","childModelName","objectAnimation","getAnimationLocation","getPosition","getAnimationPosition","clearAnimationPosition","animationName","worldToClipMatrix","setLocation","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","addUniformDeclarations","addVaryingDeclarations","statement","addLogic","bindList","unbindList","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","uiShader","verticiesXY","matrix2D","Cube","facets","options","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","u","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0,\r\n        isRunning: false\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    public.getIsRunning = function() {\r\n        return private.isRunning;\r\n    }\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.sequence) {\r\n                let step = private.sequence[private.sequenceIndex];\r\n                if (step.stop) step.stop(public, gameTick);\r\n            }\r\n            window.frag.deactivateAnimation(public);\r\n            if (private.disposeOnStop) public.dispose();\r\n            private.isRunning = false;\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        let duration = 0;\r\n        for (let i = 0; i < private.sequence.length; i++) {\r\n            const action = private.sequence[i];\r\n            if (action.duration !== undefined)\r\n                duration = duration + action.duration;\r\n            else\r\n                duration = duration + DEFAULT_STEP_DURATION;\r\n        }\r\n        public.duration = duration;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        window.frag.activateAnimation(public);\r\n        private.isRunning = true;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: window.frag.Location(),\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        return public.location.getMatrix();\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                return function (value) {\r\n                    public.location.translateX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-y\":\r\n                return function (value) {\r\n                    public.location.translateY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-z\":\r\n                return function (value) {\r\n                    public.location.translateZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    public.location.scaleX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    public.location.scaleY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-z\":\r\n                return function (value) {\r\n                    public.location.scaleZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"rotate-x\":\r\n                return function (value) {\r\n                    public.location.rotateX = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-y\":\r\n                return function (value) {\r\n                    public.location.rotateY = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    public.location.rotateZ = value;\r\n                    public.location.isModified = true;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Provides a mechanism to move an object in the scene at a specific speed\r\nwindow.frag.PositionAnimationAction = function (scenePosition, invLinearVelocity, invAngularVelocity) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        invLinearVelocity,\r\n        invAngularVelocity,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n        moveTo: undefined,\r\n        rotateTo: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector, invLinearVelocity) {\r\n        invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invLinearVelocity * distance + 1);\r\n        private.moveBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location, invLinearVelocity) {\r\n        if (invLinearVelocity) private.invAngularVelocity = undefined;\r\n        private.invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        private.moveTo = location;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function (vector, invAngularVelocity) {\r\n        invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invAngularVelocity * distance + 1);\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.rotateTo = function (eulerAngles, invAngularVelocity) {\r\n        if (invAngularVelocity) private.invLinearVelocity = undefined;\r\n        private.invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        private.rotateTo = eulerAngles;\r\n        return public;\r\n    }\r\n\r\n\r\n    public.moveByXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveBy([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveByXY = function (x, y, invLinearVelocity) {\r\n        return public.moveBy([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveTo([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXY = function (x, y, invLinearVelocity) {\r\n        return public.moveTo([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n\r\n    public.rotateByXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateBy([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateByXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateBy([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateTo([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateTo([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    const angularDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        for (let i = 0; i < delta.length; i++) {\r\n            while (delta[i] < -Math.PI) delta[i] += Math.PI * 2;\r\n            while (delta[i] > Math.PI) delta[i] -= Math.PI * 2;\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    const linearDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        return delta;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n\r\n        if (private.rotateTo && private.invAngularVelocity) {\r\n            private.rotateDelta = angularDelta(private.rotateTo, private.startRotate);\r\n            const distance = Vector.length(private.rotateDelta);\r\n            public.duration = Math.floor(private.invAngularVelocity * distance + 1);\r\n        }\r\n\r\n        if (private.moveTo && private.invLinearVelocity) {\r\n            private.moveDelta = linearDelta(private.moveTo, private.startLocation);\r\n            const distance = Vector.length(private.moveDelta);\r\n            public.duration = Math.floor(private.invLinearVelocity * distance + 1);\r\n        }\r\n\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        let moveBy = private.moveBy;\r\n        let rotateBy = private.rotateBy;\r\n\r\n        if (private.moveDelta) \r\n            moveBy = private.moveDelta;\r\n\r\n        if (private.rotateDelta)\r\n            rotateBy = private.rotateDelta;\r\n\r\n        if (moveBy) \r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(moveBy, r)));\r\n\r\n        if (rotateBy) \r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(rotateBy, r)));\r\n\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToX = function (x) {\r\n        private.x = x;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToY = function (y) {\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","(function() {\r\n    const frag = window.frag;\r\n    const scenes = [];\r\n    const activeAnimations = {};\r\n    const inactiveAnimations = {};\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n    let nextAnimationId = 0;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.getMainScene = function () {\r\n        return mainScene;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.activateAnimation = function(animation) {\r\n        activeAnimations[animation.id] = animation;\r\n        delete inactiveAnimations[animation.id];\r\n    }\r\n\r\n    frag.deactivateAnimation = function(animation) {\r\n        inactiveAnimations[animation.id] = animation;\r\n        delete activeAnimations[animation.id];\r\n    }\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animation.id = nextAnimationId++;\r\n        inactiveAnimations[animation.id] = animation;\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        delete inactiveAnimations[animation.id];\r\n        delete activeAnimations[animation.id];\r\n        return frag;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let id in activeAnimations) {\r\n            let animation = activeAnimations[id];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            const gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n            const drawContext = { gl };\r\n            mainScene.draw(drawContext);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(drawContext);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    window.frag.startFunctions.push(render);\r\n})();\r\n","/* To customize Frag for your application, set properties of the\r\n   frag object before calling `window.frag.init()` as illustrated \r\n   by the following example:\r\n\r\nwindow.frag.canvas = document.getElementById(\"my-canvas\");\r\nwindow.frag.config = function(frag) {\r\n    frag.gl.clearColor(0, 0, 0, 1);\r\n    frag.debugShaderBuilder = true;\r\n    frag.renderInterval = 10;\r\n    frag.gameTickMs = 50;\r\n}\r\nwindow.frag.init();\r\n*/\r\n\r\nwindow.frag = window.frag || {};\r\n\r\nwindow.frag.startFunctions = [];\r\n\r\nwindow.frag.init = function () {\r\n    const frag = window.frag;\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    frag.canvas.addEventListener('contextmenu', event => event.preventDefault());\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n    frag.debugMeshes = false;\r\n    frag.debugInputs = true;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.config) frag.config(frag);\r\n\r\n    for (var i = 0; i < frag.startFunctions.length; i++)\r\n        frag.startFunctions[i](frag);\r\n\r\n    return frag;\r\n};\r\n","// Represents a location, scale and orientation\r\nwindow.frag.Location = function (is3d) {\r\n    const public = {\r\n        is3d,\r\n        isModified: false,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    public.clone = function() {\r\n        const clone = window.frag.Location(public.is3d);\r\n        clone.isModified = public.isModified;\r\n        clone.matrix = public.matrix;\r\n        clone.translateX = public.translateX;\r\n        clone.translateY = public.translateY;\r\n        clone.translateZ = public.translateZ;\r\n        clone.scaleX = public.scaleX;\r\n        clone.scaleY = public.scaleY;\r\n        clone.scaleZ = public.scaleZ;\r\n        clone.rotateX = public.rotateX;\r\n        clone.rotateY = public.rotateY;\r\n        clone.rotateZ = public.rotateZ;\r\n        return clone;\r\n    }\r\n\r\n    public.add = function(other) {\r\n        public.translateX += other.translateX;\r\n        public.translateY += other.translateY;\r\n        public.translateZ += other.translateZ;\r\n        public.scaleX *= other.scaleX;\r\n        public.scaleY *= other.scaleY;\r\n        public.scaleZ *= other.scaleZ;\r\n        public.rotateX += other.rotateX;\r\n        public.rotateY += other.rotateY;\r\n        public.rotateZ += other.rotateZ;\r\n        public.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        if (public.matrix && !public.isModified)\r\n            return public.matrix;\r\n\r\n        let transform;\r\n        if (public.is3d) {\r\n            transform = window.frag.Transform()\r\n                .translateXYZ(public.translateX, public.translateY, public.translateZ)\r\n                .rotateXYZ(public.rotateX, public.rotateY, public.rotateZ)\r\n                .scaleXYZ(public.scaleX, public.scaleY, public.scaleZ);\r\n        } else {\r\n            transform = window.frag.Transform2D()\r\n                .translateXY(public.translateX, public.translateY)\r\n                .rotate(public.rotateZ)\r\n                .scaleXY(public.scaleX, public.scaleY);\r\n        }\r\n\r\n        public.matrix = transform.getMatrix();\r\n        public.isModified = false;\r\n\r\n        return public.matrix;\r\n    }\r\n\r\n    return public;\r\n}","window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n/*\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);\r\n*/","// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// Returne functions that can be bound to analog inputs\r\nwindow.frag.AnalogAction = function(actionName, context) {\r\n    return null;    \r\n}","// Represents an input that can be moved up and down in value. For example\r\n// the scroll wheel on the mouse or a joystick axis\r\nwindow.frag.AnalogInput = function(inputName, onChange, config) {\r\n    const frag = window.frag;\r\n\r\n    if (!config) config = {};\r\n    config.value = config.value || 0;\r\n    config.minValue = config.minValue || 0;\r\n    config.maxValue = config.maxValue == undefined ? 100 : config.maxValue;\r\n    config.maxVelocity = config.maxVelocity || 5;\r\n    config.acceleration = config.acceleration || 0.25;\r\n    config.deceleration = config.deceleration || 1;\r\n\r\n    const private = {\r\n        inputName,\r\n        onChange,\r\n        config,\r\n        inverted: false,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        value: config.value,\r\n        velocity: 0,\r\n    }\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    const change = function(evt) {\r\n        if (private.onChange) {\r\n            if (Array.isArray(private.onChange)) {\r\n                for (let i = 0; i < private.onChange.length; i++)\r\n                    private.onChange[i](public, evt);\r\n            } else {\r\n                private.onChange(public, evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    const setValue = function(value, evt) {\r\n        if (value < config.minValue) {\r\n            value = config.minValue;\r\n            public.velocity = 0;\r\n        }\r\n        if (value > config.maxValue) {\r\n            value = config.maxValue;\r\n            public.velocity = 0;\r\n        }\r\n        if (Math.abs(public.value - value) > 1e-5) {\r\n            public.value = value;\r\n            if (frag.debugInputs) console.log(\"Analog input\", inputName, \"changed to\", value);\r\n            change(evt);\r\n        }\r\n    }\r\n\r\n    const increment = function(evt) {\r\n        public.velocity += public.velocity >= 0 ? config.acceleration : config.deceleration;\r\n        if (public.velocity > config.maxVelocity) public.velocity = config.maxVelocity;\r\n        setValue(public.value + public.velocity, evt);\r\n    }\r\n\r\n    const decrement = function(evt) {\r\n        public.velocity -= public.velocity <= 0 ? config.acceleration : config.deceleration;\r\n        if (public.velocity < -config.maxVelocity) public.velocity = -config.maxVelocity;\r\n        setValue(public.value + public.velocity, evt);\r\n    }\r\n\r\n    if ((/mouse/i).test(inputName)) {\r\n        let buttons = 0;\r\n        let vertical = false;\r\n        let inverted = false;\r\n        let wheel = false;\r\n        let downPosition;\r\n        let downValue;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^horizontal$/).test(splits[i])) vertical = false;\r\n            if ((/^vertical$/).test(splits[i])) vertical = true;\r\n            if ((/^inverted$/).test(splits[i])) inverted = true;\r\n            if ((/^wheel$/).test(splits[i])) wheel = true;\r\n            if ((/^left$/).test(splits[i])) buttons = 1;\r\n            if ((/^right$/).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/).test(splits[i])) buttons = 4;\r\n            if ((/^back$/).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/).test(splits[i])) buttons = 16;\r\n            if ((/^any$/).test(splits[i])) buttons = 31;\r\n        }\r\n\r\n        const moveHandler = function (evt) {\r\n            if (buttons === 0) {\r\n                let fraction = vertical ? evt.clientY / frag.canvas.clientHeight : evt.clientX / frag.canvas.clientWidth;\r\n                if (inverted) fraction = 1 - fraction;\r\n                const value = ((config.maxValue - config.minValue) * fraction) + config.minValue;\r\n                setValue(value, evt);\r\n            } else if ((evt.buttons & buttons) !== 0) {\r\n                let fraction = vertical \r\n                    ? (inverted ? (downPosition - evt.clientY) : (evt.clientY - downPosition)) / frag.canvas.clientHeight\r\n                    : (inverted ? (downPosition - evt.clientX) : (evt.clientX - downPosition)) / frag.canvas.clientWidth;\r\n                const value = downValue + ((config.maxValue - config.minValue) * fraction);\r\n                setValue(value, evt);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const downHandler = function(evt) {\r\n            if ((evt.buttons & buttons) !== 0) {\r\n                downPosition = vertical ? evt.clientY : evt.clientX;\r\n                downValue = public.value;\r\n            }\r\n        }\r\n\r\n        const wheelHandler = function(evt) {\r\n            if (inverted) {\r\n                if (evt.deltaY > 0) decrement(evt); else increment(evt);\r\n            } else {\r\n                if (evt.deltaY < 0) decrement(evt); else increment(evt);\r\n            }\r\n            evt.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            if (wheel) {\r\n                frag.canvas.addEventListener(\"wheel\", wheelHandler, false);\r\n            } else {\r\n                frag.canvas.addEventListener(\"mousemove\", moveHandler, false);\r\n                if (buttons !== 0) frag.canvas.addEventListener(\"mousedown\", downHandler, false);\r\n            }\r\n        }\r\n\r\n        public.disable = function () {\r\n            if (wheel) {\r\n                frag.canvas.removeEventListener(\"wheel\", wheelHandler, false);\r\n            } else {\r\n                frag.canvas.removeEventListener(\"mousemove\", moveHandler, false);\r\n                if (buttons !== 0) frag.canvas.removeEventListener(\"mousedown\", downHandler, false);\r\n            }\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/keys/i).test(splits[0])) {\r\n        let leftKey = \"ArrowLeft\";\r\n        let rightKey = \"ArrowRight\";\r\n        if (splits.length > 1) leftKey = splits[1];\r\n        if (splits.length > 2) rightKey = splits[2];\r\n\r\n        const handler = function (evt) {\r\n            if (evt.key === leftKey) {\r\n                decrement(evt);\r\n                evt.preventDefault();\r\n            } else if (evt.key === rightKey) {\r\n                increment(evt);\r\n                evt.preventDefault();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            document.addEventListener(\"keydown\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            document.removeEventListener(\"keydown\", handler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","// Returne functions that can be bound to digital inputs\r\nwindow.frag.DigitalAction = function(actionName, context) {\r\n    const frag = window.frag;\r\n\r\n    if (context && context.animation) {\r\n        if (/^animation$/i.test(actionName)) {\r\n            return function(input) {\r\n                if (frag.debugInputs) console.log(\"Turning animation\", input.isOn ? \"on\" : \"off\");\r\n                if (input.isOn) context.animation.start();\r\n                else context.animation.stop();\r\n            }\r\n        }\r\n\r\n        if (/^animation-start$/i.test(actionName)) {\r\n            return function(input) {\r\n                if (!input.isOn) {\r\n                    if (frag.debugInputs) console.log(\"Starting animation\");\r\n                    context.animation.start();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (/^animation-stop$/i.test(actionName)) {\r\n            return function(input) {\r\n                if (!input.isOn) {\r\n                    if (frag.debugInputs) console.log(\"Stopping animation\");\r\n                    context.animation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (context && context.sceneObject) {\r\n        if (/^sceneobject$/i.test(actionName)) {\r\n            return function(input) {\r\n                if (frag.debugInputs) console.log(\"Turning scene object\", input.isOn ? \"on\" : \"off\");\r\n                if (input.isOn) context.sceneObject.enable();\r\n                else context.sceneObject.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (context && context.model) {\r\n        if (/^model$/i.test(actionName)) {\r\n            return function(input) {\r\n                if (frag.debugInputs) console.log(\"Turning\", context.model.getName(), \"model\", input.isOn ? \"on\" : \"off\");\r\n                if (input.isOn) context.model.enable();\r\n                else context.model.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}","// Represents an input that can only be on or off. For example keyboard keys or mouse buttons\r\nwindow.frag.DigitalInput = function (inputName, onChange, isOn) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        inputName,\r\n        onChange,\r\n        toggle: false,\r\n        inverted: false,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        isOn: !!isOn\r\n    }\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    const change = function(evt) {\r\n        if (private.onChange) {\r\n            if (Array.isArray(private.onChange)) {\r\n                for (let i = 0; i < private.onChange.length; i++)\r\n                    private.onChange[i](public, evt);\r\n            } else {\r\n                private.onChange(public, evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    const setIsOn = function (isOn, evt) {\r\n        if (private.inverted) isOn = !isOn;\r\n        if (private.toggle) {\r\n            if (isOn) {\r\n                public.isOn = !public.isOn;\r\n                if (frag.debugInputs) console.log(\"Toggling digital input\", inputName, public.isOn ? \"on\" : \"off\");\r\n                change(evt);\r\n            }\r\n        } else {\r\n            if (isOn !== public.isOn) {\r\n                public.isOn = isOn;\r\n                if (frag.debugInputs) console.log(\"Digital input\", inputName, \"turned\", public.isOn ? \"on\" : \"off\");\r\n                change(evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    if ((/mouse/i).test(inputName)) {\r\n        let buttons = 1;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            if ((/^left$/i).test(splits[i])) buttons = 1;\r\n            if ((/^right$/i).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/i).test(splits[i])) buttons = 4;\r\n            if ((/^back$/i).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/i).test(splits[i])) buttons = 16;\r\n            if ((/^any$/i).test(splits[i])) buttons = 31;\r\n        }\r\n\r\n        const handler = function (evt) {\r\n            setIsOn((evt.buttons & buttons) !== 0, evt);\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            frag.canvas.addEventListener(\"mousedown\", handler, false);\r\n            frag.canvas.addEventListener(\"mouseup\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            frag.canvas.removeEventListener(\"mousedown\", handler, false);\r\n            frag.canvas.removeEventListener(\"mouseup\", handler, false);\r\n        }\r\n        \r\n        return public;\r\n    }\r\n\r\n    if ((/key/i).test(inputName)) {\r\n        let key;\r\n        let ctrl = false;\r\n        let shift = false;\r\n        let alt = false;\r\n        let meta = false;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            else if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            else if (/^ctrl$/i.test(splits[i])) ctrl = true;\r\n            else if (/^shift$/i.test(splits[i])) shift = true;\r\n            else if (/^alt$/i.test(splits[i])) alt = true;\r\n            else if (/^meta$/i.test(splits[i])) meta = true;\r\n            else if (/^key$/i.test(splits[i]));\r\n            else key = splits[i];\r\n        }\r\n\r\n        const handler = function (evt, isDown) {\r\n            if (evt.key !== key ||\r\n                evt.altKey !== alt ||\r\n                evt.ctrlKey !== ctrl ||\r\n                evt.shiftKey !== shift ||\r\n                evt.metaKey !== meta)\r\n                return true;\r\n\r\n            evt.preventDefault();\r\n            setIsOn(isDown, evt);\r\n\r\n            return true;\r\n        }\r\n\r\n        const keyDownHandler = function (evt) {\r\n            return handler(evt, true);\r\n        }\r\n\r\n        const keyUpHandler = function (evt) {\r\n            return handler(evt, false);\r\n        }\r\n\r\n        public.enable = function () {\r\n            document.addEventListener(\"keydown\", keyDownHandler, false);\r\n            document.addEventListener(\"keyup\", keyUpHandler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            document.removeEventListener(\"keydown\", keyDownHandler, false);\r\n            document.removeEventListener(\"keyup\", keyUpHandler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","(function() {\r\n    let shader;\r\n\r\n    window.frag.hitTest = function(x, y, width, height, scene) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        width = width || frag.canvas.clientWidth;\r\n        height = height || frag.canvas.clientHeight;\r\n        scene = scene || frag.getMainScene();\r\n\r\n        if (!shader) {\r\n            shader = {\r\n                name: \"HitTest\",\r\n                attributes: {},\r\n                uniforms: {},\r\n                is3d: true,\r\n            };\r\n\r\n            const vSource =\r\n                'attribute vec4 a_position;\\n' +\r\n                'uniform mat4 u_clipMatrix;\\n' +\r\n                'void main() {;\\n' +\r\n                '  gl_Position = u_clipMatrix * a_position;\\n' +\r\n                '}';\r\n\r\n            const fSource =\r\n                'precision mediump float;\\n' +\r\n                'uniform vec4 u_color;\\n' +\r\n                'void main() {;\\n' +\r\n                '  gl_FragColor = u_color;\\n' +\r\n                '}';\r\n\r\n            const vertexShader = frag.createShader(shader.name, gl.VERTEX_SHADER, vSource);\r\n            const fragmentShader = frag.createShader(shader.name, gl.FRAGMENT_SHADER, fSource);\r\n            shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n            shader.attributes.position = gl.getAttribLocation(shader.program, \"a_position\");\r\n\r\n            shader.uniforms.clipMatrix = gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n            shader.uniforms.color = gl.getUniformLocation(shader.program, \"u_color\");\r\n\r\n            shader.bind = function (gl) {\r\n                gl.useProgram(shader.program);\r\n            }\r\n\r\n            shader.unbind = function() {}\r\n        }\r\n\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        const frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        const depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n        gl.viewport(0, 0, width, height);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        const drawContext = {\r\n            gl,\r\n            shader,\r\n            isHitTest: true,\r\n            sceneObjects: [],\r\n            models: [],\r\n        };\r\n\r\n        scene.adjustToViewport(gl);\r\n        scene.draw(drawContext);\r\n\r\n        const pixel = new Uint8Array(4);\r\n        gl.readPixels(x, height - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        const red = pixel[0];\r\n        const green = pixel[1];\r\n        const blue = pixel[2];\r\n        const alpha = pixel[3];\r\n\r\n        const modelId = alpha | (blue << 8) | ((green & 0x0f) << 16);\r\n        const sceneObjectId = ((green & 0xf0) >> 4) | (red << 4);\r\n\r\n        if ((modelId < drawContext.models.length) && (sceneObjectId < drawContext.sceneObjects.length))\r\n            return { \r\n                sceneObject: drawContext.sceneObjects[sceneObjectId],\r\n                model: drawContext.models[modelId]\r\n            };\r\n\r\n        return null;\r\n    };\r\n})();","// A collection of inputs that can be turned on and off.\r\nwindow.frag.InputMethod = function() {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        inputs: [],\r\n        enabled: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    }\r\n\r\n    // Enables all of the inputs for this input method\r\n    public.enable = function() {\r\n        if (!private.enabled) {\r\n            for (var i = 0; i< private.inputs.length; i++)\r\n                private.inputs[i].enable();\r\n            private.enabled = true;\r\n        }\r\n        return public;\r\n    }\r\n\r\n    // Disables all of the inputs for this input method\r\n    public.disable = function() {\r\n        if (private.enabled) {\r\n            private.enabled = false;\r\n            for (var i = 0; i< private.inputs.length; i++)\r\n                private.inputs[i].disable();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    // Adds a new input method\r\n    public.add = function(input) {\r\n        private.inputs.push(input);\r\n        if (private.enabled) input.enable();\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model(public.shader.is3d)\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (assetCatalog, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = assetCatalog.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(assetCatalog, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const round4 = function(n) { return Math.round(n * 10000) / 10000; }\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugMeshes) {\r\n                let msg = \"  vertices[\";\r\n                for (var i = 0; i < verticies.length; i++) {\r\n                    if (i > 0) msg += ', ';\r\n                    msg += round4(verticies[i]);\r\n                }\r\n                msg += \"]\";\r\n                console.log(msg);\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" ms\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugAnimations) {\r\n                msg = \"  Channel \" + channelName + \" applies to \" + pattern + \" children\"\r\n                console.log(msg);\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n\r\n                if (frag.debugModelLoader && frag.debugAnimations) {\r\n                    msg = \"    Keyframe[\" + frame + \"] = \" + round4(value) + \" \" + transition;\r\n                    console.log(msg);\r\n                }\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const location = frag.Location(true); // Loaded models are always 3D\r\n        location.translateX = context.header.getFloat32(headerOffset + 0, littleEndian);\r\n        location.translateY = context.header.getFloat32(headerOffset + 4, littleEndian);\r\n        location.translateZ = context.header.getFloat32(headerOffset + 8, littleEndian);\r\n        location.rotateX = context.header.getFloat32(headerOffset + 12, littleEndian);\r\n        location.rotateY = context.header.getFloat32(headerOffset + 16, littleEndian);\r\n        location.rotateZ = context.header.getFloat32(headerOffset + 20, littleEndian);\r\n        location.scaleX = context.header.getFloat32(headerOffset + 24, littleEndian);\r\n        location.scaleY = context.header.getFloat32(headerOffset + 28, littleEndian);\r\n        location.scaleZ = context.header.getFloat32(headerOffset + 32, littleEndian);\r\n        location.isModified = true;\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader) {\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + \r\n                (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations.\" + \r\n                (hasMesh ? \" Paint mesh \" + meshIndex : \" No mesh\") + (hasMaterial ? \" with material \" + materialIndex : \". No material\"));\r\n            console.log(\"Object[\" + objectIndex + \"] at (\" + \r\n                round4(location.translateX) + \",\" + round4(location.translateY) + \",\" + round4(location.translateZ) +\").[\"+ \r\n                round4(location.rotateX) + \",\" + round4(location.rotateY) + \",\" + round4(location.rotateZ) + \"]x(\" + \r\n                round4(location.scaleX) + \",\" + round4(location.scaleY) + \",\" + round4(location.scaleZ) + \")\");\r\n        }\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot);\r\n        model.location = location;\r\n\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw({ gl });\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n/*\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);\r\n*/","window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    extract2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    extract3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) * 0.5);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    dot: function (a, b) {\r\n        let result = 0;\r\n        for (let i = 0; i < a.length; i++)\r\n            result += a[i] * b[i];\r\n        return result;\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n    append: function(a, v) {\r\n        for (let i = 0; i < v.length; i++) a.push(v[i]);\r\n    },\r\n    eulerAngles: function(directionVector, upVector) {\r\n        const Vector = window.frag.Vector;\r\n        if (!upVector) upVector = [0, 1, 0];\r\n\r\n        const dir = Vector.normalize(directionVector);\r\n        const up = Vector.normalize(upVector);\r\n\r\n        const pitch = Math.asin(dir[1]);\r\n        const yaw = Math.atan2(dir[0], dir[2]);\r\n\r\n        const wingDir = [-dir[2], 0, dir[0]];\r\n        const vertical = Vector.cross(wingDir, dir);\r\n        const roll = Math.atan2(Vector.dot(wingDir, up), Vector.dot(vertical, up));\r\n\r\n        return [roll, yaw, pitch];\r\n    }\r\n}\r\n","// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","window.frag.Model = function (is3d, parent) {\r\n    const frag = window.frag;\r\n\r\n    if (is3d === undefined) {\r\n        if (parent && parent.location)\r\n            is3d = parent.location.is3d;\r\n        else\r\n            is3d = true;\r\n    }\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n        enabled: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: frag.Location(is3d),\r\n        animations: []\r\n    };\r\n\r\n    public.dispose = function(){\r\n    }\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.getPosition = function() {\r\n        return frag.ScenePosition(public.location);\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== public.location.is3d){\r\n            const m = public.location.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" location and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMesh = function() {\r\n        return private.meshData;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.enable = function() {\r\n        private.enabled = true;\r\n    }\r\n\r\n    public.disable = function() {\r\n        private.enabled = false;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(undefined, public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe(drawWireframe);\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(drawWireframe, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (drawContext, modelToWorldMatrix, modelToClipMatrix, animationMap) {\r\n        if (!public.location) return public;\r\n\r\n        const animationState = animationMap && private.name ? animationMap[private.name] : null;\r\n        const location = animationState\r\n            ? public.location.clone().add(animationState.location)\r\n            : public.location;\r\n        const localMatrix = location.getMatrix();\r\n\r\n        if (location.is3d) {\r\n            modelToWorldMatrix = frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix);\r\n        } else {\r\n            modelToWorldMatrix = frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix);\r\n        }\r\n\r\n        const shader = drawContext.shader || public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData && private.enabled) {\r\n            shader.bind(drawContext.gl);\r\n\r\n            if (drawContext.isHitTest && shader.uniforms.color !== undefined) {\r\n                const sceneObjectId = drawContext.sceneObjects.length - 1;\r\n                const modelId = drawContext.models.length;\r\n                drawContext.models.push(public);\r\n\r\n                const red = sceneObjectId >> 4;\r\n                const green = ((sceneObjectId & 0x0f) << 4) | ((modelId & 0xf0000) >> 16);\r\n                const blue = (modelId & 0xff00) >> 8;\r\n                const alpha = modelId & 0xff;\r\n                drawContext.gl.uniform4f(shader.uniforms.color, red / 255, green / 255, blue / 255, alpha / 255);\r\n            }\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(drawContext.gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                const modelToClipTransform = location.is3d ? frag.Transform(modelToClipMatrix) : frag.Transform2D(modelToClipMatrix);\r\n                modelToClipTransform.apply(drawContext.gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                const modelToWorldTransform = location.is3d ? frag.Transform(modelToWorldMatrix) : frag.Transform2D(modelToWorldMatrix);\r\n                modelToWorldTransform.apply(drawContext.gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(drawContext.gl, shader);\r\n\r\n            shader.unbind(drawContext.gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(drawContext, modelToWorldMatrix, modelToClipMatrix, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (drawContext) {\r\n        if (private.activeCamera) {\r\n            drawContext.worldToClipTransform = private.activeCamera.worldToClipTransform;\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(drawContext);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","window.frag.SceneObject = function (model) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        location: null,\r\n        animationLocation: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    private.getLocation = function () {\r\n        if (private.location) return private.location;\r\n        if (!private.model.location) return null;\r\n        private.location = frag.Location(private.model.location.is3d);\r\n        return private.location;\r\n    };\r\n\r\n    private.getAnimationLocation = function () {\r\n        if (private.animationLocation) return private.animationLocation;\r\n        if (!private.model.location) return null;\r\n        private.animationLocation = frag.Location(private.model.location.is3d);\r\n        return private.animationLocation;\r\n    };\r\n\r\n    /**\r\n     * @returns a ScemePosition object that can be used to manipulate the position\r\n     * scale and orientation of this object in the scene\r\n     */\r\n    public.getPosition = function () {\r\n        const location = private.getLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * @returns a ScenePosition object that can be used to change the animation\r\n     * position of the scene object. The animation position is added to the scene\r\n     * object's static position to create a temporary animation effect\r\n     */\r\n    public.getAnimationPosition = function () {\r\n        const location = private.getAnimationLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * Clears any animation position that was set. This is more efficient\r\n     * than setting the animation location to zero\r\n     */\r\n    public.clearAnimationPosition = function () {\r\n        private.animationLocation = null;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Includes this object in the scene. Call this function when the object\r\n     * could possibly be seen by the player. The engine will go through the\r\n     * process of transforming the mesh into screen space and clip anything\r\n     * that is not within the screen bounds. To avoid this expensive operations\r\n     * for objects that you know cannot be seen by the player, call the disable() \r\n     * function.\r\n     */\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Excludes this object in the scene. Call this function when the object\r\n     * is not viewable through the player's viewport - for example it moved\r\n     * behind the player's point of view.\r\n     */\r\n     public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Frees any resources consumed by this scene object and removes it from\r\n     * the scene.\r\n     */\r\n    public.dispose = function() {\r\n        public.disable();\r\n        for (let animationName in public.animations) {\r\n            public.animations[animationName].dispose();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    /**\r\n     * This is used internally by the engine. Don't call this from your game code\r\n     */\r\n    public.draw = function (drawContext) {\r\n        if (!private.enabled) return public;\r\n\r\n        let location = private.getLocation();\r\n        if (!location) return public;\r\n\r\n        if (private.animationLocation) {\r\n            location = location.clone().add(private.animationLocation);\r\n        }\r\n\r\n        const worldToClipMatrix = drawContext.worldToClipTransform.getMatrix();\r\n        const modelToWorldMatrix = location.getMatrix();\r\n        const modelToClipMatrix = drawContext.worldToClipTransform.is3d\r\n            ? frag.Matrix.m4Xm4(worldToClipMatrix, modelToWorldMatrix)\r\n            : frag.Matrix.m3Xm3(worldToClipMatrix, modelToWorldMatrix);\r\n\r\n        if (drawContext.isHitTest) {\r\n            drawContext.sceneObjects.push(public);\r\n        }\r\n\r\n        private.model.draw(drawContext, modelToWorldMatrix, modelToClipMatrix, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","// This class provides a set of helper methods for\r\n// manipulating a Location object\r\nwindow.frag.ScenePosition = function (location) {\r\n    const private = {\r\n        location: null,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setLocation = function (value) {\r\n        private.location = value || window.frag.Location();\r\n        return public;\r\n    }\r\n    public.setLocation(location);\r\n\r\n    public.getMatrix = function () {\r\n        return private.location.getMatrix();\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.location.scaleX;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.location.scaleY;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.location.scaleZ;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.location.scaleX = s;\r\n        private.location.scaleY = s;\r\n        private.location.scaleZ = s;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.location.scaleX = x;\r\n        private.location.scaleY = y;\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.location.scaleX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.location.scaleY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * scales[0],\r\n            private.location.scaleY * scales[1],\r\n            private.location.scaleZ * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * xScale,\r\n            private.location.scaleY * yScale,\r\n            private.location.scaleZ * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.location.rotateX;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.location.rotateY;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.location.rotateZ;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.rotateX, private.location.rotateY, private.location.rotateZ];\r\n        else\r\n            return [private.location.rotateX, private.location.rotateY];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.location.rotateX = v[0];\r\n        if (v.length > 1) private.location.rotateY = v[1];\r\n        if (v.length > 2) private.location.rotateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.location.rotateX = x;\r\n        private.location.rotateY = y;\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.location.rotateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.location.rotateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + euler[0],\r\n            private.location.rotateY + euler[1],\r\n            private.location.rotateZ + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + x,\r\n            private.location.rotateY + y,\r\n            private.location.rotateZ + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.location.translateX;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.location.translateY;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.location.translateZ;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.translateX, private.location.translateY, private.location.translateZ];\r\n        else\r\n            return [private.location.translateX, private.location.translateY];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.location.translateX = v[0];\r\n        if (v.length > 1) private.location.translateY = v[1];\r\n        if (v.length > 2) private.location.translateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.location.translateX = x;\r\n        private.location.translateY = y;\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.location.translateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.location.translateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.location.translateX + direction[0],\r\n            private.location.translateY + direction[1],\r\n            private.location.translateZ + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.location.translateX + x,\r\n            private.location.translateY + y,\r\n            private.location.translateZ + z);\r\n    }\r\n\r\n    return public;\r\n};","window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.extract2D(array, index);\r\n        return frag.Vector.extract3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","window.frag.startFunctions.push(function(frag) {\r\n    frag.uiShader = frag.Shader()\r\n        .name(\"UI\")\r\n        .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n        .matrix2D()       // Transformation matricies are 2D\r\n        .diffuseTexture() // Adds support for diffuse texture mapping\r\n        .compile();       // Compile the shader\r\n});\r\n","// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Location\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Plane\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n\r\nrequire(\"./Input/HitTest\");\r\nrequire(\"./Input/InputMethod\");\r\nrequire(\"./Input/DigitalInput\");\r\nrequire(\"./Input/AnalogInput\");\r\nrequire(\"./Input/DigitalAction\");\r\nrequire(\"./Input/AnalogAction\");\r\n"],"sourceRoot":""}