{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Location.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/BasicCube.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/./src/Shapes/SeparatedCube.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","public","__private","DEFAULT_STEP_DURATION","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","deactivateAnimation","disposeOnStop","dispose","sequence","step","sequenceIndex","nextStepTick","stop","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","i","perform","activateAnimation","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","location","Location","getMatrix","channelName","translateX","isModified","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","console","warn","ParallelAnimationAction","forEach","a","PositionAnimationAction","scenePosition","invLinearVelocity","invAngularVelocity","Vector","startLocation","startRotate","moveBy","rotateBy","moveTo","rotateTo","vector","distance","eulerAngles","x","y","z","onStart","onStop","getLocation","getRotate","rotateDelta","b","delta","sub","PI","angularDelta","moveDelta","endTick","r","add","mult","rotate","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","zNear","zFar","xScale","aspectRatio","worldToClipTransform","Transform","computeTransformMatrix","yScale","zScale","zOffset","identity","scaleXYZ","translateXY","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","matrix","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","translateXYZ","rotateXYZ","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","UiCamera","Transform2D","horizontalScale","scenes","activeAnimations","inactiveAnimations","startTime","performance","now","mainScene","nextAnimationId","correctClock","serverTick","difference","gameTickMs","scene","addScene","removeScene","splice","id","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","t1","fps","setTimeout","renderInterval","startFunctions","init","document","getElementById","error","getContext","alert","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","debugMeshes","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","config","is3d","clone","other","transform","scaleXY","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","m3Xm3","uniformMatrix3fv","AssetCatalog","shader","defaultTextures","defaultTexturePixels","Uint8Array","diffuse","Texture","dataFormat","RGBA","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","models","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","log","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","materialStore","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","assetCatalog","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","round4","n","round","context","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","animations","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","texture","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","UNSIGNED_BYTE","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","texImage2D","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","uniforms","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","m4Xv4","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","extract2D","extract3D","zero","dimensions","div","sum","sqrt","average","dot","append","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","color","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","attributes","position","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","abs","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","ScenePosition","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","test","modelToWorldMatrix","modelToClipMatrix","localMatrix","bind","clipMatrix","modelMatrix","unbind","Scene","sceneObjects","activeCamera","cameraUpdated","sceneObject","camera","SceneObject","enabled","animationLocation","childModelName","objectAnimation","getAnimationLocation","getPosition","getAnimationPosition","clearAnimationPosition","disable","animationName","worldToClipMatrix","setLocation","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","createShader","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","vSource","addUniformDeclarations","fSource","addVaryingDeclarations","statement","addLogic","VERTEX_SHADER","FRAGMENT_SHADER","bindList","unbindList","getAttribLocation","getUniformLocation","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","useProgram","uiShader","verticiesXY","matrix2D","BasicCube","options","indexes","u","corner","e","Cube","facets","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","up","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","SeparatedCube","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["﻿// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            window.frag.deactivateAnimation(public);\r\n            if (private.disposeOnStop) public.dispose();\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        let duration = 0;\r\n        for (let i = 0; i < private.sequence.length; i++) {\r\n            const action = private.sequence[i];\r\n            if (action.duration !== undefined)\r\n                duration = duration + action.duration;\r\n            else\r\n                duration = duration + DEFAULT_STEP_DURATION;\r\n        }\r\n        public.duration = duration;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        window.frag.activateAnimation(public);\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","﻿// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: window.frag.Location(),\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        return public.location.getMatrix();\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                return function (value) {\r\n                    public.location.translateX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-y\":\r\n                return function (value) {\r\n                    public.location.translateY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-z\":\r\n                return function (value) {\r\n                    public.location.translateZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    public.location.scaleX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    public.location.scaleY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-z\":\r\n                return function (value) {\r\n                    public.location.scaleZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"rotate-x\":\r\n                return function (value) {\r\n                    public.location.rotateX = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-y\":\r\n                return function (value) {\r\n                    public.location.rotateY = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    public.location.rotateZ = value;\r\n                    public.location.isModified = true;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to move an object in the scene at a specific speed\r\nwindow.frag.PositionAnimationAction = function (scenePosition, invLinearVelocity, invAngularVelocity) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        invLinearVelocity,\r\n        invAngularVelocity,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n        moveTo: undefined,\r\n        rotateTo: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector, invLinearVelocity) {\r\n        invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invLinearVelocity * distance + 1);\r\n        private.moveBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location, invLinearVelocity) {\r\n        if (invLinearVelocity) private.invAngularVelocity = undefined;\r\n        private.invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        private.moveTo = location;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function (vector, invAngularVelocity) {\r\n        invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invAngularVelocity * distance + 1);\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.rotateTo = function (eulerAngles, invAngularVelocity) {\r\n        if (invAngularVelocity) private.invLinearVelocity = undefined;\r\n        private.invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        private.rotateTo = eulerAngles;\r\n        return public;\r\n    }\r\n\r\n\r\n    public.moveByXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveBy([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveByXY = function (x, y, invLinearVelocity) {\r\n        return public.moveBy([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveTo([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXY = function (x, y, invLinearVelocity) {\r\n        return public.moveTo([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n\r\n    public.rotateByXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateBy([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateByXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateBy([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateTo([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateTo([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    const angularDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        for (let i = 0; i < delta.length; i++) {\r\n            if (delta[i] < -Math.PI) delta[i] = Math.PI * 2 + delta[i];\r\n            if (delta[i] > Math.PI) delta[i] = -Math.PI * 2 + delta[i];\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    const linearDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        return delta;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n\r\n        if (private.rotateTo && private.invAngularVelocity) {\r\n            private.rotateDelta = angularDelta(private.rotateTo, private.startRotate);\r\n            const distance = Vector.length(private.rotateDelta);\r\n            public.duration = Math.floor(private.invAngularVelocity * distance + 1);\r\n        }\r\n\r\n        if (private.moveTo && private.invLinearVelocity) {\r\n            private.moveDelta = linearDelta(private.moveTo, private.startLocation);\r\n            const distance = Vector.length(private.moveDelta);\r\n            public.duration = Math.floor(private.invLinearVelocity * distance + 1);\r\n        }\r\n\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        let moveBy = private.moveBy;\r\n        let rotateBy = private.rotateBy;\r\n\r\n        if (private.moveDelta) \r\n            moveBy = private.moveDelta;\r\n\r\n        if (private.rotateDelta)\r\n            rotateBy = private.rotateDelta;\r\n\r\n        if (moveBy) \r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(moveBy, r)));\r\n\r\n        if (rotateBy) \r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(rotateBy, r)));\r\n\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","﻿// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿(function() {\r\n    const frag = window.frag;\r\n    const scenes = [];\r\n    const activeAnimations = {};\r\n    const inactiveAnimations = {};\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n    let nextAnimationId = 0;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.activateAnimation = function(animation) {\r\n        activeAnimations[animation.id] = animation;\r\n        delete inactiveAnimations[animation.id];\r\n    }\r\n\r\n    frag.deactivateAnimation = function(animation) {\r\n        inactiveAnimations[animation.id] = animation;\r\n        delete activeAnimations[animation.id];\r\n    }\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animation.id = nextAnimationId++;\r\n        inactiveAnimations[animation.id] = animation;\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        delete inactiveAnimations[animation.id];\r\n        delete activeAnimations[animation.id];\r\n        return frag;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let id in activeAnimations) {\r\n            let animation = activeAnimations[id];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            let gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            mainScene.draw(gl);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(gl);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    window.frag.startFunctions.push(render);\r\n})();\r\n","﻿/* To customize Frag for your application, set properties of the\r\n   frag object before calling `window.frag.init()` as illustrated \r\n   by the following example:\r\n\r\nwindow.frag.canvas = document.getElementById(\"my-canvas\");\r\nwindow.frag.config = function(frag) {\r\n    frag.gl.clearColor(0, 0, 0, 1);\r\n    frag.debugShaderBuilder = true;\r\n    frag.renderInterval = 10;\r\n    frag.gameTickMs = 50;\r\n}\r\nwindow.frag.init();\r\n*/\r\n\r\nwindow.frag = window.frag || {};\r\n\r\nwindow.frag.startFunctions = [];\r\n\r\nwindow.frag.init = function () {\r\n    const frag = window.frag;\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n    frag.debugMeshes = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.config) frag.config(frag);\r\n\r\n    for (var i = 0; i < frag.startFunctions.length; i++)\r\n        frag.startFunctions[i](frag);\r\n\r\n    return frag;\r\n};\r\n","// Represents a location, scale and orientation\r\nwindow.frag.Location = function (is3d) {\r\n    const public = {\r\n        is3d,\r\n        isModified: false,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    public.clone = function() {\r\n        const clone = window.frag.Location(public.is3d);\r\n        clone.isModified = public.isModified;\r\n        clone.matrix = public.matrix;\r\n        clone.translateX = public.translateX;\r\n        clone.translateY = public.translateY;\r\n        clone.translateZ = public.translateZ;\r\n        clone.scaleX = public.scaleX;\r\n        clone.scaleY = public.scaleY;\r\n        clone.scaleZ = public.scaleZ;\r\n        clone.rotateX = public.rotateX;\r\n        clone.rotateY = public.rotateY;\r\n        clone.rotateZ = public.rotateZ;\r\n        return clone;\r\n    }\r\n\r\n    public.add = function(other) {\r\n        public.translateX += other.translateX;\r\n        public.translateY += other.translateY;\r\n        public.translateZ += other.translateZ;\r\n        public.scaleX *= other.scaleX;\r\n        public.scaleY *= other.scaleY;\r\n        public.scaleZ *= other.scaleZ;\r\n        public.rotateX += other.rotateX;\r\n        public.rotateY += other.rotateY;\r\n        public.rotateZ += other.rotateZ;\r\n        public.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        if (public.matrix && !public.isModified)\r\n            return public.matrix;\r\n\r\n        let transform;\r\n        if (public.is3d) {\r\n            transform = window.frag.Transform()\r\n                .translateXYZ(public.translateX, public.translateY, public.translateZ)\r\n                .rotateXYZ(public.rotateX, public.rotateY, public.rotateZ)\r\n                .scaleXYZ(public.scaleX, public.scaleY, public.scaleZ);\r\n        } else {\r\n            transform = window.frag.Transform2D()\r\n                .translateXY(public.translateX, public.translateY)\r\n                .rotate(public.rotateZ)\r\n                .scaleXY(public.scaleX, public.scaleY);\r\n        }\r\n\r\n        public.matrix = transform.getMatrix();\r\n        public.isModified = false;\r\n\r\n        return public.matrix;\r\n    }\r\n\r\n    return public;\r\n}","﻿window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","﻿// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n/*\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);\r\n*/","﻿// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model(public.shader.is3d)\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (materialStore, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = materialStore.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(materialStore, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const round4 = function(n) { return Math.round(n * 10000) / 10000; }\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugMeshes) {\r\n                let msg = \"  vertices[\";\r\n                for (var i = 0; i < verticies.length; i++) {\r\n                    if (i > 0) msg += ', ';\r\n                    msg += round4(verticies[i]);\r\n                }\r\n                msg += \"]\";\r\n                console.log(msg);\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" ms\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugAnimations) {\r\n                msg = \"  Channel \" + channelName + \" applies to \" + pattern + \" children\"\r\n                console.log(msg);\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n\r\n                if (frag.debugModelLoader && frag.debugAnimations) {\r\n                    msg = \"    Keyframe[\" + frame + \"] = \" + round4(value) + \" \" + transition;\r\n                    console.log(msg);\r\n                }\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const location = frag.Location(true); // Loaded models are always 3D\r\n        location.translateX = context.header.getFloat32(headerOffset + 0, littleEndian);\r\n        location.translateY = context.header.getFloat32(headerOffset + 4, littleEndian);\r\n        location.translateZ = context.header.getFloat32(headerOffset + 8, littleEndian);\r\n        location.rotateX = context.header.getFloat32(headerOffset + 12, littleEndian);\r\n        location.rotateY = context.header.getFloat32(headerOffset + 16, littleEndian);\r\n        location.rotateZ = context.header.getFloat32(headerOffset + 20, littleEndian);\r\n        location.scaleX = context.header.getFloat32(headerOffset + 24, littleEndian);\r\n        location.scaleY = context.header.getFloat32(headerOffset + 28, littleEndian);\r\n        location.scaleZ = context.header.getFloat32(headerOffset + 32, littleEndian);\r\n        location.isModified = true;\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader) {\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + \r\n                (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations.\" + \r\n                (hasMesh ? \" Paint mesh \" + meshIndex : \" No mesh\") + (hasMaterial ? \" with material \" + materialIndex : \". No material\"));\r\n            console.log(\"Object[\" + objectIndex + \"] at (\" + \r\n                round4(location.translateX) + \",\" + round4(location.translateY) + \",\" + round4(location.translateZ) +\").[\"+ \r\n                round4(location.rotateX) + \",\" + round4(location.rotateY) + \",\" + round4(location.rotateZ) + \"]x(\" + \r\n                round4(location.scaleX) + \",\" + round4(location.scaleY) + \",\" + round4(location.scaleZ) + \")\");\r\n        }\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot);\r\n        model.location = location;\r\n\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw(gl);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n/*\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);\r\n*/","﻿window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    extract2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    extract3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) / 2);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    dot: function (a, b) {\r\n        let result = 0;\r\n        for (let i = 0; i < a.length; i++)\r\n            result += a[i] * b[i];\r\n        return result;\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n    append: function(a, v) {\r\n        for (let i = 0; i < v.length; i++) a.push(v[i]);\r\n    }\r\n}\r\n","﻿// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Model = function (is3d, parent) {\r\n    const frag = window.frag;\r\n\r\n    if (is3d === undefined) {\r\n        if (parent && parent.location)\r\n            is3d = parent.location.is3d;\r\n        else\r\n            is3d = true;\r\n    }\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: frag.Location(is3d),\r\n        animations: []\r\n    };\r\n\r\n    public.dispose = function(){\r\n    }\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.getPosition = function() {\r\n        return frag.ScenePosition(public.location);\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== public.location.is3d){\r\n            const m = public.location.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" location and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(undefined, public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe(drawWireframe);\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(drawWireframe, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, modelToWorldMatrix, modelToClipMatrix, animationMap) {\r\n        if (!public.location) return public;\r\n\r\n        const animationState = animationMap && private.name ? animationMap[private.name] : null;\r\n        const location = animationState\r\n            ? public.location.clone().add(animationState.location)\r\n            : public.location;\r\n        const localMatrix = location.getMatrix();\r\n\r\n        if (location.is3d) {\r\n            modelToWorldMatrix = frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix);\r\n        } else {\r\n            modelToWorldMatrix = frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix);\r\n        }\r\n\r\n        const shader = public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData) {\r\n            shader.bind(gl);\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                const modelToClipTransform = location.is3d ? frag.Transform(modelToClipMatrix) : frag.Transform2D(modelToClipMatrix);\r\n                modelToClipTransform.apply(gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                const modelToWorldTransform = location.is3d ? frag.Transform(modelToWorldMatrix) : frag.Transform2D(modelToWorldMatrix);\r\n                modelToWorldTransform.apply(gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(gl, shader);\r\n\r\n            shader.unbind(gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(gl, modelToWorldMatrix, modelToClipMatrix, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl) {\r\n        if (private.activeCamera) {\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(gl, private.activeCamera.worldToClipTransform);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.SceneObject = function (model) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        location: null,\r\n        animationLocation: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    private.getLocation = function () {\r\n        if (private.location) return private.location;\r\n        if (!private.model.location) return null;\r\n        private.location = frag.Location(private.model.location.is3d);\r\n        return private.location;\r\n    };\r\n\r\n    private.getAnimationLocation = function () {\r\n        if (private.animationLocation) return private.animationLocation;\r\n        if (!private.model.location) return null;\r\n        private.animationLocation = frag.Location(private.model.location.is3d);\r\n        return private.animationLocation;\r\n    };\r\n\r\n    /**\r\n     * @returns a ScemePosition object that can be used to manipulate the position\r\n     * scale and orientation of this object in the scene\r\n     */\r\n    public.getPosition = function () {\r\n        const location = private.getLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * @returns a ScenePosition object that can be used to change the animation\r\n     * position of the scene object. The animation position is added to the scene\r\n     * object's static position to create a temporary animation effect\r\n     */\r\n    public.getAnimationPosition = function () {\r\n        const location = private.getAnimationLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * Clears any animation position that was set. This is more efficient\r\n     * than setting the animation location to zero\r\n     */\r\n    public.clearAnimationPosition = function () {\r\n        private.animationLocation = null;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Includes this object in the scene. Call this function when the object\r\n     * could possibly be seen by the player. The engine will go through the\r\n     * process of transforming the mesh into screen space and clip anything\r\n     * that is not within the screen bounds. To avoid this expensive operations\r\n     * for objects that you know cannot be seen by the player, call the disable() \r\n     * function.\r\n     */\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Excludes this object in the scene. Call this function when the object\r\n     * is not viewable through the player's viewport - for example it moved\r\n     * behind the player's point of view.\r\n     */\r\n     public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Frees any resources consumed by this scene object and removes it from\r\n     * the scene.\r\n     */\r\n    public.dispose = function() {\r\n        public.disable();\r\n        for (let animationName in public.animations) {\r\n            public.animations[animationName].dispose();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    /**\r\n     * This is used internally by the engine. Don't call this from your game code\r\n     */\r\n    public.draw = function (gl, worldToClipTransform) {\r\n        if (!private.enabled) return public;\r\n\r\n        let location = private.getLocation();\r\n        if (!location) return public;\r\n\r\n        if (private.animationLocation) {\r\n            location = location.clone().add(private.animationLocation);\r\n        }\r\n\r\n        const worldToClipMatrix = worldToClipTransform.getMatrix();\r\n        const modelToWorldMatrix = location.getMatrix();\r\n        const modelToClipMatrix = worldToClipTransform.is3d\r\n            ? frag.Matrix.m4Xm4(worldToClipMatrix, modelToWorldMatrix)\r\n            : frag.Matrix.m3Xm3(worldToClipMatrix, modelToWorldMatrix);\r\n\r\n        private.model.draw(gl, modelToWorldMatrix, modelToClipMatrix, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","﻿// This class provides a set of helper methods for\r\n// manipulating a Location object\r\nwindow.frag.ScenePosition = function (location) {\r\n    const private = {\r\n        location: null,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setLocation = function (value) {\r\n        private.location = value || window.frag.Location();\r\n        return public;\r\n    }\r\n    public.setLocation(location);\r\n\r\n    public.getMatrix = function () {\r\n        return private.location.getMatrix();\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.location.scaleX;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.location.scaleY;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.location.scaleZ;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.location.scaleX = s;\r\n        private.location.scaleY = s;\r\n        private.location.scaleZ = s;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.location.scaleX = x;\r\n        private.location.scaleY = y;\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.location.scaleX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.location.scaleY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * scales[0],\r\n            private.location.scaleY * scales[1],\r\n            private.location.scaleZ * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * xScale,\r\n            private.location.scaleY * yScale,\r\n            private.location.scaleZ * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.location.rotateX;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.location.rotateY;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.location.rotateZ;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.rotateX, private.location.rotateY, private.location.rotateZ];\r\n        else\r\n            return [private.location.rotateX, private.location.rotateY];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.location.rotateX = v[0];\r\n        if (v.length > 1) private.location.rotateY = v[1];\r\n        if (v.length > 2) private.location.rotateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.location.rotateX = x;\r\n        private.location.rotateY = y;\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.location.rotateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.location.rotateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + euler[0],\r\n            private.location.rotateY + euler[1],\r\n            private.location.rotateZ + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + x,\r\n            private.location.rotateY + y,\r\n            private.location.rotateZ + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.location.translateX;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.location.translateY;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.location.translateZ;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.translateX, private.location.translateY, private.location.translateZ];\r\n        else\r\n            return [private.location.translateX, private.location.translateY];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.location.translateX = v[0];\r\n        if (v.length > 1) private.location.translateY = v[1];\r\n        if (v.length > 2) private.location.translateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.location.translateX = x;\r\n        private.location.translateY = y;\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.location.translateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.location.translateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.location.translateX + direction[0],\r\n            private.location.translateY + direction[1],\r\n            private.location.translateZ + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.location.translateX + x,\r\n            private.location.translateY + y,\r\n            private.location.translateZ + z);\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.extract2D(array, index);\r\n        return frag.Vector.extract3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","﻿window.frag.startFunctions.push(function(frag) {\r\n    frag.uiShader = frag.Shader()\r\n        .name(\"UI\")\r\n        .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n        .matrix2D()       // Transformation matricies are 2D\r\n        .diffuseTexture() // Adds support for diffuse texture mapping\r\n        .compile();       // Compile the shader\r\n});\r\n","﻿// This cube has the minimum vertex count but only texture maps correctly on 4 sides\r\n// http://www.cs.umd.edu/gvil/papers/av_ts.pdf\r\nwindow.frag.BasicCube = function (options) {\r\n    options = options || {};\r\n\r\n    const u0 = 0;\r\n    const u1 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const verticies = [\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, -1,\r\n        -1, -1, -1,\r\n        +1, +1, +1,\r\n        -1, +1, +1,\r\n        -1, -1, +1,\r\n        +1, -1, +1,\r\n    ];\r\n\r\n    const uvs = [\r\n        u0, v3,\r\n        u0, v0,\r\n        u0, v2,\r\n        u0, v1,\r\n        u1, v3,\r\n        u1, v0,\r\n        u1, v1,\r\n        u1, v2,\r\n    ];\r\n\r\n    const draw = function (indexes) {\r\n        const v = [];\r\n        const u = [];\r\n        const c = options.color ? [] : undefined;\r\n        for (var i = 0; i < indexes.length; i++) {\r\n            const corner = indexes[i];\r\n            v.push(verticies[corner * 3 + 0]);\r\n            v.push(verticies[corner * 3 + 1]);\r\n            v.push(verticies[corner * 3 + 2]);\r\n\r\n            if (options.color) {\r\n                options.color.array.forEach(e => { c.push(e); });\r\n            }\r\n\r\n            u.push(uvs[corner * 2 + 0]);\r\n            u.push(uvs[corner * 2 + 1]);\r\n        }\r\n        return window.frag.MeshData().addTriangleStrip(v, c, u, v);\r\n    }\r\n\r\n    return draw([3, 2, 6, 7, 4, 2, 0, 3, 1, 6, 5, 4, 1, 0]);\r\n};","﻿// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","﻿window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","﻿window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","﻿window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","﻿// This cube has a separate sub-mesh for each face of the cube.\r\nwindow.frag.SeparatedCube = function (facets, options) {\r\n    facets = 1;\r\n    options = options || {};\r\n\r\n    const mesh = window.frag.MeshData();\r\n    \r\n    const u0 = 0;\r\n    const u1 = 1 / 4;\r\n    const u2 = 2 / 4;\r\n    const u3 = 3 / 4;\r\n    const u4 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const corners = [\r\n        -1, -1, -1,\r\n        +1, -1, -1,\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, +1,\r\n        -1, -1, +1,\r\n        -1, +1, +1,\r\n        +1, +1, +1,\r\n    ];\r\n\r\n    const addFace = function (indexes, t0, t1, normal) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const uvs = [t1[0], t0[1], t1[0], t1[1], t0[0], t0[1], t0[0], t1[1]];\r\n            const verticies = [];\r\n            const normals = [];\r\n            const colors = options.color ? [] : undefined;\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                for (var i = 0; i < 4; i++) {\r\n                    verticies.push(corners[indexes[i] * 3 + 0]);\r\n                    verticies.push(corners[indexes[i] * 3 + 1]);\r\n                    verticies.push(corners[indexes[i] * 3 + 2]);\r\n\r\n                    if (options.color)\r\n                        options.color.forEach(c => colors.push(c));\r\n        \r\n                    normals.push(normal[0]);\r\n                    normals.push(normal[1]);\r\n                    normals.push(normal[2]);\r\n                }\r\n            }\r\n            mesh.addTriangleStrip(verticies, colors, uvs, verticies);\r\n        }\r\n    }\r\n\r\n    addFace([1, 2, 0, 3], [u1, v2], [u0, v1], [0, 0, -1]); // front\r\n    addFace([4, 1, 5, 0], [u2, v2], [u1, v1], [0, -1, 0]); // bottom\r\n    addFace([0, 3, 5, 6], [u2, v2], [u1, v3], [-1, 0, 0]); // left\r\n    addFace([4, 7, 1, 2], [u1, v1], [u2, v0], [+1, 0, 0]); // right\r\n    addFace([5, 6, 4, 7], [u2, v1], [u3, v2], [0, 0, +1]); // back\r\n    addFace([6, 3, 7, 2], [u3, v1], [u4, v2], [0, +1, 0]); // top\r\n\r\n    return mesh;\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Location\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Plane\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/BasicCube\");\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/SeparatedCube\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n"],"sourceRoot":""}