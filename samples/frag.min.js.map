{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/BasicCube.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/./src/Shapes/SeparatedCube.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","public","__private","DEFAULT_STEP_DURATION","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","disposeOnStop","dispose","sequence","step","sequenceIndex","nextStepTick","stop","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","forEach","duraton","perform","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","i","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","is3d","matrix","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","transform","Transform","translateXYZ","rotateXYZ","scaleXYZ","Transform2D","translateXY","rotate","scaleXY","getMatrix","channelName","console","warn","ParallelAnimationAction","a","PositionAnimationAction","scenePosition","ticksPerDistance","Vector","startLocation","startRotate","moveBy","rotateBy","vector","distance","x","y","z","location","current","getLocation","sub","moveTo","onStart","onStop","getRotate","endTick","r","add","mult","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","PI","zNear","zFar","xScale","aspectRatio","worldToClipTransform","computeTransformMatrix","yScale","zScale","zOffset","identity","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","UiCamera","horizontalScale","scenes","animations","startTime","performance","now","mainScene","correctClock","serverTick","difference","gameTickMs","scene","addScene","removeScene","splice","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","t1","fps","setTimeout","renderInterval","document","getElementById","error","getContext","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","init","alert","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","tests","check","expected","m4Xv4","expectArray","t2","t3","run","test","m3Xm3","uniformMatrix3fv","AssetCatalog","shader","defaultTextures","defaultTexturePixels","Uint8Array","diffuse","Texture","dataFormat","RGBA","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","models","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","log","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","materialStore","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","assetCatalog","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","context","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","texture","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","UNSIGNED_BYTE","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","texImage2D","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","uniforms","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","actual","abs","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","makeVectorFromArray2D","makeVectorFromArray3D","zero","dimensions","div","sum","sqrt","average","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","color","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","n","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","attributes","position","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","clone","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","modelToWorldTransform","modelToClipTransform","animationMatrix","localMatrix","modelToWorldMatrix","modelToClipMatrix","bind","clipMatrix","modelMatrix","unbind","Scene","sceneObjects","activeCamera","cameraUpdated","sceneObject","camera","SceneObject","enabled","animationPosition","childModelName","objectAnimation","combineTransforms","parentMatrix","childMatrix","getPosition","modelTransform","getTransform","ScenePosition","ensureAnimationPosition","deleteAnimationPosition","getModelToWorldTransform","animationTransform","disable","rotation","translation","isDirty","ensureTransform","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","createShader","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","vSource","addUniformDeclarations","fSource","addVaryingDeclarations","statement","addLogic","VERTEX_SHADER","FRAGMENT_SHADER","bindList","unbindList","getAttribLocation","getUniformLocation","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","useProgram","uiShader","verticiesXY","matrix2D","BasicCube","options","indexes","u","corner","e","Cube","facets","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","up","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","SeparatedCube","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["﻿// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.disposeOnStop) public.dispose();\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        public.duration = 0;\r\n        private.sequence.forEach(action => {\r\n            if (action.duration)\r\n                public.duration += action.duraton;\r\n            else\r\n                public.duration += DEFAULT_STEP_DURATION;\r\n        });\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","﻿// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n        is3d: true,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        if (!private.matrix) {\r\n            let transform;\r\n            if (private.is3d) {\r\n                transform = window.frag.Transform()\r\n                    .translateXYZ(private.translateX, private.translateY, private.translateZ)\r\n                    .rotateXYZ(private.rotateX, private.rotateY, private.rotateZ)\r\n                    .scaleXYZ(private.scaleX, private.scaleY, private.scaleZ);\r\n            } else {\r\n                transform = window.frag.Transform2D()\r\n                    .translateXY(private.translateX, private.translateY)\r\n                    .rotate(private.rotateZ)\r\n                    .scaleXY(private.scaleX, private.scaleY);\r\n            }\r\n            private.matrix = transform.getMatrix();\r\n        }\r\n        return private.matrix;\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.translateX = value;\r\n                        if (private.matrix) private.matrix[12] = value;\r\n                    }\r\n                return function (value) {\r\n                    private.translateX = value;\r\n                    if (private.matrix) private.matrix[6] = value;\r\n                };\r\n            case \"translate-y\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.translateY = value;\r\n                        if (private.matrix) private.matrix[13] = value;\r\n                    }\r\n                return function (value) {\r\n                    private.translateY = value;\r\n                    if (private.matrix) private.matrix[7] = value;\r\n                };\r\n            case \"translate-z\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.translateZ = value;\r\n                        if (private.matrix) private.matrix[14] = value;\r\n                    }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    private.scaleX = value;\r\n                    private.matrix = null;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    private.scaleY = value;\r\n                    private.matrix = null;\r\n                };\r\n            case \"scale-z\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.scaleZ = value;\r\n                        private.matrix = null;\r\n                    }\r\n\r\n            case \"rotate-x\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.rotateX = value;\r\n                        private.matrix = null;\r\n                    }\r\n            case \"rotate-y\":\r\n                if (private.is3d)\r\n                    return function (value) {\r\n                        private.rotateY = value;\r\n                        private.matrix = null;\r\n                    }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    private.rotateZ = value;\r\n                    private.matrix = null;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.PositionAnimationAction = function (scenePosition, ticksPerDistance) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        ticksPerDistance,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector) {\r\n        let distance = Vector.length(vector);\r\n        private.moveBy = vector;\r\n        public.duration = Math.floor(private.ticksPerDistance * distance + 1);\r\n        return public;\r\n    }\r\n\r\n    public.moveByXYZ = function (x, y, z) {\r\n        return public.moveBy([x, y, z]);\r\n    }\r\n\r\n    public.moveByXY = function (x, y) {\r\n        return public.moveBy([x, y]);\r\n    }\r\n\r\n    public.rotateBy = function (vector) {\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location) {\r\n        let current = private.scenePosition.getLocation();\r\n        public.moveBy(Vector.sub(current, location));\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        return public.moveTo([x, y, z]);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        return public.moveTo([x, y]);\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        if (private.moveBy) {\r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(private.moveBy, r)));\r\n        }\r\n        if (private.rotateBy) {\r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(private.rotateBy, r)));\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","﻿// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿(function () {\r\n    const frag = window.frag;\r\n\r\n    const scenes = [];\r\n    const animations = [];\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animations.push(animation);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            if (animations[i] === animation) {\r\n                animations.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            // TODO: sort animations into buckets according to how far away from next step\r\n            // TODO: keep a separate list of animations that are stopped\r\n            let animation = animations[i];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            let gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            mainScene.draw(gl);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(gl);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    render();\r\n})();\r\n","﻿/* To customize Frag for your application, assign an object\r\n   to window.frag before loading the Frag library. The object you \r\n   assign can contain the canvas to draw on and an initialization \r\n   function as illustrated by the following example:\r\n\r\nwindow.frag = {\r\n    canvas: document.getElementById(\"my-canvas\"),\r\n    init: function(frag) {\r\n        frag.gl.clearColor(0, 0, 0, 1);\r\n        frag.debugShaderBuilder = true;\r\n        frag.renderInterval = 10;\r\n        frag.gameTickMs = 50;\r\n    }\r\n};\r\n*/\r\n\r\nwindow.frag = (function (frag) {\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.init) frag.init(frag);\r\n\r\n    return frag;\r\n})(window.frag || {});","﻿window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","﻿// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);","﻿// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model()\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (materialStore, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = materialStore.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(materialStore, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" frames\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const transform = frag.Transform()\r\n            .translateXYZ(context.header.getFloat32(headerOffset + 0, littleEndian), context.header.getFloat32(headerOffset + 4, littleEndian), context.header.getFloat32(headerOffset + 8, littleEndian))\r\n            .rotateXYZ(context.header.getFloat32(headerOffset + 12, littleEndian), context.header.getFloat32(headerOffset + 16, littleEndian), context.header.getFloat32(headerOffset + 20, littleEndian))\r\n            .scaleXYZ(context.header.getFloat32(headerOffset + 24, littleEndian), context.header.getFloat32(headerOffset + 28, littleEndian), context.header.getFloat32(headerOffset + 32, littleEndian));\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations. Paint mesh \" + meshIndex + \" with material \" + materialIndex);\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot).transform(transform);\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw(gl);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);","﻿window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    makeVectorFromArray2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    makeVectorFromArray3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) / 2);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n}\r\n","﻿// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Model = function (parent) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n        transform: frag.Transform().identity(), // assume 3D\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: []\r\n    };\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.transform = function (value) {\r\n        private.transform = value;\r\n        return public;\r\n    }\r\n\r\n    public.getTransform = function () {\r\n        return private.transform;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== private.transform.is3d){\r\n            const m = private.transform.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" transform and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, modelToWorldTransform, modelToClipTransform, animationMap) {\r\n        let animationMatrix;\r\n        if (animationMap && private.name) {\r\n            const animationState = animationMap[private.name];\r\n            if (animationState) animationMatrix = animationState.getMatrix();\r\n        }\r\n\r\n        let localMatrix = private.transform.getMatrix();\r\n        if (animationMatrix) {\r\n            if (private.transform.is3d) localMatrix = frag.Matrix.m4Xm4(localMatrix, animationMatrix);\r\n            else localMatrix = frag.Matrix.m3Xm3(localMatrix, animationMatrix);\r\n        }\r\n\r\n        const modelToWorldMatrix = modelToWorldTransform.getMatrix();\r\n        const modelToClipMatrix = modelToClipTransform.getMatrix();\r\n\r\n        if (private.transform.is3d) {\r\n            modelToWorldTransform = frag.Transform(frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix));\r\n            modelToClipTransform = frag.Transform(frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix));\r\n        } else {\r\n            modelToWorldTransform = frag.Transform2D(frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix));\r\n            modelToClipTransform = frag.Transform2D(frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix));\r\n        }\r\n\r\n        const shader = public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData) {\r\n            shader.bind(gl);\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                modelToClipTransform.apply(gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                modelToWorldTransform.apply(gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(gl, shader);\r\n\r\n            shader.unbind(gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(gl, modelToWorldTransform, modelToClipTransform, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl) {\r\n        if (private.activeCamera) {\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(gl, private.activeCamera.worldToClipTransform);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.SceneObject = function (model) {\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        position: null,\r\n        animationPosition: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    const combineTransforms = function (parent, child) {\r\n        const parentMatrix = parent.getMatrix();\r\n        const childMatrix = child.getMatrix();\r\n        if (parent.is3d) return frag.Transform(frag.Matrix.m4Xm4(parentMatrix, childMatrix));\r\n        return frag.Transform2D(frag.Matrix.m3Xm3(parentMatrix, childMatrix));\r\n    };\r\n\r\n    public.getPosition = function () {\r\n        if (private.position) return private.position;\r\n        const modelTransform = private.model.getTransform();\r\n        private.position = window.frag.ScenePosition(modelTransform.clone());\r\n        return private.position;\r\n    };\r\n\r\n    public.ensureAnimationPosition = function () {\r\n        if (private.animationPosition) return private.animationPosition;\r\n        const modelTransform = private.model.getTransform();\r\n        if (!modelTransform) return null;\r\n        private.animationPosition = window.frag.ScenePosition(modelTransform.clone());\r\n        return private.animationPosition;\r\n    };\r\n\r\n    public.deleteAnimationPosition = function () {\r\n        private.animationPosition = null;\r\n        return public;\r\n    };\r\n\r\n    private.getModelToWorldTransform = function () {\r\n        const position = public.getPosition();\r\n        let transform = combineTransforms(private.model.getTransform(), position.getTransform());\r\n        if (!private.animationPosition) return transform;\r\n        const animationTransform = private.animationPosition.getTransform();\r\n        return combineTransforms(transform, animationTransform);\r\n    };\r\n\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    public.dispose = function() {\r\n        public.disable();\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, worldToClipTransform) {\r\n        if (!private.enabled) return public;\r\n        const modelToWorldTransform = private.getModelToWorldTransform();\r\n        if (!modelToWorldTransform) return public;\r\n\r\n        let modelToClipTransform = combineTransforms(worldToClipTransform, modelToWorldTransform);\r\n        private.model.draw(gl, modelToWorldTransform, modelToClipTransform, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","﻿window.frag.ScenePosition = function (transform) {\r\n    const private = {\r\n        scale: {\r\n            x: 1,\r\n            y: 1,\r\n            z: 1\r\n        },\r\n        rotation: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        },\r\n        translation: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        },\r\n        transform: transform,\r\n        isDirty: true\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTransform = function () {\r\n        if (!private.isDirty) return;\r\n        private.isDirty = false;\r\n        if (private.transform.is3d) {\r\n            private.transform\r\n                .identity()\r\n                .translateXYZ(private.translation.x, private.translation.y, private.translation.z)\r\n                .rotateXYZ(private.rotation.x, private.rotation.y, private.rotation.z)\r\n                .scaleXYZ(private.scale.x, private.scale.y, private.scale.z);\r\n        } else {\r\n            private.transform\r\n                .identity()\r\n                .translateXY(private.translation.x, private.translation.y)\r\n                .rotate(private.rotation.z)\r\n                .scaleXY(private.scale.x, private.scale.y);\r\n        }\r\n    }\r\n\r\n    public.transform = function (value) {\r\n        private.transform = value;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.getTransform = function () {\r\n        private.ensureTransform();\r\n        return private.transform;\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.scale.x;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.scale.y;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.scale.z;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.scale.x = s;\r\n        private.scale.y = s;\r\n        private.scale.z = s;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.scale.x = x;\r\n        private.scale.y = y;\r\n        private.scale.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.scale.x = x;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.scale.y = y;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.scale.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.rotateXYZ(\r\n            private.scale.x * scales[0],\r\n            private.scale.y * scales[1],\r\n            private.scale.z * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.rotateXYZ(\r\n            private.scale.x * xScale,\r\n            private.scale.y * yScale,\r\n            private.scale.z * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.rotation.x;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.rotation.y;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.rotation.z;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.transform.is3d)\r\n            return [private.rotation.x, private.rotation.y, private.rotation.z];\r\n        else\r\n            return [private.rotation.x, private.rotation.y];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.rotation.x = v[0];\r\n        if (v.length > 1) private.rotation.y = v[1];\r\n        if (v.length > 2) private.rotation.z = v[2];\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.rotation.x = x;\r\n        private.rotation.y = y;\r\n        private.rotation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.rotation.x = x;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.rotation.y = y;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.rotation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.rotation.x + euler[0],\r\n            private.rotation.y + euler[1],\r\n            private.rotation.z + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.rotation.x + x,\r\n            private.rotation.y + y,\r\n            private.rotation.z + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.translation.x;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.translation.y;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.translation.z;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.transform.is3d)\r\n            return [private.translation.x, private.translation.y, private.translation.z];\r\n        else\r\n            return [private.translation.x, private.translation.y];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.translation.x = v[0];\r\n        if (v.length > 1) private.translation.y = v[1];\r\n        if (v.length > 2) private.translation.z = v[2];\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.translation.x = x;\r\n        private.translation.y = y;\r\n        private.translation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.translation.x = x;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.translation.y = y;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.translation.z = z;\r\n        private.isDirty = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.translation.x + direction[0],\r\n            private.translation.y + direction[1],\r\n            private.translation.z + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.translation.x + x,\r\n            private.translation.y + y,\r\n            private.translation.z + z);\r\n\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.makeVectorFromArray2D(array, index);\r\n        return frag.Vector.makeVectorFromArray3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","﻿window.frag.uiShader = window.frag.Shader()\r\n    .name(\"UI\")\r\n    .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n    .matrix2D()       // Transformation matricies are 2D\r\n    .diffuseTexture() // Adds support for diffuse texture mapping\r\n    .compile();       // Compile the shader\r\n","﻿// This cube has the minimum vertex count but only texture maps correctly on 4 sides\r\n// http://www.cs.umd.edu/gvil/papers/av_ts.pdf\r\nwindow.frag.BasicCube = function (options) {\r\n    const u0 = 0;\r\n    const u1 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const verticies = [\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, -1,\r\n        -1, -1, -1,\r\n        +1, +1, +1,\r\n        -1, +1, +1,\r\n        -1, -1, +1,\r\n        +1, -1, +1,\r\n    ];\r\n\r\n    const uvs = [\r\n        u0, v3,\r\n        u0, v0,\r\n        u0, v2,\r\n        u0, v1,\r\n        u1, v3,\r\n        u1, v0,\r\n        u1, v1,\r\n        u1, v2,\r\n    ];\r\n\r\n    const draw = function (indexes) {\r\n        const v = [];\r\n        const u = [];\r\n        const c = options.color ? [] : undefined;\r\n        for (var i = 0; i < indexes.length; i++) {\r\n            const corner = indexes[i];\r\n            v.push(verticies[corner * 3 + 0]);\r\n            v.push(verticies[corner * 3 + 1]);\r\n            v.push(verticies[corner * 3 + 2]);\r\n\r\n            if (options.color) {\r\n                options.color.array.forEach(e => { c.push(e); });\r\n            }\r\n\r\n            u.push(uvs[corner * 2 + 0]);\r\n            u.push(uvs[corner * 2 + 1]);\r\n        }\r\n        return window.frag.MeshData().addTriangleStrip(v, c, u, v);\r\n    }\r\n\r\n    return draw([3, 2, 6, 7, 4, 2, 0, 3, 1, 6, 5, 4, 1, 0]);\r\n};","﻿// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","﻿window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","﻿window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","﻿window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","﻿// This cube has a separate sub-mesh for each face of the cube.\r\nwindow.frag.SeparatedCube = function (facets, options) {\r\n    facets = 1;\r\n    const mesh = window.frag.MeshData();\r\n    \r\n    const u0 = 0;\r\n    const u1 = 1 / 4;\r\n    const u2 = 2 / 4;\r\n    const u3 = 3 / 4;\r\n    const u4 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const corners = [\r\n        -1, -1, -1,\r\n        +1, -1, -1,\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, +1,\r\n        -1, -1, +1,\r\n        -1, +1, +1,\r\n        +1, +1, +1,\r\n    ];\r\n\r\n    const addFace = function (indexes, t0, t1, normal) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const uvs = [t1[0], t0[1], t1[0], t1[1], t0[0], t0[1], t0[0], t1[1]];\r\n            const verticies = [];\r\n            const normals = [];\r\n            const colors = options.color ? [] : undefined;\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                for (var i = 0; i < 4; i++) {\r\n                    verticies.push(corners[indexes[i] * 3 + 0]);\r\n                    verticies.push(corners[indexes[i] * 3 + 1]);\r\n                    verticies.push(corners[indexes[i] * 3 + 2]);\r\n\r\n                    if (options.color)\r\n                        options.color.forEach(c => colors.push(c));\r\n        \r\n                    normals.push(normal[0]);\r\n                    normals.push(normal[1]);\r\n                    normals.push(normal[2]);\r\n                }\r\n            }\r\n            mesh.addTriangleStrip(verticies, colors, uvs, verticies);\r\n        }\r\n    }\r\n\r\n    addFace([1, 2, 0, 3], [u1, v2], [u0, v1], [0, 0, -1]); // front\r\n    addFace([4, 1, 5, 0], [u2, v2], [u1, v1], [0, -1, 0]); // bottom\r\n    addFace([0, 3, 5, 6], [u2, v2], [u1, v3], [-1, 0, 0]); // left\r\n    addFace([4, 7, 1, 2], [u1, v1], [u2, v0], [+1, 0, 0]); // right\r\n    addFace([5, 6, 4, 7], [u2, v1], [u3, v2], [0, 0, +1]); // back\r\n    addFace([6, 3, 7, 2], [u3, v1], [u4, v2], [0, +1, 0]); // top\r\n\r\n    return mesh;\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Plane\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/BasicCube\");\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/SeparatedCube\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n"],"sourceRoot":""}