{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Location.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/BasicCube.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/./src/Shapes/SeparatedCube.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","public","__private","DEFAULT_STEP_DURATION","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","disposeOnStop","dispose","sequence","step","sequenceIndex","nextStepTick","stop","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","i","perform","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","location","Location","getMatrix","channelName","translateX","isModified","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","console","warn","ParallelAnimationAction","forEach","a","PositionAnimationAction","scenePosition","ticksPerDistance","Vector","startLocation","startRotate","moveBy","rotateBy","vector","distance","x","y","z","current","getLocation","sub","moveTo","onStart","onStop","getRotate","endTick","r","add","mult","rotate","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","PI","zNear","zFar","xScale","aspectRatio","worldToClipTransform","Transform","computeTransformMatrix","yScale","zScale","zOffset","identity","scaleXYZ","translateXY","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","matrix","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","translateXYZ","rotateXYZ","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","UiCamera","Transform2D","horizontalScale","scenes","animations","startTime","performance","now","mainScene","correctClock","serverTick","difference","gameTickMs","scene","addScene","removeScene","splice","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","t1","fps","setTimeout","renderInterval","document","getElementById","error","getContext","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","debugMeshes","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","init","alert","is3d","clone","other","transform","scaleXY","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","tests","check","expected","m4Xv4","expectArray","t2","t3","run","test","m3Xm3","uniformMatrix3fv","AssetCatalog","shader","defaultTextures","defaultTexturePixels","Uint8Array","diffuse","Texture","dataFormat","RGBA","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","models","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","log","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","materialStore","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","assetCatalog","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","context","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","texture","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","UNSIGNED_BYTE","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","texImage2D","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","uniforms","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","actual","abs","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","makeVectorFromArray2D","makeVectorFromArray3D","zero","dimensions","div","sum","sqrt","average","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","color","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","n","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","attributes","position","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","ScenePosition","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","modelToWorldMatrix","modelToClipMatrix","localMatrix","modelToWorldTransform","modelToClipTransform","bind","clipMatrix","modelMatrix","unbind","Scene","sceneObjects","activeCamera","cameraUpdated","sceneObject","camera","SceneObject","enabled","animationPosition","childModelName","objectAnimation","getPosition","ensureAnimationPosition","deleteAnimationPosition","disable","worldToClipMatrix","setLocation","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","createShader","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","vSource","addUniformDeclarations","fSource","addVaryingDeclarations","statement","addLogic","VERTEX_SHADER","FRAGMENT_SHADER","bindList","unbindList","getAttribLocation","getUniformLocation","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","useProgram","uiShader","verticiesXY","matrix2D","BasicCube","options","indexes","u","corner","e","Cube","facets","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","up","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","SeparatedCube","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["﻿// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.disposeOnStop) public.dispose();\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        let duration = 0;\r\n        for (let i = 0; i < private.sequence.length; i++) {\r\n            const action = private.sequence[i];\r\n            if (action.duration !== undefined)\r\n                duration = duration + action.duration;\r\n            else\r\n                duration = duration + DEFAULT_STEP_DURATION;\r\n        }\r\n        public.duration = duration;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","﻿// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: window.frag.Location(),\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        return public.location.getMatrix();\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                return function (value) {\r\n                    public.location.translateX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-y\":\r\n                return function (value) {\r\n                    public.location.translateY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-z\":\r\n                return function (value) {\r\n                    public.location.translateZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    public.location.scaleX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    public.location.scaleY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-z\":\r\n                return function (value) {\r\n                    public.location.scaleZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"rotate-x\":\r\n                return function (value) {\r\n                    public.location.rotateX = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-y\":\r\n                return function (value) {\r\n                    public.location.rotateY = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    public.location.rotateZ = value;\r\n                    public.location.isModified = true;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.PositionAnimationAction = function (scenePosition, ticksPerDistance) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        ticksPerDistance,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector) {\r\n        let distance = Vector.length(vector);\r\n        private.moveBy = vector;\r\n        public.duration = Math.floor(private.ticksPerDistance * distance + 1);\r\n        return public;\r\n    }\r\n\r\n    public.moveByXYZ = function (x, y, z) {\r\n        return public.moveBy([x, y, z]);\r\n    }\r\n\r\n    public.moveByXY = function (x, y) {\r\n        return public.moveBy([x, y]);\r\n    }\r\n\r\n    public.rotateBy = function (vector) {\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location) {\r\n        let current = private.scenePosition.getLocation();\r\n        public.moveBy(Vector.sub(current, location));\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        return public.moveTo([x, y, z]);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        return public.moveTo([x, y]);\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        if (private.moveBy) {\r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(private.moveBy, r)));\r\n        }\r\n        if (private.rotateBy) {\r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(private.rotateBy, r)));\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","﻿// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿(function () {\r\n    const frag = window.frag;\r\n\r\n    const scenes = [];\r\n    const animations = [];\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animations.push(animation);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            if (animations[i] === animation) {\r\n                animations.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            // TODO: sort animations into buckets according to how far away from next step\r\n            // TODO: keep a separate list of animations that are stopped\r\n            let animation = animations[i];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            let gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            mainScene.draw(gl);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(gl);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    render();\r\n})();\r\n","﻿/* To customize Frag for your application, assign an object\r\n   to window.frag before loading the Frag library. The object you \r\n   assign can contain the canvas to draw on and an initialization \r\n   function as illustrated by the following example:\r\n\r\nwindow.frag = {\r\n    canvas: document.getElementById(\"my-canvas\"),\r\n    init: function(frag) {\r\n        frag.gl.clearColor(0, 0, 0, 1);\r\n        frag.debugShaderBuilder = true;\r\n        frag.renderInterval = 10;\r\n        frag.gameTickMs = 50;\r\n    }\r\n};\r\n*/\r\n\r\nwindow.frag = (function (frag) {\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n    frag.debugMeshes = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.init) frag.init(frag);\r\n\r\n    return frag;\r\n})(window.frag || {});","// Represents a location, scale and orientation\r\nwindow.frag.Location = function (is3d) {\r\n    const public = {\r\n        is3d,\r\n        isModified: false,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    public.clone = function() {\r\n        const clone = window.frag.Location(public.is3d);\r\n        clone.isModified = public.isModified;\r\n        clone.matrix = public.matrix;\r\n        clone.translateX = public.translateX;\r\n        clone.translateY = public.translateY;\r\n        clone.translateZ = public.translateZ;\r\n        clone.scaleX = public.scaleX;\r\n        clone.scaleY = public.scaleY;\r\n        clone.scaleZ = public.scaleZ;\r\n        clone.rotateX = public.rotateX;\r\n        clone.rotateY = public.rotateY;\r\n        clone.rotateZ = public.rotateZ;\r\n        return clone;\r\n    }\r\n\r\n    public.add = function(other) {\r\n        public.translateX += other.translateX;\r\n        public.translateY += other.translateY;\r\n        public.translateZ += other.translateZ;\r\n        public.scaleX *= other.scaleX;\r\n        public.scaleY *= other.scaleY;\r\n        public.scaleZ *= other.scaleZ;\r\n        public.rotateX += other.rotateX;\r\n        public.rotateY += other.rotateY;\r\n        public.rotateZ += other.rotateZ;\r\n        public.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        if (public.matrix && !public.isModified)\r\n            return public.matrix;\r\n\r\n        let transform;\r\n        if (public.is3d) {\r\n            transform = window.frag.Transform()\r\n                .translateXYZ(public.translateX, public.translateY, public.translateZ)\r\n                .rotateXYZ(public.rotateX, public.rotateY, public.rotateZ)\r\n                .scaleXYZ(public.scaleX, public.scaleY, public.scaleZ);\r\n        } else {\r\n            transform = window.frag.Transform2D()\r\n                .translateXY(public.translateX, public.translateY)\r\n                .rotate(public.rotateZ)\r\n                .scaleXY(public.scaleX, public.scaleY);\r\n        }\r\n\r\n        public.matrix = transform.getMatrix();\r\n        public.isModified = false;\r\n\r\n        return public.matrix;\r\n    }\r\n\r\n    return public;\r\n}","﻿window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","﻿// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);","﻿// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model(public.shader.is3d)\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (materialStore, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = materialStore.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(materialStore, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugMeshes) {\r\n                let msg = \"  vertices[\";\r\n                for (var i = 0; i < verticies.length; i++) {\r\n                    if (i > 0) msg += ', ';\r\n                    msg += verticies[i];\r\n                }\r\n                msg += \"]\";\r\n                console.log(msg);\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" ms\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugAnimations) {\r\n                msg = \"  Channel \" + channelName + \" applies to \" + pattern + \" children\"\r\n                console.log(msg);\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n\r\n                if (frag.debugModelLoader && frag.debugAnimations) {\r\n                    msg = \"    Keyframe[\" + frame + \"] = \" + value + \" \" + transition;\r\n                    console.log(msg);\r\n                }\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const location = frag.Location(true); // Loaded models are always 3D\r\n        location.translateX = context.header.getFloat32(headerOffset + 0, littleEndian);\r\n        location.translateY = context.header.getFloat32(headerOffset + 4, littleEndian);\r\n        location.translateZ = context.header.getFloat32(headerOffset + 8, littleEndian);\r\n        location.rotateX = context.header.getFloat32(headerOffset + 12, littleEndian);\r\n        location.rotateY = context.header.getFloat32(headerOffset + 16, littleEndian);\r\n        location.rotateZ = context.header.getFloat32(headerOffset + 20, littleEndian);\r\n        location.scaleX = context.header.getFloat32(headerOffset + 24, littleEndian);\r\n        location.scaleY = context.header.getFloat32(headerOffset + 28, littleEndian);\r\n        location.scaleZ = context.header.getFloat32(headerOffset + 32, littleEndian);\r\n        location.isModified = true;\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader) {\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations.\" + (hasMesh ? \" Paint mesh \" + meshIndex : \" No mesh\") + (hasMaterial ? \" with material \" + materialIndex : \". No material\"));\r\n            console.log(\"Object[\" + objectIndex + \"] at (\" + location.translateX + \",\" + location.translateY + \",\" + location.translateZ +\").[\"+ location.rotateX + \",\" + location.rotateY + \",\" + location.rotateZ+\"]x(\" + location.scaleX + \",\" + location.scaleY + \",\" + location.scaleZ + \")\");\r\n        }\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot);\r\n        model.location = location;\r\n\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw(gl);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);","﻿window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    makeVectorFromArray2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    makeVectorFromArray3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) / 2);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n}\r\n","﻿// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Model = function (is3d, parent) {\r\n    const frag = window.frag;\r\n\r\n    if (is3d === undefined) {\r\n        if (parent && parent.location)\r\n            is3d = parent.location.is3d;\r\n        else\r\n            is3d = true;\r\n    }\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: frag.Location(is3d),\r\n        animations: []\r\n    };\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.getPosition = function() {\r\n        return frag.ScenePosition(public.location);\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== public.location.is3d){\r\n            const m = public.location.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" location and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(undefined, public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, modelToWorldMatrix, modelToClipMatrix, animationMap) {\r\n        if (!public.location) return public;\r\n\r\n        const animationState = animationMap && private.name ? animationMap[private.name] : null;\r\n        const location = animationState\r\n            ? public.location.clone().add(animationState.location)\r\n            : public.location;\r\n        const localMatrix = location.getMatrix();\r\n\r\n        if (location.is3d) {\r\n            modelToWorldTransform = frag.Transform(frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix));\r\n            modelToClipTransform = frag.Transform(frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix));\r\n        } else {\r\n            modelToWorldTransform = frag.Transform2D(frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix));\r\n            modelToClipTransform = frag.Transform2D(frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix));\r\n        }\r\n\r\n        const shader = public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData) {\r\n            shader.bind(gl);\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                modelToClipTransform.apply(gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                modelToWorldTransform.apply(gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(gl, shader);\r\n\r\n            shader.unbind(gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(gl, modelToWorldTransform.getMatrix(), modelToClipTransform.getMatrix(), animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl) {\r\n        if (private.activeCamera) {\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(gl, private.activeCamera.worldToClipTransform);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.SceneObject = function (model) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        position: null,\r\n        animationPosition: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    public.getPosition = function () {\r\n        if (private.position) return private.position;\r\n        if (!private.model.location) return null;\r\n        private.position = frag.ScenePosition(frag.Location(private.model.location.is3d));\r\n        return private.position;\r\n    };\r\n\r\n    public.ensureAnimationPosition = function () {\r\n        if (private.animationPosition) return private.animationPosition;\r\n        if (!private.model.location) return null;\r\n        private.animationPosition = frag.ScenePosition(frag.Location(private.model.location.is3d));\r\n        return private.animationPosition;\r\n    };\r\n\r\n    public.deleteAnimationPosition = function () {\r\n        private.animationPosition = null;\r\n        return public;\r\n    };\r\n\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    public.dispose = function() {\r\n        public.disable();\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, worldToClipTransform) {\r\n        if (!private.enabled) return public;\r\n\r\n        let position = public.getPosition();\r\n        if (!position) return public;\r\n\r\n        if (private.animationPosition) {\r\n            position = position.clone().add(private.animationPosition);\r\n        }\r\n\r\n        const worldToClipMatrix = worldToClipTransform.getMatrix();\r\n        const modelToWorldMatrix = position.getMatrix();\r\n        const modelToClipMatrix = worldToClipTransform.is3d\r\n            ? frag.Matrix.m4Xm4(worldToClipMatrix, modelToWorldMatrix)\r\n            : frag.Matrix.m3Xm3(worldToClipMatrix, modelToWorldMatrix);\r\n\r\n        private.model.draw(gl, modelToWorldMatrix, modelToClipMatrix, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","﻿// This class provides a set of helper methods for\r\n// manipulating a Location object\r\nwindow.frag.ScenePosition = function (location) {\r\n    const private = {\r\n        location: null,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setLocation = function (value) {\r\n        private.location = value || window.frag.Location();\r\n        return public;\r\n    }\r\n    public.setLocation(location);\r\n\r\n    public.getMatrix = function () {\r\n        return private.location.getMatrix();\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.location.scaleX;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.location.scaleY;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.location.scaleZ;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.location.scaleX = s;\r\n        private.location.scaleY = s;\r\n        private.location.scaleZ = s;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.location.scaleX = x;\r\n        private.location.scaleY = y;\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.location.scaleX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.location.scaleY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * scales[0],\r\n            private.location.scaleY * scales[1],\r\n            private.location.scaleZ * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * xScale,\r\n            private.location.scaleY * yScale,\r\n            private.location.scaleZ * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.location.rotateX;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.location.rotateY;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.location.rotateZ;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.rotateX, private.location.rotateY, private.location.rotateZ];\r\n        else\r\n            return [private.location.rotateX, private.location.rotateY];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.location.rotateX = v[0];\r\n        if (v.length > 1) private.location.rotateY = v[1];\r\n        if (v.length > 2) private.location.rotateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.location.rotateX = x;\r\n        private.location.rotateY = y;\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.location.rotateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.location.rotateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + euler[0],\r\n            private.location.rotateY + euler[1],\r\n            private.location.rotateZ + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + x,\r\n            private.location.rotateY + y,\r\n            private.location.rotateZ + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.location.translateX;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.location.translateY;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.location.translateZ;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.translateX, private.location.translateY, private.location.translateZ];\r\n        else\r\n            return [private.location.translateX, private.location.translateY];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.location.translateX = v[0];\r\n        if (v.length > 1) private.location.translateY = v[1];\r\n        if (v.length > 2) private.location.translateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.location.translateX = x;\r\n        private.location.translateY = y;\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.location.translateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.location.translateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.location.translateX + direction[0],\r\n            private.location.translateY + direction[1],\r\n            private.location.translateZ + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.location.translateX + x,\r\n            private.location.translateY + y,\r\n            private.location.translateZ + z);\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.makeVectorFromArray2D(array, index);\r\n        return frag.Vector.makeVectorFromArray3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","﻿window.frag.uiShader = window.frag.Shader()\r\n    .name(\"UI\")\r\n    .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n    .matrix2D()       // Transformation matricies are 2D\r\n    .diffuseTexture() // Adds support for diffuse texture mapping\r\n    .compile();       // Compile the shader\r\n","﻿// This cube has the minimum vertex count but only texture maps correctly on 4 sides\r\n// http://www.cs.umd.edu/gvil/papers/av_ts.pdf\r\nwindow.frag.BasicCube = function (options) {\r\n    const u0 = 0;\r\n    const u1 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const verticies = [\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, -1,\r\n        -1, -1, -1,\r\n        +1, +1, +1,\r\n        -1, +1, +1,\r\n        -1, -1, +1,\r\n        +1, -1, +1,\r\n    ];\r\n\r\n    const uvs = [\r\n        u0, v3,\r\n        u0, v0,\r\n        u0, v2,\r\n        u0, v1,\r\n        u1, v3,\r\n        u1, v0,\r\n        u1, v1,\r\n        u1, v2,\r\n    ];\r\n\r\n    const draw = function (indexes) {\r\n        const v = [];\r\n        const u = [];\r\n        const c = options.color ? [] : undefined;\r\n        for (var i = 0; i < indexes.length; i++) {\r\n            const corner = indexes[i];\r\n            v.push(verticies[corner * 3 + 0]);\r\n            v.push(verticies[corner * 3 + 1]);\r\n            v.push(verticies[corner * 3 + 2]);\r\n\r\n            if (options.color) {\r\n                options.color.array.forEach(e => { c.push(e); });\r\n            }\r\n\r\n            u.push(uvs[corner * 2 + 0]);\r\n            u.push(uvs[corner * 2 + 1]);\r\n        }\r\n        return window.frag.MeshData().addTriangleStrip(v, c, u, v);\r\n    }\r\n\r\n    return draw([3, 2, 6, 7, 4, 2, 0, 3, 1, 6, 5, 4, 1, 0]);\r\n};","﻿// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","﻿window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","﻿window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","﻿window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","﻿// This cube has a separate sub-mesh for each face of the cube.\r\nwindow.frag.SeparatedCube = function (facets, options) {\r\n    facets = 1;\r\n    const mesh = window.frag.MeshData();\r\n    \r\n    const u0 = 0;\r\n    const u1 = 1 / 4;\r\n    const u2 = 2 / 4;\r\n    const u3 = 3 / 4;\r\n    const u4 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const corners = [\r\n        -1, -1, -1,\r\n        +1, -1, -1,\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, +1,\r\n        -1, -1, +1,\r\n        -1, +1, +1,\r\n        +1, +1, +1,\r\n    ];\r\n\r\n    const addFace = function (indexes, t0, t1, normal) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const uvs = [t1[0], t0[1], t1[0], t1[1], t0[0], t0[1], t0[0], t1[1]];\r\n            const verticies = [];\r\n            const normals = [];\r\n            const colors = options.color ? [] : undefined;\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                for (var i = 0; i < 4; i++) {\r\n                    verticies.push(corners[indexes[i] * 3 + 0]);\r\n                    verticies.push(corners[indexes[i] * 3 + 1]);\r\n                    verticies.push(corners[indexes[i] * 3 + 2]);\r\n\r\n                    if (options.color)\r\n                        options.color.forEach(c => colors.push(c));\r\n        \r\n                    normals.push(normal[0]);\r\n                    normals.push(normal[1]);\r\n                    normals.push(normal[2]);\r\n                }\r\n            }\r\n            mesh.addTriangleStrip(verticies, colors, uvs, verticies);\r\n        }\r\n    }\r\n\r\n    addFace([1, 2, 0, 3], [u1, v2], [u0, v1], [0, 0, -1]); // front\r\n    addFace([4, 1, 5, 0], [u2, v2], [u1, v1], [0, -1, 0]); // bottom\r\n    addFace([0, 3, 5, 6], [u2, v2], [u1, v3], [-1, 0, 0]); // left\r\n    addFace([4, 7, 1, 2], [u1, v1], [u2, v0], [+1, 0, 0]); // right\r\n    addFace([5, 6, 4, 7], [u2, v1], [u3, v2], [0, 0, +1]); // back\r\n    addFace([6, 3, 7, 2], [u3, v1], [u4, v2], [0, +1, 0]); // top\r\n\r\n    return mesh;\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Location\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Plane\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/BasicCube\");\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/SeparatedCube\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n"],"sourceRoot":""}