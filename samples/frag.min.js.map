{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Location.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Input/AnalogAction.js","webpack://frag/./src/Input/AnalogInput.js","webpack://frag/./src/Input/AnalogState.js","webpack://frag/./src/Input/DigitalAction.js","webpack://frag/./src/Input/DigitalInput.js","webpack://frag/./src/Input/DigitalState.js","webpack://frag/./src/Input/HitTest.js","webpack://frag/./src/Input/InputMethod.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","isRunning","public","__private","DEFAULT_STEP_DURATION","getIsRunning","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","sequence","step","sequenceIndex","stop","deactivateAnimation","disposeOnStop","dispose","nextStepTick","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","i","perform","activateAnimation","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","location","Location","getMatrix","channelName","translateX","isModified","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","console","warn","ParallelAnimationAction","forEach","a","PositionAnimationAction","scenePosition","invLinearVelocity","invAngularVelocity","Vector","startLocation","startRotate","moveBy","rotateBy","moveTo","rotateTo","vector","distance","eulerAngles","x","y","z","onStart","onStop","getLocation","getRotate","rotateDelta","b","delta","sub","PI","angularDelta","moveDelta","endTick","r","add","mult","rotate","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","zNear","zFar","xScale","aspectRatio","worldToClipTransform","Transform","computeTransformMatrix","yScale","zScale","zOffset","identity","scaleXYZ","translateXY","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","matrix","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","translateXYZ","rotateXYZ","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","moveToX","moveToY","UiCamera","Transform2D","horizontalScale","scenes","activeAnimations","inactiveAnimations","startTime","performance","now","mainScene","nextAnimationId","correctClock","serverTick","difference","gameTickMs","scene","getMainScene","addScene","removeScene","splice","id","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawContext","draw","t1","fps","setTimeout","renderInterval","startFunctions","init","document","getElementById","error","getContext","alert","addEventListener","event","preventDefault","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","debugMeshes","debugInputs","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","config","is3d","clone","other","transform","scaleXY","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","m3Xm3","uniformMatrix3fv","AnalogAction","actionName","context","inputName","split","test","analogState","AnalogInput","splits","downPosition","downValue","buttons","vertical","inverted","wheel","moveHandler","evt","fraction","clientY","clientX","maxValue","minValue","log","setValue","downHandler","wheelHandler","deltaY","decrement","increment","disable","removeEventListener","leftKey","rightKey","handler","key","AnalogState","analogAction","maxVelocity","acceleration","deceleration","velocity","change","calcVelocity","abs","DigitalAction","digitalState","isOn","sceneObject","DigitalInput","toggle","setOn","setOff","setIsOn","ctrl","shift","alt","meta","isDown","altKey","ctrlKey","shiftKey","metaKey","keyDownHandler","keyUpHandler","DigitalState","digitalAction","shader","hitTest","attributes","uniforms","vSource","fSource","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","position","getAttribLocation","clipMatrix","getUniformLocation","color","bind","useProgram","unbind","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","isHitTest","sceneObjects","models","pixel","Uint8Array","readPixels","red","green","blue","modelId","sceneObjectId","InputMethod","inputs","enabled","input","AssetCatalog","defaultTextures","defaultTexturePixels","diffuse","Texture","dataFormat","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","assetCatalog","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","round4","n","round","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","animations","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","m4Xv4","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","extract2D","extract3D","zero","dimensions","div","sum","sqrt","average","dot","append","directionVector","upVector","dir","up","pitch","asin","yaw","atan2","wingDir","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","ScenePosition","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","modelToWorldMatrix","modelToClipMatrix","localMatrix","alpha","uniform4f","modelMatrix","Scene","activeCamera","cameraUpdated","camera","SceneObject","animationLocation","childModelName","objectAnimation","getAnimationLocation","getPosition","getAnimationPosition","clearAnimationPosition","animationName","worldToClipMatrix","setLocation","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","addUniformDeclarations","addVaryingDeclarations","statement","addLogic","bindList","unbindList","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","uiShader","verticiesXY","matrix2D","Cube","facets","options","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","u","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0,\r\n        isRunning: false\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    public.getIsRunning = function() {\r\n        return private.isRunning;\r\n    }\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.sequence) {\r\n                let step = private.sequence[private.sequenceIndex];\r\n                if (step.stop) step.stop(public, gameTick);\r\n            }\r\n            window.frag.deactivateAnimation(public);\r\n            if (private.disposeOnStop) public.dispose();\r\n            private.isRunning = false;\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        let duration = 0;\r\n        for (let i = 0; i < private.sequence.length; i++) {\r\n            const action = private.sequence[i];\r\n            if (action.duration !== undefined)\r\n                duration = duration + action.duration;\r\n            else\r\n                duration = duration + DEFAULT_STEP_DURATION;\r\n        }\r\n        public.duration = duration;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        window.frag.activateAnimation(public);\r\n        private.isRunning = true;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: window.frag.Location(),\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        return public.location.getMatrix();\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                return function (value) {\r\n                    public.location.translateX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-y\":\r\n                return function (value) {\r\n                    public.location.translateY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-z\":\r\n                return function (value) {\r\n                    public.location.translateZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    public.location.scaleX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    public.location.scaleY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-z\":\r\n                return function (value) {\r\n                    public.location.scaleZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"rotate-x\":\r\n                return function (value) {\r\n                    public.location.rotateX = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-y\":\r\n                return function (value) {\r\n                    public.location.rotateY = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    public.location.rotateZ = value;\r\n                    public.location.isModified = true;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Provides a mechanism to move an object in the scene at a specific speed\r\nwindow.frag.PositionAnimationAction = function (scenePosition, invLinearVelocity, invAngularVelocity) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        invLinearVelocity,\r\n        invAngularVelocity,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n        moveTo: undefined,\r\n        rotateTo: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector, invLinearVelocity) {\r\n        invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invLinearVelocity * distance + 1);\r\n        private.moveBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location, invLinearVelocity) {\r\n        if (invLinearVelocity) private.invAngularVelocity = undefined;\r\n        private.invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        private.moveTo = location;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function (vector, invAngularVelocity) {\r\n        invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invAngularVelocity * distance + 1);\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.rotateTo = function (eulerAngles, invAngularVelocity) {\r\n        if (invAngularVelocity) private.invLinearVelocity = undefined;\r\n        private.invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        private.rotateTo = eulerAngles;\r\n        return public;\r\n    }\r\n\r\n\r\n    public.moveByXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveBy([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveByXY = function (x, y, invLinearVelocity) {\r\n        return public.moveBy([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveTo([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXY = function (x, y, invLinearVelocity) {\r\n        return public.moveTo([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n\r\n    public.rotateByXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateBy([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateByXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateBy([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateTo([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateTo([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    const angularDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        for (let i = 0; i < delta.length; i++) {\r\n            while (delta[i] < -Math.PI) delta[i] += Math.PI * 2;\r\n            while (delta[i] > Math.PI) delta[i] -= Math.PI * 2;\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    const linearDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        return delta;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n\r\n        if (private.rotateTo && private.invAngularVelocity) {\r\n            private.rotateDelta = angularDelta(private.rotateTo, private.startRotate);\r\n            const distance = Vector.length(private.rotateDelta);\r\n            public.duration = Math.floor(private.invAngularVelocity * distance + 1);\r\n        }\r\n\r\n        if (private.moveTo && private.invLinearVelocity) {\r\n            private.moveDelta = linearDelta(private.moveTo, private.startLocation);\r\n            const distance = Vector.length(private.moveDelta);\r\n            public.duration = Math.floor(private.invLinearVelocity * distance + 1);\r\n        }\r\n\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        let moveBy = private.moveBy;\r\n        let rotateBy = private.rotateBy;\r\n\r\n        if (private.moveDelta) \r\n            moveBy = private.moveDelta;\r\n\r\n        if (private.rotateDelta)\r\n            rotateBy = private.rotateDelta;\r\n\r\n        if (moveBy) \r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(moveBy, r)));\r\n\r\n        if (rotateBy) \r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(rotateBy, r)));\r\n\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToX = function (x) {\r\n        private.x = x;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToY = function (y) {\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","(function() {\r\n    const frag = window.frag;\r\n    const scenes = [];\r\n    const activeAnimations = {};\r\n    const inactiveAnimations = {};\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n    let nextAnimationId = 0;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.getMainScene = function () {\r\n        return mainScene;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.activateAnimation = function(animation) {\r\n        activeAnimations[animation.id] = animation;\r\n        delete inactiveAnimations[animation.id];\r\n    }\r\n\r\n    frag.deactivateAnimation = function(animation) {\r\n        inactiveAnimations[animation.id] = animation;\r\n        delete activeAnimations[animation.id];\r\n    }\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animation.id = nextAnimationId++;\r\n        inactiveAnimations[animation.id] = animation;\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        delete inactiveAnimations[animation.id];\r\n        delete activeAnimations[animation.id];\r\n        return frag;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let id in activeAnimations) {\r\n            let animation = activeAnimations[id];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            const gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n            const drawContext = { gl };\r\n            mainScene.draw(drawContext);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(drawContext);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    window.frag.startFunctions.push(render);\r\n})();\r\n","/* To customize Frag for your application, set properties of the\r\n   frag object before calling `window.frag.init()` as illustrated \r\n   by the following example:\r\n\r\nwindow.frag.canvas = document.getElementById(\"my-canvas\");\r\nwindow.frag.config = function(frag) {\r\n    frag.gl.clearColor(0, 0, 0, 1);\r\n    frag.debugShaderBuilder = true;\r\n    frag.renderInterval = 10;\r\n    frag.gameTickMs = 50;\r\n}\r\nwindow.frag.init();\r\n*/\r\n\r\nwindow.frag = window.frag || {};\r\n\r\nwindow.frag.startFunctions = [];\r\n\r\nwindow.frag.init = function () {\r\n    const frag = window.frag;\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    frag.canvas.addEventListener('contextmenu', event => event.preventDefault());\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n    frag.debugMeshes = false;\r\n    frag.debugInputs = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.config) frag.config(frag);\r\n\r\n    for (var i = 0; i < frag.startFunctions.length; i++)\r\n        frag.startFunctions[i](frag);\r\n\r\n    return frag;\r\n};\r\n","// Represents a location, scale and orientation\r\nwindow.frag.Location = function (is3d) {\r\n    const public = {\r\n        is3d,\r\n        isModified: false,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    public.clone = function() {\r\n        const clone = window.frag.Location(public.is3d);\r\n        clone.isModified = public.isModified;\r\n        clone.matrix = public.matrix;\r\n        clone.translateX = public.translateX;\r\n        clone.translateY = public.translateY;\r\n        clone.translateZ = public.translateZ;\r\n        clone.scaleX = public.scaleX;\r\n        clone.scaleY = public.scaleY;\r\n        clone.scaleZ = public.scaleZ;\r\n        clone.rotateX = public.rotateX;\r\n        clone.rotateY = public.rotateY;\r\n        clone.rotateZ = public.rotateZ;\r\n        return clone;\r\n    }\r\n\r\n    public.add = function(other) {\r\n        public.translateX += other.translateX;\r\n        public.translateY += other.translateY;\r\n        public.translateZ += other.translateZ;\r\n        public.scaleX *= other.scaleX;\r\n        public.scaleY *= other.scaleY;\r\n        public.scaleZ *= other.scaleZ;\r\n        public.rotateX += other.rotateX;\r\n        public.rotateY += other.rotateY;\r\n        public.rotateZ += other.rotateZ;\r\n        public.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        if (public.matrix && !public.isModified)\r\n            return public.matrix;\r\n\r\n        let transform;\r\n        if (public.is3d) {\r\n            transform = window.frag.Transform()\r\n                .translateXYZ(public.translateX, public.translateY, public.translateZ)\r\n                .rotateXYZ(public.rotateX, public.rotateY, public.rotateZ)\r\n                .scaleXYZ(public.scaleX, public.scaleY, public.scaleZ);\r\n        } else {\r\n            transform = window.frag.Transform2D()\r\n                .translateXY(public.translateX, public.translateY)\r\n                .rotate(public.rotateZ)\r\n                .scaleXY(public.scaleX, public.scaleY);\r\n        }\r\n\r\n        public.matrix = transform.getMatrix();\r\n        public.isModified = false;\r\n\r\n        return public.matrix;\r\n    }\r\n\r\n    return public;\r\n}","window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n/*\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);\r\n*/","// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// Returne functions that can be bound to analog inputs\r\nwindow.frag.AnalogAction = function(actionName, context) {\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    if (/camera/i.test(actionName)) {\r\n        return function(analogState) {\r\n        }\r\n    }\r\n\r\n    if (/sceneobject/i.test(actionName)) {\r\n        return function(analogState) {\r\n        }\r\n    }\r\n\r\n    return null;    \r\n}","// Represents an input that can be moved up and down in value. For example\r\n// the scroll wheel on the mouse or a joystick axis\r\nwindow.frag.AnalogInput = function(inputName, analogState) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        inputName,\r\n        analogState,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    }\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    if ((/mouse/i).test(inputName)) {\r\n        let buttons = 0;\r\n        let vertical = false;\r\n        let inverted = false;\r\n        let wheel = false;\r\n        let downPosition;\r\n        let downValue;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^horizontal$/).test(splits[i])) vertical = false;\r\n            if ((/^vertical$/).test(splits[i])) vertical = true;\r\n            if ((/^inverted$/).test(splits[i])) inverted = true;\r\n            if ((/^wheel$/).test(splits[i])) wheel = true;\r\n            if ((/^left$/).test(splits[i])) buttons = 1;\r\n            if ((/^right$/).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/).test(splits[i])) buttons = 4;\r\n            if ((/^back$/).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/).test(splits[i])) buttons = 16;\r\n            if ((/^any$/).test(splits[i])) buttons = 31;\r\n        }\r\n\r\n        const moveHandler = function (evt) {\r\n            if (buttons === 0) {\r\n                let fraction = vertical ? evt.clientY / frag.canvas.clientHeight : evt.clientX / frag.canvas.clientWidth;\r\n                if (inverted) fraction = 1 - fraction;\r\n                const value = ((private.analogState.maxValue - private.analogState.minValue) * fraction) + private.analogState.minValue;\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                private.analogState.setValue(evt, value, true);\r\n            } else if ((evt.buttons & buttons) !== 0) {\r\n                let fraction = vertical \r\n                    ? (inverted ? (downPosition - evt.clientY) : (evt.clientY - downPosition)) / frag.canvas.clientHeight\r\n                    : (inverted ? (downPosition - evt.clientX) : (evt.clientX - downPosition)) / frag.canvas.clientWidth;\r\n                const value = downValue + ((private.analogState.maxValue - private.analogState.minValue) * fraction);\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                private.analogState.setValue(evt, value, true);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const downHandler = function(evt) {\r\n            if ((evt.buttons & buttons) !== 0) {\r\n                downPosition = vertical ? evt.clientY : evt.clientX;\r\n                downValue = private.analogState.value;\r\n            }\r\n        }\r\n\r\n        const wheelHandler = function(evt) {\r\n            if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"delta\", evt.deltaY);\r\n            if (inverted) {\r\n                if (evt.deltaY > 0) private.analogState.decrement(evt); else private.analogState.increment(evt);\r\n            } else {\r\n                if (evt.deltaY < 0) private.analogState.decrement(evt); else private.analogState.increment(evt);\r\n            }\r\n            evt.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            if (wheel) {\r\n                frag.canvas.addEventListener(\"wheel\", wheelHandler, false);\r\n            } else {\r\n                frag.canvas.addEventListener(\"mousemove\", moveHandler, false);\r\n                if (buttons !== 0) frag.canvas.addEventListener(\"mousedown\", downHandler, false);\r\n            }\r\n        }\r\n\r\n        public.disable = function () {\r\n            if (wheel) {\r\n                frag.canvas.removeEventListener(\"wheel\", wheelHandler, false);\r\n            } else {\r\n                frag.canvas.removeEventListener(\"mousemove\", moveHandler, false);\r\n                if (buttons !== 0) frag.canvas.removeEventListener(\"mousedown\", downHandler, false);\r\n            }\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/keys/i).test(splits[0])) {\r\n        let leftKey = \"ArrowLeft\";\r\n        let rightKey = \"ArrowRight\";\r\n        if (splits.length > 1) leftKey = splits[1];\r\n        if (splits.length > 2) rightKey = splits[2];\r\n\r\n        const handler = function (evt) {\r\n            if (evt.key === leftKey) {\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"decrement\");\r\n                private.analogState.decrement(evt);\r\n                evt.preventDefault();\r\n            } else if (evt.key === rightKey) {\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"increment\");\r\n                private.analogState.increment(evt);\r\n                evt.preventDefault();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            document.addEventListener(\"keydown\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            document.removeEventListener(\"keydown\", handler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/touch/i.test(inputName))) {\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\r\n    }\r\n\r\n    if ((/gamepad/i.test(inputName))) {\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API\r\n    }\r\n\r\n    if ((/pointer/i.test(inputName))) {\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\r\n    }\r\n\r\n    if ((/orientation/i.test(inputName))) {\r\n        // https://developer.mozilla.org/en-US/docs/Web/Events/Detecting_device_orientation\r\n    }\r\n    return public;\r\n}","// Represents an analog value that can be changed by the player using analog inputs\r\nwindow.frag.AnalogState = function(analogAction, config, name) {\r\n    const frag = window.frag;\r\n\r\n    if (!config) config = {};\r\n    config.value = config.value || 0;\r\n    config.minValue = config.minValue === undefined ? -100 : config.minValue;\r\n    config.maxValue = config.maxValue === undefined ? 100 : config.maxValue;\r\n    config.maxVelocity = config.maxVelocity || 5;\r\n    config.acceleration = config.acceleration === undefined ? 0.25 : config.acceleration;\r\n    config.deceleration = config.deceleration === undefined ? 1 : config.deceleration;\r\n\r\n    const private = {\r\n        analogAction,\r\n        config,\r\n        name,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        value: config.value,\r\n        minValue: config.minValue,\r\n        maxValue: config.maxValue,\r\n        velocity: 0,\r\n    }\r\n\r\n    private.change = function(evt) {\r\n        if (private.analogAction) {\r\n            if (Array.isArray(private.analogAction)) {\r\n                for (let i = 0; i < private.analogAction.length; i++)\r\n                    private.analogAction[i](public, evt);\r\n            } else {\r\n                private.analogAction(public, evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setValue = function(evt, value, calcVelocity) {\r\n        if (calcVelocity) public.velocity = value - public.value;\r\n        if (value < private.config.minValue) {\r\n            value = private.config.minValue;\r\n            public.velocity = 0;\r\n        }\r\n        if (value > private.config.maxValue) {\r\n            value = private.config.maxValue;\r\n            public.velocity = 0;\r\n        }\r\n        if (Math.abs(public.value - value) > 1e-5) {\r\n            public.value = value;\r\n            if (frag.debugInputs) console.log(\"Analog state\", private.name, \"set to\", value);\r\n            private.change(evt);\r\n        }\r\n    }\r\n\r\n    public.increment = function(evt) {\r\n        public.velocity += public.velocity >= 0 ? private.config.acceleration : private.config.deceleration;\r\n        if (public.velocity > private.config.maxVelocity) public.velocity = private.config.maxVelocity;\r\n        public.setValue(evt, public.value + public.velocity, false);\r\n    }\r\n\r\n    public.decrement = function(evt) {\r\n        public.velocity -= public.velocity <= 0 ? private.config.acceleration : private.config.deceleration;\r\n        if (public.velocity < -private.config.maxVelocity) public.velocity = -private.config.maxVelocity;\r\n        public.setValue(evt, public.value + public.velocity, false);\r\n    }\r\n\r\n    return public;\r\n}","// Returne functions that can be bound to digital inputs\r\nwindow.frag.DigitalAction = function(actionName, context) {\r\n    const frag = window.frag;\r\n\r\n    if (context && context.animation) {\r\n        if (/^animation$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (frag.debugInputs) console.log(\"Turning animation\", digitalState.isOn ? \"on\" : \"off\");\r\n                if (digitalState.isOn) context.animation.start();\r\n                else context.animation.stop();\r\n            }\r\n        }\r\n\r\n        if (/^animation-start$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (!digitalState.isOn) {\r\n                    if (frag.debugInputs) console.log(\"Starting animation\");\r\n                    context.animation.start();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (/^animation-stop$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (!digitalState.isOn) {\r\n                    if (frag.debugInputs) console.log(\"Stopping animation\");\r\n                    context.animation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (context && context.sceneObject) {\r\n        if (/^sceneobject$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (frag.debugInputs) console.log(\"Turning scene object\", digitalState.isOn ? \"on\" : \"off\");\r\n                if (digitalState.isOn) context.sceneObject.enable();\r\n                else context.sceneObject.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (context && context.model) {\r\n        if (/^model$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (frag.debugInputs) console.log(\"Turning\", context.model.getName(), \"model\", digitalState.isOn ? \"on\" : \"off\");\r\n                if (digitalState.isOn) context.model.enable();\r\n                else context.model.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}","// Represents an input that can only be on or off. For example keyboard keys or mouse buttons\r\nwindow.frag.DigitalInput = function (inputName, digitalState) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        inputName,\r\n        digitalState,\r\n        toggle: false,\r\n        inverted: false,\r\n        setOn: false,\r\n        setOff: false,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    }\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    const setIsOn = function (evt, isOn) {\r\n        if (private.inverted) isOn = !isOn;\r\n        if (frag.debugInputs) console.log(\"Digital input\", private.inputName, \"is\", isOn ? \"on\" : \"off\");\r\n        if (private.toggle) {\r\n            if (isOn) private.digitalState.toggle(evt);\r\n        } else {\r\n            if (private.setOn || private.setOff) {\r\n                if (isOn) {\r\n                    // Note that it is deliberate that you can set both on and off.\r\n                    // In this case each time you press the key down the digital\r\n                    // state will go on and off again very quickly\r\n                    if (private.setOn) private.digitalState.setIsOn(evt, true);\r\n                    if (private.setOff) private.digitalState.setIsOn(evt, false);\r\n                }\r\n            } else {\r\n                private.digitalState.setIsOn(evt, isOn);\r\n            }\r\n        }\r\n    }\r\n\r\n    if ((/mouse/i).test(inputName)) {\r\n        let buttons = 1;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            if ((/^on$/i).test(splits[i])) private.setOn = true;\r\n            if ((/^off$/i).test(splits[i])) private.setOff = true;\r\n            if ((/^left$/i).test(splits[i])) buttons = 1;\r\n            if ((/^right$/i).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/i).test(splits[i])) buttons = 4;\r\n            if ((/^back$/i).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/i).test(splits[i])) buttons = 16;\r\n            if ((/^any$/i).test(splits[i])) buttons = 31;\r\n        }\r\n\r\n        const handler = function (evt) {\r\n            setIsOn(evt, (evt.buttons & buttons) !== 0);\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            frag.canvas.addEventListener(\"mousedown\", handler, false);\r\n            frag.canvas.addEventListener(\"mouseup\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            frag.canvas.removeEventListener(\"mousedown\", handler, false);\r\n            frag.canvas.removeEventListener(\"mouseup\", handler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/key/i).test(inputName)) {\r\n        let key;\r\n        let ctrl = false;\r\n        let shift = false;\r\n        let alt = false;\r\n        let meta = false;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            else if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            else if ((/^on$/i).test(splits[i])) private.setOn = true;\r\n            else if ((/^off$/i).test(splits[i])) private.setOff = true;\r\n            else if (/^ctrl$/i.test(splits[i])) ctrl = true;\r\n            else if (/^shift$/i.test(splits[i])) shift = true;\r\n            else if (/^alt$/i.test(splits[i])) alt = true;\r\n            else if (/^meta$/i.test(splits[i])) meta = true;\r\n            else if (/^key$/i.test(splits[i]));\r\n            else key = splits[i];\r\n        }\r\n\r\n        const handler = function (evt, isDown) {\r\n            if (evt.key !== key ||\r\n                evt.altKey !== alt ||\r\n                evt.ctrlKey !== ctrl ||\r\n                evt.shiftKey !== shift ||\r\n                evt.metaKey !== meta)\r\n                return true;\r\n\r\n            evt.preventDefault();\r\n            setIsOn(evt, isDown);\r\n\r\n            return true;\r\n        }\r\n\r\n        const keyDownHandler = function (evt) {\r\n            return handler(evt, true);\r\n        }\r\n\r\n        const keyUpHandler = function (evt) {\r\n            return handler(evt, false);\r\n        }\r\n\r\n        public.enable = function () {\r\n            document.addEventListener(\"keydown\", keyDownHandler, false);\r\n            document.addEventListener(\"keyup\", keyUpHandler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            document.removeEventListener(\"keydown\", keyDownHandler, false);\r\n            document.removeEventListener(\"keyup\", keyUpHandler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","// Represents an on/off state that can be controlled by the player using digital inputs\r\nwindow.frag.DigitalState = function (digitalAction, config, name) {\r\n    const frag = window.frag;\r\n\r\n    if (!config) config = {};\r\n    config.isOn = !!config.isOn;\r\n\r\n    const private = {\r\n        digitalAction,\r\n        config,\r\n        name,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        isOn: config.isOn,\r\n    }\r\n\r\n    private.change = function(evt) {\r\n        if (private.digitalAction) {\r\n            if (Array.isArray(private.digitalAction)) {\r\n                for (let i = 0; i < private.digitalAction.length; i++)\r\n                    private.digitalAction[i](public, evt);\r\n            } else {\r\n                private.digitalAction(public, evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setIsOn = function (evt, isOn) {\r\n        if (isOn !== public.isOn) {\r\n            public.isOn = isOn;\r\n            if (frag.debugInputs) console.log(\"Digital state\", private.name, \"turned\", public.isOn ? \"on\" : \"off\");\r\n            private.change(evt);\r\n        }\r\n        else if (frag.debugInputs) console.log(\"Digital state\", private.name, \"is already\", public.isOn ? \"on\" : \"off\");\r\n    }\r\n\r\n    public.toggle = function (evt) {\r\n        public.isOn = !public.isOn;\r\n        if (frag.debugInputs) console.log(\"Digital state\", private.name, \"toggled to\", public.isOn ? \"on\" : \"off\");\r\n        private.change(evt);\r\n    }\r\n\r\n    return public;\r\n}","(function() {\r\n    let shader;\r\n\r\n    window.frag.hitTest = function(x, y, width, height, scene) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        width = width || frag.canvas.clientWidth;\r\n        height = height || frag.canvas.clientHeight;\r\n        scene = scene || frag.getMainScene();\r\n\r\n        if (!shader) {\r\n            shader = {\r\n                name: \"HitTest\",\r\n                attributes: {},\r\n                uniforms: {},\r\n                is3d: true,\r\n            };\r\n\r\n            const vSource =\r\n                'attribute vec4 a_position;\\n' +\r\n                'uniform mat4 u_clipMatrix;\\n' +\r\n                'void main() {;\\n' +\r\n                '  gl_Position = u_clipMatrix * a_position;\\n' +\r\n                '}';\r\n\r\n            const fSource =\r\n                'precision mediump float;\\n' +\r\n                'uniform vec4 u_color;\\n' +\r\n                'void main() {;\\n' +\r\n                '  gl_FragColor = u_color;\\n' +\r\n                '}';\r\n\r\n            const vertexShader = frag.createShader(shader.name, gl.VERTEX_SHADER, vSource);\r\n            const fragmentShader = frag.createShader(shader.name, gl.FRAGMENT_SHADER, fSource);\r\n            shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n            shader.attributes.position = gl.getAttribLocation(shader.program, \"a_position\");\r\n\r\n            shader.uniforms.clipMatrix = gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n            shader.uniforms.color = gl.getUniformLocation(shader.program, \"u_color\");\r\n\r\n            shader.bind = function (gl) {\r\n                gl.useProgram(shader.program);\r\n            }\r\n\r\n            shader.unbind = function() {}\r\n        }\r\n\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        const frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        const depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n        gl.viewport(0, 0, width, height);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        const drawContext = {\r\n            gl,\r\n            shader,\r\n            isHitTest: true,\r\n            sceneObjects: [],\r\n            models: [],\r\n        };\r\n\r\n        scene.adjustToViewport(gl);\r\n        scene.draw(drawContext);\r\n\r\n        const pixel = new Uint8Array(4);\r\n        gl.readPixels(x, height - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        const red = pixel[0];\r\n        const green = pixel[1];\r\n        const blue = pixel[2];\r\n        const alpha = pixel[3];\r\n\r\n        const modelId = alpha | (blue << 8) | ((green & 0x0f) << 16);\r\n        const sceneObjectId = ((green & 0xf0) >> 4) | (red << 4);\r\n\r\n        if ((modelId < drawContext.models.length) && (sceneObjectId < drawContext.sceneObjects.length))\r\n            return { \r\n                sceneObject: drawContext.sceneObjects[sceneObjectId],\r\n                model: drawContext.models[modelId]\r\n            };\r\n\r\n        return null;\r\n    };\r\n})();","// A collection of inputs that can be turned on and off.\r\nwindow.frag.InputMethod = function() {\r\n    const private = {\r\n        inputs: [],\r\n        enabled: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    }\r\n\r\n    // Enables all of the inputs for this input method\r\n    public.enable = function() {\r\n        if (!private.enabled) {\r\n            for (var i = 0; i< private.inputs.length; i++)\r\n                private.inputs[i].enable();\r\n            private.enabled = true;\r\n        }\r\n        return public;\r\n    }\r\n\r\n    // Disables all of the inputs for this input method\r\n    public.disable = function() {\r\n        if (private.enabled) {\r\n            private.enabled = false;\r\n            for (var i = 0; i< private.inputs.length; i++)\r\n                private.inputs[i].disable();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    // Adds a new input method\r\n    public.add = function(input) {\r\n        private.inputs.push(input);\r\n        if (private.enabled) input.enable();\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model(public.shader.is3d)\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (assetCatalog, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = assetCatalog.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(assetCatalog, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const round4 = function(n) { return Math.round(n * 10000) / 10000; }\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugMeshes) {\r\n                let msg = \"  vertices[\";\r\n                for (var i = 0; i < verticies.length; i++) {\r\n                    if (i > 0) msg += ', ';\r\n                    msg += round4(verticies[i]);\r\n                }\r\n                msg += \"]\";\r\n                console.log(msg);\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" ms\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugAnimations) {\r\n                msg = \"  Channel \" + channelName + \" applies to \" + pattern + \" children\"\r\n                console.log(msg);\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n\r\n                if (frag.debugModelLoader && frag.debugAnimations) {\r\n                    msg = \"    Keyframe[\" + frame + \"] = \" + round4(value) + \" \" + transition;\r\n                    console.log(msg);\r\n                }\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const location = frag.Location(true); // Loaded models are always 3D\r\n        location.translateX = context.header.getFloat32(headerOffset + 0, littleEndian);\r\n        location.translateY = context.header.getFloat32(headerOffset + 4, littleEndian);\r\n        location.translateZ = context.header.getFloat32(headerOffset + 8, littleEndian);\r\n        location.rotateX = context.header.getFloat32(headerOffset + 12, littleEndian);\r\n        location.rotateY = context.header.getFloat32(headerOffset + 16, littleEndian);\r\n        location.rotateZ = context.header.getFloat32(headerOffset + 20, littleEndian);\r\n        location.scaleX = context.header.getFloat32(headerOffset + 24, littleEndian);\r\n        location.scaleY = context.header.getFloat32(headerOffset + 28, littleEndian);\r\n        location.scaleZ = context.header.getFloat32(headerOffset + 32, littleEndian);\r\n        location.isModified = true;\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader) {\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + \r\n                (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations.\" + \r\n                (hasMesh ? \" Paint mesh \" + meshIndex : \" No mesh\") + (hasMaterial ? \" with material \" + materialIndex : \". No material\"));\r\n            console.log(\"Object[\" + objectIndex + \"] at (\" + \r\n                round4(location.translateX) + \",\" + round4(location.translateY) + \",\" + round4(location.translateZ) +\").[\"+ \r\n                round4(location.rotateX) + \",\" + round4(location.rotateY) + \",\" + round4(location.rotateZ) + \"]x(\" + \r\n                round4(location.scaleX) + \",\" + round4(location.scaleY) + \",\" + round4(location.scaleZ) + \")\");\r\n        }\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot);\r\n        model.location = location;\r\n\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw({ gl });\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n/*\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);\r\n*/","window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    extract2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    extract3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) * 0.5);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    dot: function (a, b) {\r\n        let result = 0;\r\n        for (let i = 0; i < a.length; i++)\r\n            result += a[i] * b[i];\r\n        return result;\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n    append: function(a, v) {\r\n        for (let i = 0; i < v.length; i++) a.push(v[i]);\r\n    },\r\n    eulerAngles: function(directionVector, upVector) {\r\n        const Vector = window.frag.Vector;\r\n        if (!upVector) upVector = [0, 1, 0];\r\n\r\n        const dir = Vector.normalize(directionVector);\r\n        const up = Vector.normalize(upVector);\r\n\r\n        const pitch = Math.asin(dir[1]);\r\n        const yaw = Math.atan2(dir[0], dir[2]);\r\n\r\n        const wingDir = [-dir[2], 0, dir[0]];\r\n        const vertical = Vector.cross(wingDir, dir);\r\n        const roll = Math.atan2(Vector.dot(wingDir, up), Vector.dot(vertical, up));\r\n\r\n        return [roll, yaw, pitch];\r\n    }\r\n}\r\n","// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","window.frag.Model = function (is3d, parent) {\r\n    const frag = window.frag;\r\n\r\n    if (is3d === undefined) {\r\n        if (parent && parent.location)\r\n            is3d = parent.location.is3d;\r\n        else\r\n            is3d = true;\r\n    }\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n        enabled: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: frag.Location(is3d),\r\n        animations: []\r\n    };\r\n\r\n    public.dispose = function(){\r\n    }\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.getPosition = function() {\r\n        return frag.ScenePosition(public.location);\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== public.location.is3d){\r\n            const m = public.location.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" location and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMesh = function() {\r\n        return private.meshData;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.enable = function() {\r\n        private.enabled = true;\r\n    }\r\n\r\n    public.disable = function() {\r\n        private.enabled = false;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(undefined, public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe(drawWireframe);\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(drawWireframe, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (drawContext, modelToWorldMatrix, modelToClipMatrix, animationMap) {\r\n        if (!public.location) return public;\r\n\r\n        const animationState = animationMap && private.name ? animationMap[private.name] : null;\r\n        const location = animationState\r\n            ? public.location.clone().add(animationState.location)\r\n            : public.location;\r\n        const localMatrix = location.getMatrix();\r\n\r\n        if (location.is3d) {\r\n            modelToWorldMatrix = frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix);\r\n        } else {\r\n            modelToWorldMatrix = frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix);\r\n        }\r\n\r\n        const shader = drawContext.shader || public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData && private.enabled) {\r\n            shader.bind(drawContext.gl);\r\n\r\n            if (drawContext.isHitTest && shader.uniforms.color !== undefined) {\r\n                const sceneObjectId = drawContext.sceneObjects.length - 1;\r\n                const modelId = drawContext.models.length;\r\n                drawContext.models.push(public);\r\n\r\n                const red = sceneObjectId >> 4;\r\n                const green = ((sceneObjectId & 0x0f) << 4) | ((modelId & 0xf0000) >> 16);\r\n                const blue = (modelId & 0xff00) >> 8;\r\n                const alpha = modelId & 0xff;\r\n                drawContext.gl.uniform4f(shader.uniforms.color, red / 255, green / 255, blue / 255, alpha / 255);\r\n            }\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(drawContext.gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                const modelToClipTransform = location.is3d ? frag.Transform(modelToClipMatrix) : frag.Transform2D(modelToClipMatrix);\r\n                modelToClipTransform.apply(drawContext.gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                const modelToWorldTransform = location.is3d ? frag.Transform(modelToWorldMatrix) : frag.Transform2D(modelToWorldMatrix);\r\n                modelToWorldTransform.apply(drawContext.gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(drawContext.gl, shader);\r\n\r\n            shader.unbind(drawContext.gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(drawContext, modelToWorldMatrix, modelToClipMatrix, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (drawContext) {\r\n        if (private.activeCamera) {\r\n            drawContext.worldToClipTransform = private.activeCamera.worldToClipTransform;\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(drawContext);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","window.frag.SceneObject = function (model) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        location: null,\r\n        animationLocation: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    private.getLocation = function () {\r\n        if (private.location) return private.location;\r\n        if (!private.model.location) return null;\r\n        private.location = frag.Location(private.model.location.is3d);\r\n        return private.location;\r\n    };\r\n\r\n    private.getAnimationLocation = function () {\r\n        if (private.animationLocation) return private.animationLocation;\r\n        if (!private.model.location) return null;\r\n        private.animationLocation = frag.Location(private.model.location.is3d);\r\n        return private.animationLocation;\r\n    };\r\n\r\n    /**\r\n     * @returns a ScemePosition object that can be used to manipulate the position\r\n     * scale and orientation of this object in the scene\r\n     */\r\n    public.getPosition = function () {\r\n        const location = private.getLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * @returns a ScenePosition object that can be used to change the animation\r\n     * position of the scene object. The animation position is added to the scene\r\n     * object's static position to create a temporary animation effect\r\n     */\r\n    public.getAnimationPosition = function () {\r\n        const location = private.getAnimationLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * Clears any animation position that was set. This is more efficient\r\n     * than setting the animation location to zero\r\n     */\r\n    public.clearAnimationPosition = function () {\r\n        private.animationLocation = null;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Includes this object in the scene. Call this function when the object\r\n     * could possibly be seen by the player. The engine will go through the\r\n     * process of transforming the mesh into screen space and clip anything\r\n     * that is not within the screen bounds. To avoid this expensive operations\r\n     * for objects that you know cannot be seen by the player, call the disable() \r\n     * function.\r\n     */\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Excludes this object in the scene. Call this function when the object\r\n     * is not viewable through the player's viewport - for example it moved\r\n     * behind the player's point of view.\r\n     */\r\n     public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Frees any resources consumed by this scene object and removes it from\r\n     * the scene.\r\n     */\r\n    public.dispose = function() {\r\n        public.disable();\r\n        for (let animationName in public.animations) {\r\n            public.animations[animationName].dispose();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    /**\r\n     * This is used internally by the engine. Don't call this from your game code\r\n     */\r\n    public.draw = function (drawContext) {\r\n        if (!private.enabled) return public;\r\n\r\n        let location = private.getLocation();\r\n        if (!location) return public;\r\n\r\n        if (private.animationLocation) {\r\n            location = location.clone().add(private.animationLocation);\r\n        }\r\n\r\n        const worldToClipMatrix = drawContext.worldToClipTransform.getMatrix();\r\n        const modelToWorldMatrix = location.getMatrix();\r\n        const modelToClipMatrix = drawContext.worldToClipTransform.is3d\r\n            ? frag.Matrix.m4Xm4(worldToClipMatrix, modelToWorldMatrix)\r\n            : frag.Matrix.m3Xm3(worldToClipMatrix, modelToWorldMatrix);\r\n\r\n        if (drawContext.isHitTest) {\r\n            drawContext.sceneObjects.push(public);\r\n        }\r\n\r\n        private.model.draw(drawContext, modelToWorldMatrix, modelToClipMatrix, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","// This class provides a set of helper methods for\r\n// manipulating a Location object\r\nwindow.frag.ScenePosition = function (location) {\r\n    const private = {\r\n        location: null,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setLocation = function (value) {\r\n        private.location = value || window.frag.Location();\r\n        return public;\r\n    }\r\n    public.setLocation(location);\r\n\r\n    public.getMatrix = function () {\r\n        return private.location.getMatrix();\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.location.scaleX;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.location.scaleY;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.location.scaleZ;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.location.scaleX = s;\r\n        private.location.scaleY = s;\r\n        private.location.scaleZ = s;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.location.scaleX = x;\r\n        private.location.scaleY = y;\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.location.scaleX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.location.scaleY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * scales[0],\r\n            private.location.scaleY * scales[1],\r\n            private.location.scaleZ * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * xScale,\r\n            private.location.scaleY * yScale,\r\n            private.location.scaleZ * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.location.rotateX;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.location.rotateY;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.location.rotateZ;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.rotateX, private.location.rotateY, private.location.rotateZ];\r\n        else\r\n            return [private.location.rotateX, private.location.rotateY];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.location.rotateX = v[0];\r\n        if (v.length > 1) private.location.rotateY = v[1];\r\n        if (v.length > 2) private.location.rotateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.location.rotateX = x;\r\n        private.location.rotateY = y;\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.location.rotateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.location.rotateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + euler[0],\r\n            private.location.rotateY + euler[1],\r\n            private.location.rotateZ + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + x,\r\n            private.location.rotateY + y,\r\n            private.location.rotateZ + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.location.translateX;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.location.translateY;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.location.translateZ;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.translateX, private.location.translateY, private.location.translateZ];\r\n        else\r\n            return [private.location.translateX, private.location.translateY];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.location.translateX = v[0];\r\n        if (v.length > 1) private.location.translateY = v[1];\r\n        if (v.length > 2) private.location.translateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.location.translateX = x;\r\n        private.location.translateY = y;\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.location.translateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.location.translateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.location.translateX + direction[0],\r\n            private.location.translateY + direction[1],\r\n            private.location.translateZ + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.location.translateX + x,\r\n            private.location.translateY + y,\r\n            private.location.translateZ + z);\r\n    }\r\n\r\n    return public;\r\n};","window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.extract2D(array, index);\r\n        return frag.Vector.extract3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","window.frag.startFunctions.push(function(frag) {\r\n    frag.uiShader = frag.Shader()\r\n        .name(\"UI\")\r\n        .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n        .matrix2D()       // Transformation matricies are 2D\r\n        .diffuseTexture() // Adds support for diffuse texture mapping\r\n        .compile();       // Compile the shader\r\n});\r\n","// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Location\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Plane\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n\r\nrequire(\"./Input/HitTest\");\r\nrequire(\"./Input/InputMethod\");\r\nrequire(\"./Input/DigitalState\");\r\nrequire(\"./Input/AnalogState\");\r\nrequire(\"./Input/DigitalInput\");\r\nrequire(\"./Input/AnalogInput\");\r\nrequire(\"./Input/DigitalAction\");\r\nrequire(\"./Input/AnalogAction\");\r\n"],"sourceRoot":""}