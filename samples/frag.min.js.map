{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Location.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Input/AnalogAction.js","webpack://frag/./src/Input/AnalogInput.js","webpack://frag/./src/Input/AnalogState.js","webpack://frag/./src/Input/DigitalAction.js","webpack://frag/./src/Input/DigitalInput.js","webpack://frag/./src/Input/DigitalState.js","webpack://frag/./src/Input/HitTest.js","webpack://frag/./src/Input/InputMethod.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/PackageLoader.js","webpack://frag/./src/Materials/Font.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/FontShader.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","isRunning","public","__private","DEFAULT_STEP_DURATION","getIsRunning","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","sequence","step","sequenceIndex","stop","deactivateAnimation","disposeOnStop","dispose","nextStepTick","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","i","perform","activateAnimation","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","location","Location","getMatrix","channelName","translateX","isModified","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","console","warn","ParallelAnimationAction","forEach","a","PositionAnimationAction","scenePosition","invLinearVelocity","invAngularVelocity","Vector","startLocation","startRotate","moveBy","rotateBy","moveTo","rotateTo","vector","distance","eulerAngles","x","y","z","onStart","onStop","getLocation","getRotate","rotateDelta","b","delta","sub","PI","angularDelta","moveDelta","endTick","r","add","mult","rotate","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","zNear","zFar","xScale","aspectRatio","worldToClipTransform","Transform","computeTransformMatrix","yScale","zScale","zOffset","identity","scaleXYZ","translateXY","moveToXY","moveToXYZ","moveToX","moveToY","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","matrix","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","translateXYZ","rotateXYZ","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","UiCamera","Transform2D","horizontalScale","scenes","activeAnimations","inactiveAnimations","startTime","performance","now","mainScene","nextAnimationId","correctClock","serverTick","difference","gameTickMs","scene","getMainScene","addScene","removeScene","splice","id","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawContext","draw","t1","fps","setTimeout","renderInterval","startFunctions","init","document","getElementById","error","getContext","alert","addEventListener","event","preventDefault","clearColor","enable","CULL_FACE","DEPTH_TEST","debugPackageLoader","debugShaderBuilder","debugAnimations","debugMeshes","debugInputs","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","config","is3d","clone","other","transform","scaleXY","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","m3Xm3","uniformMatrix3fv","AnalogAction","actionName","context","splits","split","mode","axis","test","analogState","getCamera","sceneObject","AnalogInput","inputName","downPosition","downValue","buttons","vertical","inverted","wheel","moveHandler","evt","fraction","clientY","clientX","maxValue","minValue","log","setValue","downHandler","wheelHandler","deltaY","decrement","increment","disable","removeEventListener","leftKey","rightKey","handler","key","clientLength","span","additionalTouches","index","touchStartHandler","touches","touch","item","touch1","touch2","spanX","spanY","sqrt","angle","dirX","dirY","atan2","controllerIndex","stickIndex","axisIndex","gamepad","poll","axes","setVelocity","maxVelocity","connectedHandler","e","disconnectedHandler","clearInterval","AnalogState","analogAction","acceleration","deceleration","abs","velocity","change","calcVelocity","DigitalAction","digitalState","isOn","DigitalInput","toggle","setOn","setOff","setIsOn","ctrl","shift","alt","meta","isDown","altKey","ctrlKey","shiftKey","metaKey","keyDownHandler","keyUpHandler","DigitalState","digitalAction","shader","hitTest","attributes","uniforms","vSource","fSource","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","position","getAttribLocation","clipMatrix","getUniformLocation","color","bind","useProgram","unbind","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","isHitTest","sceneObjects","models","pixel","Uint8Array","readPixels","red","green","blue","modelId","sceneObjectId","InputMethod","inputs","enabled","input","AssetCatalog","defaultTextures","defaultTexturePixels","diffuse","Texture","dataFormat","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","fonts","materials","font","Font","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","debugMaterialLoader","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","assetCatalog","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","PackageLoader","round4","n","round","loadFontV1","objectIndex","getFont","faceLength","fontFace","lineHeight","charCount","charIndex","charLength","char","originX","getInt16","originY","advance","addChar","modeLength","LUMINANCE","imageWidth","imageHeight","dataArray","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","animations","channels","getChannelGraphs","channelIndex","loadFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadFromUrl","glTexture","generated","internalFormat","format","dataType","valuesPerPixel","chars","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","formaat","ALPHA","setup","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","offset","bufferView","fromImage","image","load","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","buildTextMesh","text","drawChar","ch","dimensions","left","right","top","bottom","pushVerticies","texLeft","texTop","pushTexture","addTriangles","shadeFlat","textureFlat","buildTextModel","fontShader","updateTextModel","oldMesh","getMesh","textures","textureType","shouldDispose","currentTexture","level","fromUrl","crossOrigin","Image","src","fromScene","m3Identity","m3Invert","m3Transpose","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","m4Xv4","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","extract2D","extract3D","zero","div","sum","average","dot","append","directionVector","upVector","dir","up","pitch","asin","yaw","wingDir","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","ScenePosition","m","getShader","depth","shadeSmooth","textureSmooth","drawNormals","graphs","childName","modelToWorldMatrix","modelToClipMatrix","localMatrix","alpha","uniform4f","modelMatrix","Scene","activeCamera","cameraUpdated","camera","SceneObject","animationLocation","childModelName","objectAnimation","getAnimationLocation","getPosition","getAnimationPosition","clearAnimationPosition","animationName","worldToClipMatrix","setLocation","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","addUniformDeclarations","addVaryingDeclarations","statement","addLogic","bindList","unbindList","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","uiShader","verticiesXY","matrix2D","Cube","facets","options","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","u","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","topUvs","topNormals","topColors","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","Disc","Plane","row","y0","y1","column","x0","x1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0,\r\n        isRunning: false\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    public.getIsRunning = function() {\r\n        return private.isRunning;\r\n    }\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.sequence) {\r\n                let step = private.sequence[private.sequenceIndex];\r\n                if (step.stop) step.stop(public, gameTick);\r\n            }\r\n            window.frag.deactivateAnimation(public);\r\n            if (private.disposeOnStop) public.dispose();\r\n            private.isRunning = false;\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        let duration = 0;\r\n        for (let i = 0; i < private.sequence.length; i++) {\r\n            const action = private.sequence[i];\r\n            if (action.duration !== undefined)\r\n                duration = duration + action.duration;\r\n            else\r\n                duration = duration + DEFAULT_STEP_DURATION;\r\n        }\r\n        public.duration = duration;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        window.frag.activateAnimation(public);\r\n        private.isRunning = true;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: window.frag.Location(),\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        return public.location.getMatrix();\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                return function (value) {\r\n                    public.location.translateX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-y\":\r\n                return function (value) {\r\n                    public.location.translateY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-z\":\r\n                return function (value) {\r\n                    public.location.translateZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    public.location.scaleX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    public.location.scaleY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-z\":\r\n                return function (value) {\r\n                    public.location.scaleZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"rotate-x\":\r\n                return function (value) {\r\n                    public.location.rotateX = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-y\":\r\n                return function (value) {\r\n                    public.location.rotateY = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    public.location.rotateZ = value;\r\n                    public.location.isModified = true;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Provides a mechanism to move an object in the scene at a specific speed\r\nwindow.frag.PositionAnimationAction = function (scenePosition, invLinearVelocity, invAngularVelocity) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        invLinearVelocity,\r\n        invAngularVelocity,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n        moveTo: undefined,\r\n        rotateTo: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector, invLinearVelocity) {\r\n        invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invLinearVelocity * distance + 1);\r\n        private.moveBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location, invLinearVelocity) {\r\n        if (invLinearVelocity) private.invAngularVelocity = undefined;\r\n        private.invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        private.moveTo = location;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function (vector, invAngularVelocity) {\r\n        invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invAngularVelocity * distance + 1);\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.rotateTo = function (eulerAngles, invAngularVelocity) {\r\n        if (invAngularVelocity) private.invLinearVelocity = undefined;\r\n        private.invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        private.rotateTo = eulerAngles;\r\n        return public;\r\n    }\r\n\r\n\r\n    public.moveByXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveBy([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveByXY = function (x, y, invLinearVelocity) {\r\n        return public.moveBy([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveTo([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXY = function (x, y, invLinearVelocity) {\r\n        return public.moveTo([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n\r\n    public.rotateByXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateBy([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateByXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateBy([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateTo([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateTo([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    const angularDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        for (let i = 0; i < delta.length; i++) {\r\n            while (delta[i] < -Math.PI) delta[i] += Math.PI * 2;\r\n            while (delta[i] > Math.PI) delta[i] -= Math.PI * 2;\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    const linearDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        return delta;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n\r\n        if (private.rotateTo && private.invAngularVelocity) {\r\n            private.rotateDelta = angularDelta(private.rotateTo, private.startRotate);\r\n            const distance = Vector.length(private.rotateDelta);\r\n            public.duration = Math.floor(private.invAngularVelocity * distance + 1);\r\n        }\r\n\r\n        if (private.moveTo && private.invLinearVelocity) {\r\n            private.moveDelta = linearDelta(private.moveTo, private.startLocation);\r\n            const distance = Vector.length(private.moveDelta);\r\n            public.duration = Math.floor(private.invLinearVelocity * distance + 1);\r\n        }\r\n\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        let moveBy = private.moveBy;\r\n        let rotateBy = private.rotateBy;\r\n\r\n        if (private.moveDelta) \r\n            moveBy = private.moveDelta;\r\n\r\n        if (private.rotateDelta)\r\n            rotateBy = private.rotateDelta;\r\n\r\n        if (moveBy) \r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(moveBy, r)));\r\n\r\n        if (rotateBy) \r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(rotateBy, r)));\r\n\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToX = function (x) {\r\n        private.x = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToY = function (y) {\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToX = function (x) {\r\n        private.x = x;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToY = function (y) {\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","(function() {\r\n    const frag = window.frag;\r\n    const scenes = [];\r\n    const activeAnimations = {};\r\n    const inactiveAnimations = {};\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n    let nextAnimationId = 0;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.getMainScene = function () {\r\n        return mainScene;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.activateAnimation = function(animation) {\r\n        activeAnimations[animation.id] = animation;\r\n        delete inactiveAnimations[animation.id];\r\n    }\r\n\r\n    frag.deactivateAnimation = function(animation) {\r\n        inactiveAnimations[animation.id] = animation;\r\n        delete activeAnimations[animation.id];\r\n    }\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animation.id = nextAnimationId++;\r\n        inactiveAnimations[animation.id] = animation;\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        delete inactiveAnimations[animation.id];\r\n        delete activeAnimations[animation.id];\r\n        return frag;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let id in activeAnimations) {\r\n            let animation = activeAnimations[id];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            const gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n            const drawContext = { gl };\r\n            mainScene.draw(drawContext);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(drawContext);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    window.frag.startFunctions.push(render);\r\n})();\r\n","/* To customize Frag for your application, set properties of the\r\n   frag object before calling `window.frag.init()` as illustrated \r\n   by the following example:\r\n\r\nwindow.frag.canvas = document.getElementById(\"my-canvas\");\r\nwindow.frag.config = function(frag) {\r\n    frag.gl.clearColor(0, 0, 0, 1);\r\n    frag.debugShaderBuilder = true;\r\n    frag.renderInterval = 10;\r\n    frag.gameTickMs = 50;\r\n}\r\nwindow.frag.init();\r\n*/\r\n\r\nwindow.frag = window.frag || {};\r\n\r\nwindow.frag.startFunctions = [];\r\n\r\nwindow.frag.init = function () {\r\n    const frag = window.frag;\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    frag.canvas.addEventListener('contextmenu', event => event.preventDefault());\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugPackageLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n    frag.debugMeshes = false;\r\n    frag.debugInputs = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.config) frag.config(frag);\r\n\r\n    for (var i = 0; i < frag.startFunctions.length; i++)\r\n        frag.startFunctions[i](frag);\r\n\r\n    return frag;\r\n};\r\n","// Represents a location, scale and orientation\r\nwindow.frag.Location = function (is3d) {\r\n    const public = {\r\n        is3d,\r\n        isModified: false,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    public.clone = function() {\r\n        const clone = window.frag.Location(public.is3d);\r\n        clone.isModified = public.isModified;\r\n        clone.matrix = public.matrix;\r\n        clone.translateX = public.translateX;\r\n        clone.translateY = public.translateY;\r\n        clone.translateZ = public.translateZ;\r\n        clone.scaleX = public.scaleX;\r\n        clone.scaleY = public.scaleY;\r\n        clone.scaleZ = public.scaleZ;\r\n        clone.rotateX = public.rotateX;\r\n        clone.rotateY = public.rotateY;\r\n        clone.rotateZ = public.rotateZ;\r\n        return clone;\r\n    }\r\n\r\n    public.add = function(other) {\r\n        public.translateX += other.translateX;\r\n        public.translateY += other.translateY;\r\n        public.translateZ += other.translateZ;\r\n        public.scaleX *= other.scaleX;\r\n        public.scaleY *= other.scaleY;\r\n        public.scaleZ *= other.scaleZ;\r\n        public.rotateX += other.rotateX;\r\n        public.rotateY += other.rotateY;\r\n        public.rotateZ += other.rotateZ;\r\n        public.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        if (public.matrix && !public.isModified)\r\n            return public.matrix;\r\n\r\n        let transform;\r\n        if (public.is3d) {\r\n            transform = window.frag.Transform()\r\n                .translateXYZ(public.translateX, public.translateY, public.translateZ)\r\n                .rotateXYZ(public.rotateX, public.rotateY, public.rotateZ)\r\n                .scaleXYZ(public.scaleX, public.scaleY, public.scaleZ);\r\n        } else {\r\n            transform = window.frag.Transform2D()\r\n                .translateXY(public.translateX, public.translateY)\r\n                .rotate(public.rotateZ)\r\n                .scaleXY(public.scaleX, public.scaleY);\r\n        }\r\n\r\n        public.matrix = transform.getMatrix();\r\n        public.isModified = false;\r\n\r\n        return public.matrix;\r\n    }\r\n\r\n    return public;\r\n}","window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n/*\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);\r\n*/","// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// Returne functions that can be bound to analog inputs\r\nwindow.frag.AnalogAction = function(actionName, context) {\r\n\r\n    const splits = actionName.split(\"-\");\r\n\r\n    let mode = \"move\";\r\n    let axis = \"z\";\r\n\r\n    for (let i = 0; i < splits.length; i++) {\r\n        if ((/^move$/i).test(splits[i])) mode = \"move\";\r\n        if ((/^rotate$/i).test(splits[i])) mode = \"rotate\";\r\n        if ((/^scale$/i).test(splits[i])) mode = \"scale\";\r\n        if ((/^x$/i).test(splits[i])) axis = \"x\";\r\n        if ((/^y$/i).test(splits[i])) axis = \"y\";\r\n        if ((/^z$/i).test(splits[i])) axis = \"z\";\r\n        if ((/^right$/i).test(splits[i])) axis = \"right\";\r\n        if ((/^up$/i).test(splits[i])) axis = \"up\";\r\n        if ((/^forward$/i).test(splits[i])) axis = \"forward\";\r\n    }\r\n\r\n    if (/camera/i.test(actionName)) {\r\n        if (mode === \"move\") {\r\n            if (axis === \"x\") \r\n                return function(analogState) { frag.getMainScene().getCamera().moveToX(analogState.value); }\r\n            if (axis === \"y\") \r\n                return function(analogState) { frag.getMainScene().getCamera().moveToY(analogState.value); }\r\n            if (axis === \"z\") \r\n                return function(analogState) { frag.getMainScene().getCamera().moveToZ(analogState.value); }\r\n        }        \r\n    }\r\n\r\n    if (context && context.sceneObject) {\r\n        if (/sceneobject/i.test(actionName)) {\r\n            return function(analogState) {\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;    \r\n}","// Represents an input that can be moved up and down in value. For example\r\n// the scroll wheel on the mouse or a joystick axis\r\nwindow.frag.AnalogInput = function(inputName, analogState) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        inputName,\r\n        analogState,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    }\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    if ((/mouse/i).test(inputName)) {\r\n        let buttons = 0;\r\n        let vertical = false;\r\n        let inverted = false;\r\n        let wheel = false;\r\n        let downPosition;\r\n        let downValue;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^horizontal$/).test(splits[i])) vertical = false;\r\n            if ((/^vertical$/).test(splits[i])) vertical = true;\r\n            if ((/^inverted$/).test(splits[i])) inverted = true;\r\n            if ((/^wheel$/).test(splits[i])) wheel = true;\r\n            if ((/^left$/).test(splits[i])) buttons = 1;\r\n            if ((/^right$/).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/).test(splits[i])) buttons = 4;\r\n            if ((/^back$/).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/).test(splits[i])) buttons = 16;\r\n            if ((/^any$/).test(splits[i])) buttons = 255;\r\n        }\r\n\r\n        const moveHandler = function (evt) {\r\n            if (buttons === 0) {\r\n                let fraction = vertical ? (frag.canvas.clientHeight - evt.clientY) / frag.canvas.clientHeight : evt.clientX / frag.canvas.clientWidth;\r\n                if (inverted) fraction = 1 - fraction;\r\n                const value = ((private.analogState.maxValue - private.analogState.minValue) * fraction) + private.analogState.minValue;\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                private.analogState.setValue(evt, value, true);\r\n            } else if ((evt.buttons & buttons) !== 0) {\r\n                let fraction = vertical \r\n                    ? (inverted ? (evt.clientY - downPosition) : (downPosition - evt.clientY)) / frag.canvas.clientHeight\r\n                    : (inverted ? (downPosition - evt.clientX) : (evt.clientX - downPosition)) / frag.canvas.clientWidth;\r\n                const value = downValue + ((private.analogState.maxValue - private.analogState.minValue) * fraction);\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                private.analogState.setValue(evt, value, true);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const downHandler = function(evt) {\r\n            if ((evt.buttons & buttons) !== 0) {\r\n                downPosition = vertical ? evt.clientY : evt.clientX;\r\n                downValue = private.analogState.value;\r\n            }\r\n        }\r\n\r\n        const wheelHandler = function(evt) {\r\n            if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"delta\", evt.deltaY);\r\n            if (inverted) {\r\n                if (evt.deltaY > 0) private.analogState.decrement(evt); else private.analogState.increment(evt);\r\n            } else {\r\n                if (evt.deltaY < 0) private.analogState.decrement(evt); else private.analogState.increment(evt);\r\n            }\r\n            evt.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            if (wheel) {\r\n                frag.canvas.addEventListener(\"wheel\", wheelHandler, false);\r\n            } else {\r\n                frag.canvas.addEventListener(\"mousemove\", moveHandler, false);\r\n                if (buttons !== 0) frag.canvas.addEventListener(\"mousedown\", downHandler, false);\r\n            }\r\n        }\r\n\r\n        public.disable = function () {\r\n            if (wheel) {\r\n                frag.canvas.removeEventListener(\"wheel\", wheelHandler, false);\r\n            } else {\r\n                frag.canvas.removeEventListener(\"mousemove\", moveHandler, false);\r\n                if (buttons !== 0) frag.canvas.removeEventListener(\"mousedown\", downHandler, false);\r\n            }\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/keys/i).test(splits[0])) {\r\n        let leftKey = \"ArrowLeft\";\r\n        let rightKey = \"ArrowRight\";\r\n        if (splits.length > 1) leftKey = splits[1];\r\n        if (splits.length > 2) rightKey = splits[2];\r\n\r\n        const handler = function (evt) {\r\n            if (evt.key === leftKey) {\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"decrement\");\r\n                private.analogState.decrement(evt);\r\n                evt.preventDefault();\r\n            } else if (evt.key === rightKey) {\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"increment\");\r\n                private.analogState.increment(evt);\r\n                evt.preventDefault();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            document.addEventListener(\"keydown\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            document.removeEventListener(\"keydown\", handler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/touch/i.test(inputName))) {\r\n        let mode = \"horizontal\";\r\n        let inverted = false;\r\n        let additionalTouches = false;\r\n        let downPosition;\r\n        let downValue;\r\n        let clientLength;\r\n        let span;\r\n        let index = 0;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^horizontal$/).test(splits[i])) mode = \"horizontal\";\r\n            if ((/^vertical$/).test(splits[i])) mode = \"vertical\";\r\n            if ((/^pinch$/).test(splits[i])) mode = \"pinch\";\r\n            if ((/^rotate$/).test(splits[i])) mode = \"rotate\";\r\n            if ((/^inverted$/).test(splits[i])) inverted = true;\r\n            if ((/^plus$/).test(splits[i])) additionalTouches = true;\r\n            if ((/^1$/).test(splits[i])) index = 0;\r\n            if ((/^2$/).test(splits[i])) index = 1;\r\n            if ((/^3$/).test(splits[i])) index = 2;\r\n        }\r\n\r\n        let moveHandler = null;\r\n        let touchStartHandler = null;\r\n\r\n        if (mode === \"horizontal\") {\r\n            moveHandler = function (evt) {\r\n                if ((additionalTouches && evt.touches.length > index) || evt.touches.length === index + 1) {\r\n                    const touch = evt.touches.item(index);\r\n                    let fraction = (inverted ? (downPosition - touch.clientX) : (touch.clientX - downPosition)) / clientLength;\r\n                    const value = downValue + (span * fraction);\r\n                    if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                    private.analogState.setValue(evt, value, true);\r\n                }\r\n                return true;\r\n            }\r\n            touchStartHandler = function(evt) {\r\n                if (evt.touches.length === index + 1) {\r\n                    const touch = evt.touches.item(index);\r\n                    downPosition = touch.clientX;\r\n                    downValue = private.analogState.value;\r\n                    span = private.analogState.maxValue - private.analogState.minValue;\r\n                    clientLength = frag.canvas.clientWidth;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (mode === \"vertical\") {\r\n            moveHandler = function (evt) {\r\n                if ((additionalTouches && evt.touches.length > index) || evt.touches.length === index + 1) {\r\n                    const touch = evt.touches.item(index);\r\n                    let fraction =  (inverted ? (touch.clientY - downPosition) : (downPosition - touch.clientY)) / clientLength;\r\n                    const value = downValue + (span * fraction);\r\n                    if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                    private.analogState.setValue(evt, value, true);\r\n                }\r\n                return true;\r\n            }\r\n            touchStartHandler = function(evt) {\r\n                if (evt.touches.length === index + 1) {\r\n                    const touch = evt.touches.item(index);\r\n                    downPosition = touch.clientY;\r\n                    downValue = private.analogState.value;\r\n                    span = private.analogState.maxValue - private.analogState.minValue;\r\n                    clientLength = frag.canvas.clientHeight;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (mode === \"pinch\") {\r\n            const distance = function(evt) {\r\n                const touch1 = evt.touches.item(0);\r\n                const touch2 = evt.touches.item(1);\r\n                const spanX = touch2.clientX - touch1.clientX;\r\n                const spanY = touch2.clientY - touch1.clientY;\r\n                return Math.sqrt(spanX * spanX + spanY * spanY);\r\n            }\r\n\r\n            moveHandler = function (evt) {\r\n                if ((additionalTouches && evt.touches.length > 1) || evt.touches.length === 2) {\r\n                    const position = distance(evt);\r\n                    let fraction = (position - downPosition) / clientLength;\r\n                    if (inverted) fraction = -fraction;\r\n                    const value = downValue + span * fraction;\r\n                    if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                    private.analogState.setValue(evt, value, true);\r\n                }\r\n                return true;\r\n            }\r\n            touchStartHandler = function(evt) {\r\n                if (evt.touches.length === 2) {\r\n                    downPosition = distance(evt);\r\n                    downValue = private.analogState.value;\r\n                    span = private.analogState.maxValue - private.analogState.minValue;\r\n                    clientLength = Math.sqrt(frag.canvas.clientHeight * frag.canvas.clientHeight + frag.canvas.clientWidth * frag.canvas.clientWidth) * 0.5;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (mode === \"rotate\") {\r\n            const angle = function(evt) {\r\n                const touch1 = evt.touches.item(0);\r\n                const touch2 = evt.touches.item(1);\r\n                const dirX = touch2.clientX - touch1.clientX;\r\n                const dirY = touch2.clientY - touch1.clientY;\r\n                return Math.atan2(dirY, dirX);\r\n            }\r\n\r\n            moveHandler = function (evt) {\r\n                if ((additionalTouches && evt.touches.length > 1) || evt.touches.length === 2) {\r\n                    const position = angle(evt);\r\n                    let fraction = (position - downPosition) / clientLength;\r\n                    if (inverted) fraction = -fraction;\r\n                    const value = downValue + span * fraction;\r\n                    if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                    private.analogState.setValue(evt, value, true);\r\n                }\r\n                return true;\r\n            }\r\n            touchStartHandler = function(evt) {\r\n                if (evt.touches.length === 2) {\r\n                    downPosition = angle(evt);\r\n                    downValue = private.analogState.value;\r\n                    span = private.analogState.maxValue - private.analogState.minValue;\r\n                    clientLength = Math.PI * 0.5;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        public.enable = function () {\r\n            if (moveHandler) frag.canvas.addEventListener(\"touchmove\", moveHandler, false);\r\n            if (touchStartHandler) frag.canvas.addEventListener(\"touchstart\", touchStartHandler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            if (moveHandler) frag.canvas.removeEventListener(\"touchmove\", moveHandler, false);\r\n            if (touchStartHandler) frag.canvas.removeEventListener(\"touchstart\", touchStartHandler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/pointer/i).test(inputName)) {\r\n        let buttons = 0;\r\n        let vertical = false;\r\n        let inverted = false;\r\n        let downPosition;\r\n        let downValue;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^horizontal$/).test(splits[i])) vertical = false;\r\n            if ((/^vertical$/).test(splits[i])) vertical = true;\r\n            if ((/^inverted$/).test(splits[i])) inverted = true;\r\n            if ((/^left$/).test(splits[i])) buttons = 1;\r\n            if ((/^right$/).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/).test(splits[i])) buttons = 4;\r\n            if ((/^back$/).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/).test(splits[i])) buttons = 16;\r\n            if ((/^eraser$/).test(splits[i])) buttons = 32;\r\n            if ((/^any$/).test(splits[i])) buttons = 255;\r\n        }\r\n\r\n        const moveHandler = function (evt) {\r\n            if (buttons === 0) {\r\n                let fraction = vertical ? evt.clientY / frag.canvas.clientHeight : evt.clientX / frag.canvas.clientWidth;\r\n                if (inverted) fraction = 1 - fraction;\r\n                const value = ((private.analogState.maxValue - private.analogState.minValue) * fraction) + private.analogState.minValue;\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                private.analogState.setValue(evt, value, true);\r\n            } else if ((evt.buttons & buttons) !== 0) {\r\n                let fraction = vertical \r\n                    ? (inverted ? (downPosition - evt.clientY) : (evt.clientY - downPosition)) / frag.canvas.clientHeight\r\n                    : (inverted ? (downPosition - evt.clientX) : (evt.clientX - downPosition)) / frag.canvas.clientWidth;\r\n                const value = downValue + ((private.analogState.maxValue - private.analogState.minValue) * fraction);\r\n                if (frag.debugInputs) console.log(\"Analog input\", private.inputName, \"=\", value);\r\n                private.analogState.setValue(evt, value, true);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const downHandler = function(evt) {\r\n            if ((evt.buttons & buttons) !== 0) {\r\n                downPosition = vertical ? evt.clientY : evt.clientX;\r\n                downValue = private.analogState.value;\r\n            }\r\n        }\r\n\r\n        public.enable = function () {\r\n            frag.canvas.addEventListener(\"pointermove\", moveHandler, false);\r\n            if (buttons !== 0) frag.canvas.addEventListener(\"pointerdown\", downHandler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            frag.canvas.removeEventListener(\"pointermove\", moveHandler, false);\r\n            if (buttons !== 0) frag.canvas.removeEventListener(\"pointerdown\", downHandler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/gamepad/i.test(inputName))) {\r\n        let controllerIndex = 0;\r\n        let stickIndex = 0;\r\n        let axisIndex = 0;\r\n        let gamepad = null;\r\n        let inverted = false;\r\n        let interval;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^horizontal$/).test(splits[i])) axisIndex = 0;\r\n            if ((/^vertical$/).test(splits[i])) axisIndex = 1;\r\n            if ((/^inverted$/).test(splits[i])) inverted = true;\r\n            if ((/^player1$/).test(splits[i])) controllerIndex = 0;\r\n            if ((/^player2$/).test(splits[i])) controllerIndex = 1;\r\n            if ((/^player3$/).test(splits[i])) controllerIndex = 2;\r\n            if ((/^player4$/).test(splits[i])) controllerIndex = 3;\r\n            if ((/^stick1$/).test(splits[i])) stickIndex = 0;\r\n            if ((/^stick2$/).test(splits[i])) stickIndex = 1;\r\n            if ((/^stick3$/).test(splits[i])) stickIndex = 2;\r\n            if ((/^stick4$/).test(splits[i])) stickIndex = 3;\r\n        }\r\n\r\n        const index = stickIndex * 2 + axisIndex;\r\n\r\n        const poll = function (evt) {\r\n            if (gamepad) {\r\n                const value = gamepad.axes[index];\r\n                if (inverted) value = -value;\r\n                private.analogState.setVelocity(evt, value * private.analogState.maxVelocity);\r\n            }\r\n        }\r\n\r\n        const connectedHandler = function(evt) {\r\n            if (frag.debugInputs) console.log(\"Gamepad\", evt.gamepad.index, \"connected\", \"id:\" + evt.gamepad.id, \"with\", e.gamepad.axes.length, \"axes\");\r\n            if (evt.gamepad.index === controllerIndex && gamepad.axes.length > index) {\r\n                gamepad = evt.gamepad;\r\n                interval = setInterval(poll, 50);\r\n            }\r\n        }\r\n\r\n        const disconnectedHandler = function(evt) {\r\n            if (frag.debugInputs) console.log(\"Gamepad\", evt.gamepad.index, \"disconnected\", \"id:\" + evt.gamepad.id);\r\n            if (evt.gamepad.id === gamepad.id) {\r\n                clearInterval(interval);\r\n                gamepad = null;\r\n            }\r\n        }\r\n\r\n        public.enable = function () {\r\n            window.addEventListener(\"gamepadconnected\", connectedHandler, false);\r\n            window.addEventListener(\"gamepaddisconnected\", disconnectedHandler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            window.removeEventListener(\"gamepadconnected\", connectedHandler, false);\r\n            window.removeEventListener(\"gamepaddisconnected\", disconnectedHandler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/orientation/i.test(inputName))) {\r\n        // https://developer.mozilla.org/en-US/docs/Web/Events/Detecting_device_orientation\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","// Represents an analog value that can be changed by the player using analog inputs\r\nwindow.frag.AnalogState = function(analogAction, config, name) {\r\n    const frag = window.frag;\r\n\r\n    if (!config) config = {};\r\n    config.value = config.value || 0;\r\n    config.minValue = config.minValue === undefined ? -100 : config.minValue;\r\n    config.maxValue = config.maxValue === undefined ? 100 : config.maxValue;\r\n    config.maxVelocity = config.maxVelocity || 5;\r\n    config.acceleration = config.acceleration === undefined ? 0.25 : config.acceleration;\r\n    config.deceleration = config.deceleration === undefined ? 1 : config.deceleration;\r\n\r\n    const private = {\r\n        analogAction,\r\n        config,\r\n        name,\r\n        inverted: false,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        value: config.value,\r\n        minValue: config.minValue,\r\n        maxValue: config.maxValue,\r\n        maxVelocity: Math.abs(config.maxVelocity),\r\n        velocity: 0,\r\n    }\r\n\r\n    if (config.maxValue < config.minValue) {\r\n        private.inverted = true;\r\n        public.minValue = config.maxValue;\r\n        public.maxValue = config.minValue;\r\n    }\r\n\r\n    private.change = function(evt) {\r\n        if (private.analogAction) {\r\n            if (Array.isArray(private.analogAction)) {\r\n                for (let i = 0; i < private.analogAction.length; i++)\r\n                    private.analogAction[i](public, evt);\r\n            } else {\r\n                private.analogAction(public, evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    private.setValue = function(evt, value) {\r\n        if (value < public.minValue) {\r\n            value = public.minValue;\r\n            public.velocity = 0;\r\n        }\r\n        if (value > public.maxValue) {\r\n            value = public.maxValue;\r\n            public.velocity = 0;\r\n        }\r\n        if (Math.abs(public.value - value) > 1e-5) {\r\n            public.value = value;\r\n            if (frag.debugInputs) console.log(\"Analog state\", private.name, \"set to\", value);\r\n            private.change(evt);\r\n        }\r\n    }\r\n\r\n    private.increment = function(evt) {\r\n        public.velocity += public.velocity >= 0 ? private.config.acceleration : private.config.deceleration;\r\n        if (public.velocity > private.config.maxVelocity) public.velocity = private.config.maxVelocity;\r\n        private.setValue(evt, public.value + public.velocity, false);\r\n    }\r\n\r\n    private.decrement = function(evt) {\r\n        public.velocity -= public.velocity <= 0 ? private.config.acceleration : private.config.deceleration;\r\n        if (public.velocity < -private.config.maxVelocity) public.velocity = -private.config.maxVelocity;\r\n        private.setValue(evt, public.value + public.velocity, false);\r\n    }\r\n\r\n    public.setValue = function(evt, value, calcVelocity) {\r\n        if (private.inverted)\r\n            value = public.minValue + public.maxValue - value;\r\n\r\n        if (calcVelocity) public.velocity = value - public.value;\r\n\r\n        private.setValue(evt, value);\r\n    }\r\n\r\n    public.increment = function(evt) {\r\n        if (private.inverted) private.decrement(evt);\r\n        else private.increment(evt);\r\n    }\r\n\r\n    public.decrement = function(evt) {\r\n        if (private.inverted) private.increment(evt);\r\n        else private.decrement(evt);\r\n    }\r\n\r\n    public.setVelocity = function(evt, velocity) {\r\n        if (inverted) public.velocity = -velocity;\r\n        else public.velocity = velocity;\r\n        if (public.velocity > private.config.maxVelocity) public.velocity = private.config.maxVelocity;\r\n        if (public.velocity < -private.config.maxVelocity) public.velocity = -private.config.maxVelocity;\r\n        private.setValue(evt, public.value + public.velocity);\r\n    }\r\n\r\n    return public;\r\n}","// Returne functions that can be bound to digital inputs\r\nwindow.frag.DigitalAction = function(actionName, context) {\r\n    const frag = window.frag;\r\n\r\n    if (context && context.animation) {\r\n        if (/^animation$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (frag.debugInputs) console.log(\"Turning animation\", digitalState.isOn ? \"on\" : \"off\");\r\n                if (digitalState.isOn) context.animation.start();\r\n                else context.animation.stop();\r\n            }\r\n        }\r\n\r\n        if (/^animation-start$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (!digitalState.isOn) {\r\n                    if (frag.debugInputs) console.log(\"Starting animation\");\r\n                    context.animation.start();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (/^animation-stop$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (!digitalState.isOn) {\r\n                    if (frag.debugInputs) console.log(\"Stopping animation\");\r\n                    context.animation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (context && context.sceneObject) {\r\n        if (/^sceneobject$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (frag.debugInputs) console.log(\"Turning scene object\", digitalState.isOn ? \"on\" : \"off\");\r\n                if (digitalState.isOn) context.sceneObject.enable();\r\n                else context.sceneObject.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (context && context.model) {\r\n        if (/^model$/i.test(actionName)) {\r\n            return function(digitalState) {\r\n                if (frag.debugInputs) console.log(\"Turning\", context.model.getName(), \"model\", digitalState.isOn ? \"on\" : \"off\");\r\n                if (digitalState.isOn) context.model.enable();\r\n                else context.model.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}","// Represents an input that can only be on or off. For example keyboard keys or mouse buttons\r\nwindow.frag.DigitalInput = function (inputName, digitalState) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        inputName,\r\n        digitalState,\r\n        toggle: false,\r\n        inverted: false,\r\n        setOn: false,\r\n        setOff: false,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    }\r\n\r\n    const splits = inputName.split(\"-\");\r\n\r\n    const setIsOn = function (evt, isOn) {\r\n        if (private.inverted) isOn = !isOn;\r\n        if (frag.debugInputs) console.log(\"Digital input\", private.inputName, \"is\", isOn ? \"on\" : \"off\");\r\n        if (private.toggle) {\r\n            if (isOn) private.digitalState.toggle(evt);\r\n        } else {\r\n            if (private.setOn || private.setOff) {\r\n                if (isOn) {\r\n                    // Note that it is deliberate that you can set both on and off.\r\n                    // In this case each time you press the key down the digital\r\n                    // state will go on and off again very quickly\r\n                    if (private.setOn) private.digitalState.setIsOn(evt, true);\r\n                    if (private.setOff) private.digitalState.setIsOn(evt, false);\r\n                }\r\n            } else {\r\n                private.digitalState.setIsOn(evt, isOn);\r\n            }\r\n        }\r\n    }\r\n\r\n    if ((/mouse/i).test(inputName)) {\r\n        let buttons = 1;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            if ((/^on$/i).test(splits[i])) private.setOn = true;\r\n            if ((/^off$/i).test(splits[i])) private.setOff = true;\r\n            if ((/^left$/i).test(splits[i])) buttons = 1;\r\n            if ((/^right$/i).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/i).test(splits[i])) buttons = 4;\r\n            if ((/^back$/i).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/i).test(splits[i])) buttons = 16;\r\n            if ((/^eraser$/i).test(splits[i])) buttons = 32;\r\n            if ((/^any$/i).test(splits[i])) buttons = 255;\r\n        }\r\n\r\n        const handler = function (evt) {\r\n            setIsOn(evt, (evt.buttons & buttons) !== 0);\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            frag.canvas.addEventListener(\"mousedown\", handler, false);\r\n            frag.canvas.addEventListener(\"mouseup\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            frag.canvas.removeEventListener(\"mousedown\", handler, false);\r\n            frag.canvas.removeEventListener(\"mouseup\", handler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/pointer/i).test(inputName)) {\r\n        let buttons = 1;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            if ((/^on$/i).test(splits[i])) private.setOn = true;\r\n            if ((/^off$/i).test(splits[i])) private.setOff = true;\r\n            if ((/^left$/i).test(splits[i])) buttons = 1;\r\n            if ((/^right$/i).test(splits[i])) buttons = 2;\r\n            if ((/^middle$/i).test(splits[i])) buttons = 4;\r\n            if ((/^back$/i).test(splits[i])) buttons = 8;\r\n            if ((/^forward$/i).test(splits[i])) buttons = 16;\r\n            if ((/^eraser$/i).test(splits[i])) buttons = 32;\r\n            if ((/^any$/i).test(splits[i])) buttons = 255;\r\n        }\r\n\r\n        const handler = function (evt) {\r\n            setIsOn(evt, (evt.buttons & buttons) !== 0);\r\n            return true;\r\n        }\r\n\r\n        public.enable = function () {\r\n            frag.canvas.addEventListener(\"pointerdown\", handler, false);\r\n            frag.canvas.addEventListener(\"pointerup\", handler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            frag.canvas.removeEventListener(\"pointerdown\", handler, false);\r\n            frag.canvas.removeEventListener(\"pointerup\", handler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    if ((/key/i).test(inputName)) {\r\n        let key;\r\n        let ctrl = false;\r\n        let shift = false;\r\n        let alt = false;\r\n        let meta = false;\r\n\r\n        for (let i = 0; i < splits.length; i++) {\r\n            if ((/^toggle$/i).test(splits[i])) private.toggle = true;\r\n            else if ((/^inverted$/i).test(splits[i])) private.inverted = true;\r\n            else if ((/^on$/i).test(splits[i])) private.setOn = true;\r\n            else if ((/^off$/i).test(splits[i])) private.setOff = true;\r\n            else if (/^ctrl$/i.test(splits[i])) ctrl = true;\r\n            else if (/^shift$/i.test(splits[i])) shift = true;\r\n            else if (/^alt$/i.test(splits[i])) alt = true;\r\n            else if (/^meta$/i.test(splits[i])) meta = true;\r\n            else if (/^key$/i.test(splits[i]));\r\n            else key = splits[i];\r\n        }\r\n\r\n        const handler = function (evt, isDown) {\r\n            if (evt.key !== key ||\r\n                evt.altKey !== alt ||\r\n                evt.ctrlKey !== ctrl ||\r\n                evt.shiftKey !== shift ||\r\n                evt.metaKey !== meta)\r\n                return true;\r\n\r\n            evt.preventDefault();\r\n            setIsOn(evt, isDown);\r\n\r\n            return true;\r\n        }\r\n\r\n        const keyDownHandler = function (evt) {\r\n            return handler(evt, true);\r\n        }\r\n\r\n        const keyUpHandler = function (evt) {\r\n            return handler(evt, false);\r\n        }\r\n\r\n        public.enable = function () {\r\n            document.addEventListener(\"keydown\", keyDownHandler, false);\r\n            document.addEventListener(\"keyup\", keyUpHandler, false);\r\n        }\r\n\r\n        public.disable = function () {\r\n            document.removeEventListener(\"keydown\", keyDownHandler, false);\r\n            document.removeEventListener(\"keyup\", keyUpHandler, false);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","// Represents an on/off state that can be controlled by the player using digital inputs\r\nwindow.frag.DigitalState = function (digitalAction, config, name) {\r\n    const frag = window.frag;\r\n\r\n    if (!config) config = {};\r\n    config.isOn = !!config.isOn;\r\n\r\n    const private = {\r\n        digitalAction,\r\n        config,\r\n        name,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        isOn: config.isOn,\r\n    }\r\n\r\n    private.change = function(evt) {\r\n        if (private.digitalAction) {\r\n            if (Array.isArray(private.digitalAction)) {\r\n                for (let i = 0; i < private.digitalAction.length; i++)\r\n                    private.digitalAction[i](public, evt);\r\n            } else {\r\n                private.digitalAction(public, evt);\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setIsOn = function (evt, isOn) {\r\n        if (isOn !== public.isOn) {\r\n            public.isOn = isOn;\r\n            if (frag.debugInputs) console.log(\"Digital state\", private.name, \"turned\", public.isOn ? \"on\" : \"off\");\r\n            private.change(evt);\r\n        }\r\n        else if (frag.debugInputs) console.log(\"Digital state\", private.name, \"is already\", public.isOn ? \"on\" : \"off\");\r\n    }\r\n\r\n    public.toggle = function (evt) {\r\n        public.isOn = !public.isOn;\r\n        if (frag.debugInputs) console.log(\"Digital state\", private.name, \"toggled to\", public.isOn ? \"on\" : \"off\");\r\n        private.change(evt);\r\n    }\r\n\r\n    return public;\r\n}","(function() {\r\n    let shader;\r\n\r\n    window.frag.hitTest = function(x, y, width, height, scene) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        width = width || frag.canvas.clientWidth;\r\n        height = height || frag.canvas.clientHeight;\r\n        scene = scene || frag.getMainScene();\r\n\r\n        if (!shader) {\r\n            shader = {\r\n                name: \"HitTest\",\r\n                attributes: {},\r\n                uniforms: {},\r\n                is3d: true,\r\n            };\r\n\r\n            const vSource =\r\n                'attribute vec4 a_position;\\n' +\r\n                'uniform mat4 u_clipMatrix;\\n' +\r\n                'void main() {;\\n' +\r\n                '  gl_Position = u_clipMatrix * a_position;\\n' +\r\n                '}';\r\n\r\n            const fSource =\r\n                'precision mediump float;\\n' +\r\n                'uniform vec4 u_color;\\n' +\r\n                'void main() {;\\n' +\r\n                '  gl_FragColor = u_color;\\n' +\r\n                '}';\r\n\r\n            const vertexShader = frag.createShader(shader.name, gl.VERTEX_SHADER, vSource);\r\n            const fragmentShader = frag.createShader(shader.name, gl.FRAGMENT_SHADER, fSource);\r\n            shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n            shader.attributes.position = gl.getAttribLocation(shader.program, \"a_position\");\r\n\r\n            shader.uniforms.clipMatrix = gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n            shader.uniforms.color = gl.getUniformLocation(shader.program, \"u_color\");\r\n\r\n            shader.bind = function (gl) {\r\n                gl.useProgram(shader.program);\r\n            }\r\n\r\n            shader.unbind = function() {}\r\n        }\r\n\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        const frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n        const depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n        gl.viewport(0, 0, width, height);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        const drawContext = {\r\n            gl,\r\n            shader,\r\n            isHitTest: true,\r\n            sceneObjects: [],\r\n            models: [],\r\n        };\r\n\r\n        if (Array.isArray(scene)) {\r\n            for (let i = 0; i < scene.length; i++) {\r\n                scene[i].adjustToViewport(gl);\r\n                scene[i].draw(drawContext);\r\n            }\r\n        } else {\r\n            scene.adjustToViewport(gl);\r\n            scene.draw(drawContext);\r\n        }\r\n\r\n        const pixel = new Uint8Array(4);\r\n        gl.readPixels(x, height - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        const red = pixel[0];\r\n        const green = pixel[1];\r\n        const blue = pixel[2];\r\n        const alpha = pixel[3];\r\n\r\n        const modelId = alpha | (blue << 8) | ((green & 0x0f) << 16);\r\n        const sceneObjectId = ((green & 0xf0) >> 4) | (red << 4);\r\n\r\n        if ((modelId < drawContext.models.length) && (sceneObjectId < drawContext.sceneObjects.length))\r\n            return { \r\n                sceneObject: drawContext.sceneObjects[sceneObjectId],\r\n                model: drawContext.models[modelId]\r\n            };\r\n\r\n        return null;\r\n    };\r\n})();","// A collection of inputs that can be turned on and off.\r\nwindow.frag.InputMethod = function() {\r\n    const private = {\r\n        inputs: [],\r\n        enabled: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    }\r\n\r\n    // Enables all of the inputs for this input method\r\n    public.enable = function() {\r\n        if (!private.enabled) {\r\n            for (var i = 0; i< private.inputs.length; i++)\r\n                private.inputs[i].enable();\r\n            private.enabled = true;\r\n        }\r\n        return public;\r\n    }\r\n\r\n    // Disables all of the inputs for this input method\r\n    public.disable = function() {\r\n        if (private.enabled) {\r\n            private.enabled = false;\r\n            for (var i = 0; i< private.inputs.length; i++)\r\n                private.inputs[i].disable();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    // Adds a new input method\r\n    public.add = function(input) {\r\n        private.inputs.push(input);\r\n        if (private.enabled) input.enable();\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        fonts: {},\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getFont = function(name) {\r\n        var font = private.fonts[name];\r\n        if (!font) {\r\n            font = frag.Font()\r\n                .name(name)\r\n            private.fonts[name] = font;\r\n        }\r\n        return font;\r\n    }\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model(public.shader.is3d)\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (assetCatalog, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = assetCatalog.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(assetCatalog, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","window.frag.PackageLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const round4 = function(n) { return Math.round(n * 10000) / 10000; }\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadFontV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const font = context.assetCatalog.getFont(name);\r\n        if (frag.debugPackageLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is font \" + name);\r\n\r\n        const faceLength = context.header.getUint8(headerOffset++);\r\n        var fontFace = \"\";\r\n        for (let i = 0; i < faceLength; i++) {\r\n            fontFace += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const lineHeight = context.header.getUint16(headerOffset, littleEndian);\r\n        const width = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        const height = context.header.getUint16(headerOffset + 4, littleEndian);\r\n        const charCount = context.header.getUint16(headerOffset + 6, littleEndian);\r\n        headerOffset += 8;\r\n\r\n        if (frag.debugPackageLoader)\r\n            console.log(\"  \" + width + \"x\" + height + \" pixel texture contains \" + charCount + \" characters from \" + lineHeight + \"px \" + fontFace);\r\n\r\n        font.lineHeight(lineHeight);\r\n\r\n        for (let charIndex = 0; charIndex < charCount; charIndex++) {\r\n            const charLength = context.header.getUint8(headerOffset++);\r\n            var char = \"\";\r\n            for (let i = 0; i < charLength; i++) {\r\n                char += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n            const x = context.header.getUint16(headerOffset + 0, littleEndian);\r\n            const y = context.header.getUint16(headerOffset + 2, littleEndian);\r\n            const width = context.header.getUint16(headerOffset + 4, littleEndian);\r\n            const height = context.header.getUint16(headerOffset + 6, littleEndian);\r\n            const originX = context.header.getInt16(headerOffset + 8, littleEndian);\r\n            const originY = context.header.getInt16(headerOffset + 10, littleEndian);\r\n            const advance = context.header.getInt16(headerOffset + 12, littleEndian);\r\n            headerOffset += 14;\r\n\r\n            font.addChar(char, x, y, width, height, originX, originY, advance);\r\n        }\r\n\r\n        const modeLength = context.header.getUint8(headerOffset++);\r\n        var mode = \"\";\r\n        for (let i = 0; i < modeLength; i++) {\r\n            mode += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        if (mode === \"RGB\") font.dataFormat(frag.gl.RGB);\r\n        else if (mode === \"RGBA\") font.dataFormat(frag.gl.RGBA);\r\n        else if (mode === \"L\") font.dataFormat(frag.gl.LUMINANCE);\r\n        else console.error(\"Font \" + name + \" unsupported mode \" + mode);\r\n\r\n        const imageWidth = context.header.getUint16(headerOffset + 0, littleEndian);\r\n        const imageHeight = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        let dataOffset = context.header.getUint32(headerOffset + 4, littleEndian) + context.dataOffset;\r\n        headerOffset += 8;\r\n\r\n        if (imageWidth !== width)             \r\n            console.error(\"Font \" + name + \" width does not match image width\");\r\n        if (imageHeight !== height)             \r\n            console.error(\"Font \" + name + \" height does not match image height\");\r\n\r\n        const dataArray = new Uint8Array(context.data, dataOffset);\r\n        font.fromArrayBuffer(dataArray, 0, width, height);\r\n        return font;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugPackageLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugPackageLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugPackageLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            if (frag.debugPackageLoader && frag.debugMeshes) {\r\n                let msg = \"  vertices[\";\r\n                for (var i = 0; i < verticies.length; i++) {\r\n                    if (i > 0) msg += ', ';\r\n                    msg += round4(verticies[i]);\r\n                }\r\n                msg += \"]\";\r\n                console.log(msg);\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugPackageLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" ms\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            if (frag.debugPackageLoader && frag.debugAnimations) {\r\n                msg = \"  Channel \" + channelName + \" applies to \" + pattern + \" children\"\r\n                console.log(msg);\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n\r\n                if (frag.debugPackageLoader && frag.debugAnimations) {\r\n                    msg = \"    Keyframe[\" + frame + \"] = \" + round4(value) + \" \" + transition;\r\n                    console.log(msg);\r\n                }\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const location = frag.Location(true); // Loaded models are always 3D\r\n        location.translateX = context.header.getFloat32(headerOffset + 0, littleEndian);\r\n        location.translateY = context.header.getFloat32(headerOffset + 4, littleEndian);\r\n        location.translateZ = context.header.getFloat32(headerOffset + 8, littleEndian);\r\n        location.rotateX = context.header.getFloat32(headerOffset + 12, littleEndian);\r\n        location.rotateY = context.header.getFloat32(headerOffset + 16, littleEndian);\r\n        location.rotateZ = context.header.getFloat32(headerOffset + 20, littleEndian);\r\n        location.scaleX = context.header.getFloat32(headerOffset + 24, littleEndian);\r\n        location.scaleY = context.header.getFloat32(headerOffset + 28, littleEndian);\r\n        location.scaleZ = context.header.getFloat32(headerOffset + 32, littleEndian);\r\n        location.isModified = true;\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugPackageLoader) {\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + \r\n                (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations.\" + \r\n                (hasMesh ? \" Paint mesh \" + meshIndex : \" No mesh\") + (hasMaterial ? \" with material \" + materialIndex : \". No material\"));\r\n            console.log(\"Object[\" + objectIndex + \"] at (\" + \r\n                round4(location.translateX) + \",\" + round4(location.translateY) + \",\" + round4(location.translateZ) +\").[\"+ \r\n                round4(location.rotateX) + \",\" + round4(location.rotateY) + \",\" + round4(location.rotateZ) + \"]x(\" + \r\n                round4(location.scaleX) + \",\" + round4(location.scaleY) + \",\" + round4(location.scaleZ) + \")\");\r\n        }\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot);\r\n        model.location = location;\r\n\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugPackageLoader)\r\n            console.log(\"Asset pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {},\r\n            fonts: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 5) {\r\n                    context.fonts[objectIndex] = private.loadFontV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" asset packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","window.frag.Font = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4,\r\n        chars: {},\r\n        lineHeight: 24\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.lineHeight = function (height) {\r\n        private.lineHeight = height;\r\n    }\r\n\r\n    public.addChar = function(char, x, y, width, height, originX, originY, advance) {\r\n        private.chars[char] = { x, y, width, height, originX, originY, advance };\r\n    }\r\n\r\n    public.fromArrayBuffer = function (buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        const textureType = 'diffuse';\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n    public.buildTextMesh = function (text, color, scale) {\r\n        color = color || [0, 0, 0];\r\n        scale = scale || 1;\r\n\r\n        const verticies = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n        const colors = [];\r\n\r\n        const pushVerticies = function (left, right, top, bottom) {\r\n            verticies.push(left);\r\n            verticies.push(bottom);\r\n            verticies.push(0);\r\n\r\n            verticies.push(right);\r\n            verticies.push(top);\r\n            verticies.push(0);\r\n\r\n            verticies.push(left);\r\n            verticies.push(top);\r\n            verticies.push(0);\r\n\r\n            verticies.push(left);\r\n            verticies.push(bottom);\r\n            verticies.push(0);\r\n\r\n            verticies.push(right);\r\n            verticies.push(bottom);\r\n            verticies.push(0);\r\n\r\n            verticies.push(right);\r\n            verticies.push(top);\r\n            verticies.push(0);\r\n\r\n            for (let i = 0; i < 6; i++) {\r\n                colors.push(color[0]);\r\n                colors.push(color[1]);\r\n                colors.push(color[2]);\r\n\r\n                normals.push(0);\r\n                normals.push(0);\r\n                normals.push(-1);\r\n            }\r\n        }\r\n\r\n        const pushTexture = function(left, right, top, bottom) {\r\n            left = left  / private.width;\r\n            right = right  / private.width;\r\n            top = top / private.height;\r\n            bottom = bottom / private.height;\r\n\r\n            uvs.push(left);\r\n            uvs.push(bottom);\r\n\r\n            uvs.push(right);\r\n            uvs.push(top);\r\n\r\n            uvs.push(left);\r\n            uvs.push(top);\r\n\r\n            uvs.push(left);\r\n            uvs.push(bottom);\r\n\r\n            uvs.push(right);\r\n            uvs.push(bottom);\r\n\r\n            uvs.push(right);\r\n            uvs.push(top);\r\n        }\r\n\r\n        const drawChar = function (ch, x) {\r\n            dimensions = private.chars[ch];\r\n            if (!dimensions) return x;\r\n\r\n            const left = x - dimensions.originX;\r\n            const right = left + dimensions.width;\r\n            const top = dimensions.originY;\r\n            const bottom = top - dimensions.height;\r\n\r\n            pushVerticies(left, right, top, bottom);\r\n    \r\n            const texLeft = dimensions.x;\r\n            const texTop = private.height - dimensions.y;\r\n            const texRight = texLeft + dimensions.width;\r\n            const texBottom = texTop - dimensions.height;\r\n\r\n            pushTexture(texLeft, texRight, texTop, texBottom);\r\n\r\n            return x + dimensions.advance;\r\n        }\r\n\r\n        let x = 0;\r\n        for (let i = 0; i < text.length; i++) {\r\n            x = drawChar(text[i], x);\r\n        }\r\n\r\n        return frag.MeshData()\r\n            .addTriangles(verticies, colors, uvs, normals)\r\n            .shadeFlat()\r\n            .textureFlat();\r\n    }\r\n\r\n    public.buildTextModel = function(text, color, scale) {\r\n        const mesh = public.buildTextMesh(text, color, scale);\r\n\r\n        const model = frag.Model(true)\r\n            .shader(frag.fontShader)\r\n            .mesh(mesh)\r\n            .material(public);\r\n        return model;\r\n    }\r\n\r\n    public.updateTextModel = function(model, text, color, scale) {\r\n        const oldMesh = model.getMesh();\r\n        model.mesh(public.buildTextMesh(text, color, scale));\r\n        oldMesh.dispose();\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw({ gl });\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n/*\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);\r\n*/","window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    extract2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    extract3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) * 0.5);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    dot: function (a, b) {\r\n        let result = 0;\r\n        for (let i = 0; i < a.length; i++)\r\n            result += a[i] * b[i];\r\n        return result;\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n    append: function(a, v) {\r\n        for (let i = 0; i < v.length; i++) a.push(v[i]);\r\n    },\r\n    eulerAngles: function(directionVector, upVector) {\r\n        const Vector = window.frag.Vector;\r\n        if (!upVector) upVector = [0, 1, 0];\r\n\r\n        const dir = Vector.normalize(directionVector);\r\n        const up = Vector.normalize(upVector);\r\n\r\n        const pitch = Math.asin(dir[1]);\r\n        const yaw = Math.atan2(dir[0], dir[2]);\r\n\r\n        const wingDir = [-dir[2], 0, dir[0]];\r\n        const vertical = Vector.cross(wingDir, dir);\r\n        const roll = Math.atan2(Vector.dot(wingDir, up), Vector.dot(vertical, up));\r\n\r\n        return [roll, yaw, pitch];\r\n    }\r\n}\r\n","// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","window.frag.Model = function (is3d, parent) {\r\n    const frag = window.frag;\r\n\r\n    if (is3d === undefined) {\r\n        if (parent && parent.location)\r\n            is3d = parent.location.is3d;\r\n        else\r\n            is3d = true;\r\n    }\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n        enabled: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: frag.Location(is3d),\r\n        animations: []\r\n    };\r\n\r\n    public.dispose = function(){\r\n    }\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.getPosition = function() {\r\n        return frag.ScenePosition(public.location);\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== public.location.is3d){\r\n            const m = public.location.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" location and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMesh = function() {\r\n        return private.meshData;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.enable = function() {\r\n        private.enabled = true;\r\n    }\r\n\r\n    public.disable = function() {\r\n        private.enabled = false;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(undefined, public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe(drawWireframe);\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(drawWireframe, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (drawContext, modelToWorldMatrix, modelToClipMatrix, animationMap) {\r\n        if (!public.location) return public;\r\n\r\n        const animationState = animationMap && private.name ? animationMap[private.name] : null;\r\n        const location = animationState\r\n            ? public.location.clone().add(animationState.location)\r\n            : public.location;\r\n        const localMatrix = location.getMatrix();\r\n\r\n        if (location.is3d) {\r\n            modelToWorldMatrix = frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix);\r\n        } else {\r\n            modelToWorldMatrix = frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix);\r\n        }\r\n\r\n        const shader = drawContext.shader || public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData && private.enabled) {\r\n            shader.bind(drawContext.gl);\r\n\r\n            if (drawContext.isHitTest && shader.uniforms.color !== undefined) {\r\n                const sceneObjectId = drawContext.sceneObjects.length - 1;\r\n                const modelId = drawContext.models.length;\r\n                drawContext.models.push(public);\r\n\r\n                const red = sceneObjectId >> 4;\r\n                const green = ((sceneObjectId & 0x0f) << 4) | ((modelId & 0xf0000) >> 16);\r\n                const blue = (modelId & 0xff00) >> 8;\r\n                const alpha = modelId & 0xff;\r\n                drawContext.gl.uniform4f(shader.uniforms.color, red / 255, green / 255, blue / 255, alpha / 255);\r\n            }\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(drawContext.gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                const modelToClipTransform = location.is3d ? frag.Transform(modelToClipMatrix) : frag.Transform2D(modelToClipMatrix);\r\n                modelToClipTransform.apply(drawContext.gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                const modelToWorldTransform = location.is3d ? frag.Transform(modelToWorldMatrix) : frag.Transform2D(modelToWorldMatrix);\r\n                modelToWorldTransform.apply(drawContext.gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(drawContext.gl, shader);\r\n\r\n            shader.unbind(drawContext.gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(drawContext, modelToWorldMatrix, modelToClipMatrix, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.getCamera = function() {\r\n        return private.activeCamera;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (drawContext) {\r\n        if (private.activeCamera) {\r\n            drawContext.worldToClipTransform = private.activeCamera.worldToClipTransform;\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(drawContext);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","window.frag.SceneObject = function (model) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        location: null,\r\n        animationLocation: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    private.getLocation = function () {\r\n        if (private.location) return private.location;\r\n        if (!private.model.location) return null;\r\n        private.location = frag.Location(private.model.location.is3d);\r\n        return private.location;\r\n    };\r\n\r\n    private.getAnimationLocation = function () {\r\n        if (private.animationLocation) return private.animationLocation;\r\n        if (!private.model.location) return null;\r\n        private.animationLocation = frag.Location(private.model.location.is3d);\r\n        return private.animationLocation;\r\n    };\r\n\r\n    /**\r\n     * @returns a ScemePosition object that can be used to manipulate the position\r\n     * scale and orientation of this object in the scene\r\n     */\r\n    public.getPosition = function () {\r\n        const location = private.getLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * @returns a ScenePosition object that can be used to change the animation\r\n     * position of the scene object. The animation position is added to the scene\r\n     * object's static position to create a temporary animation effect\r\n     */\r\n    public.getAnimationPosition = function () {\r\n        const location = private.getAnimationLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * Clears any animation position that was set. This is more efficient\r\n     * than setting the animation location to zero\r\n     */\r\n    public.clearAnimationPosition = function () {\r\n        private.animationLocation = null;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Includes this object in the scene. Call this function when the object\r\n     * could possibly be seen by the player. The engine will go through the\r\n     * process of transforming the mesh into screen space and clip anything\r\n     * that is not within the screen bounds. To avoid this expensive operations\r\n     * for objects that you know cannot be seen by the player, call the disable() \r\n     * function.\r\n     */\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Excludes this object in the scene. Call this function when the object\r\n     * is not viewable through the player's viewport - for example it moved\r\n     * behind the player's point of view.\r\n     */\r\n     public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Frees any resources consumed by this scene object and removes it from\r\n     * the scene.\r\n     */\r\n    public.dispose = function() {\r\n        public.disable();\r\n        for (let animationName in public.animations) {\r\n            public.animations[animationName].dispose();\r\n        }\r\n        return public;\r\n    }\r\n\r\n    /**\r\n     * This is used internally by the engine. Don't call this from your game code\r\n     */\r\n    public.draw = function (drawContext) {\r\n        if (!private.enabled) return public;\r\n\r\n        let location = private.getLocation();\r\n        if (!location) return public;\r\n\r\n        if (private.animationLocation) {\r\n            location = location.clone().add(private.animationLocation);\r\n        }\r\n\r\n        const worldToClipMatrix = drawContext.worldToClipTransform.getMatrix();\r\n        const modelToWorldMatrix = location.getMatrix();\r\n        const modelToClipMatrix = drawContext.worldToClipTransform.is3d\r\n            ? frag.Matrix.m4Xm4(worldToClipMatrix, modelToWorldMatrix)\r\n            : frag.Matrix.m3Xm3(worldToClipMatrix, modelToWorldMatrix);\r\n\r\n        if (drawContext.isHitTest) {\r\n            drawContext.sceneObjects.push(public);\r\n        }\r\n\r\n        private.model.draw(drawContext, modelToWorldMatrix, modelToClipMatrix, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","// This class provides a set of helper methods for\r\n// manipulating a Location object\r\nwindow.frag.ScenePosition = function (location) {\r\n    const private = {\r\n        location: null,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setLocation = function (value) {\r\n        private.location = value || window.frag.Location();\r\n        return public;\r\n    }\r\n    public.setLocation(location);\r\n\r\n    public.getMatrix = function () {\r\n        return private.location.getMatrix();\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.location.scaleX;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.location.scaleY;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.location.scaleZ;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.location.scaleX = s;\r\n        private.location.scaleY = s;\r\n        private.location.scaleZ = s;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.location.scaleX = x;\r\n        private.location.scaleY = y;\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.location.scaleX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.location.scaleY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * scales[0],\r\n            private.location.scaleY * scales[1],\r\n            private.location.scaleZ * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * xScale,\r\n            private.location.scaleY * yScale,\r\n            private.location.scaleZ * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.location.rotateX;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.location.rotateY;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.location.rotateZ;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.rotateX, private.location.rotateY, private.location.rotateZ];\r\n        else\r\n            return [private.location.rotateX, private.location.rotateY];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.location.rotateX = v[0];\r\n        if (v.length > 1) private.location.rotateY = v[1];\r\n        if (v.length > 2) private.location.rotateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.location.rotateX = x;\r\n        private.location.rotateY = y;\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.location.rotateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.location.rotateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + euler[0],\r\n            private.location.rotateY + euler[1],\r\n            private.location.rotateZ + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + x,\r\n            private.location.rotateY + y,\r\n            private.location.rotateZ + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.location.translateX;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.location.translateY;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.location.translateZ;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.translateX, private.location.translateY, private.location.translateZ];\r\n        else\r\n            return [private.location.translateX, private.location.translateY];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.location.translateX = v[0];\r\n        if (v.length > 1) private.location.translateY = v[1];\r\n        if (v.length > 2) private.location.translateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.location.translateX = x;\r\n        private.location.translateY = y;\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.location.translateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.location.translateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.location.translateX + direction[0],\r\n            private.location.translateY + direction[1],\r\n            private.location.translateZ + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.location.translateX + x,\r\n            private.location.translateY + y,\r\n            private.location.translateZ + z);\r\n    }\r\n\r\n    return public;\r\n};","window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.extract2D(array, index);\r\n        return frag.Vector.extract3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.startFunctions.push(function(frag) {\r\n    frag.fontShader = frag.Shader()\r\n        .name(\"Font\")\r\n        .diffuseTexture()\r\n        .compile();\r\n});\r\n","window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, vec2(a_texcoord.x, 1.0 - a_texcoord.y));\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, vec2(v_texcoord.x, 1.0 - v_texcoord.y)).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, vec2(v_texcoord.x, 1.0 - v_texcoord.y));\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, vec2(v_texcoord.x, 1.0 - v_texcoord.y)).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","window.frag.startFunctions.push(function(frag) {\r\n    frag.uiShader = frag.Shader()\r\n        .name(\"UI\")\r\n        .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n        .matrix2D()       // Transformation matricies are 2D\r\n        .diffuseTexture() // Adds support for diffuse texture mapping\r\n        .compile();       // Compile the shader\r\n});\r\n","// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Location\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\nrequire(\"./Shaders/FontShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Font\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Plane\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/PackageLoader\");\r\n\r\nrequire(\"./Input/HitTest\");\r\nrequire(\"./Input/InputMethod\");\r\nrequire(\"./Input/DigitalState\");\r\nrequire(\"./Input/AnalogState\");\r\nrequire(\"./Input/DigitalInput\");\r\nrequire(\"./Input/AnalogInput\");\r\nrequire(\"./Input/DigitalAction\");\r\nrequire(\"./Input/AnalogAction\");\r\n"],"sourceRoot":""}